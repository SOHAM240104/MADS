{
  "metadata": {
    "description": "Docker command dataset",
    "created": "2025-09-21",
    "num_examples": 2415,
    "command_types": [
      "docker"
    ],
    "categories": [
      "container_management",
      "image_management",
      "network",
      "volume_management",
      "monitoring",
      "configuration"
    ],
    "complexity_levels": {
      "basic": "Simple commands with 0-1 parameters",
      "intermediate": "Commands with multiple parameters or basic piping",
      "advanced": "Complex commands with multiple operations or advanced features"
    },
    "parameter_types": {
      "flag": "Simple on/off switches",
      "value": "Parameters that take values",
      "filter": "Filtering conditions",
      "format": "Output formatting options"
    }
  },
  "examples": [
    {
      "id": 35477,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that have the Ubuntu image as their ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35478,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the containers that have exited with a status code of 1.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35479,
      "type": "docker",
      "category": "image_management",
      "input": "Provide a comprehensive list of nginx images, including their repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35480,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of all containers, indicating their status as well. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 35481,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers with Ubuntu as their ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35482,
      "type": "docker",
      "category": "container_management",
      "input": "\"Dear Docker, in order to proceed, you must log in to the new registry on newregistry.example.org. Use your username, Mary Doe, to log in.\"",
      "output": "\"docker login newregistry.example.org --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 35483,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, please show me the containers with exited status.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35484,
      "type": "docker",
      "category": "container_management",
      "input": "Please stop all containers that are currently operational.",
      "output": "\"docker stop $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35485,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the running containers with the ACME label from the vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35486,
      "type": "docker",
      "category": "image_management",
      "input": "Please show me a table of images, including the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35487,
      "type": "docker",
      "category": "image_management",
      "input": "I want to see a list of all Docker images, including the dangling ones. Could you please provide their repository, tags, and IDs as well?",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35488,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, display the running containers rooted from Debian.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35489,
      "type": "docker",
      "category": "process_management",
      "input": "Politely stop my_container by sending the SIGINT signal, Docker.",
      "output": "\"docker kill -s SIGINT my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35490,
      "type": "docker",
      "category": "image_management",
      "input": "Present all the images without any truncation of their details.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 35491,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the tasks that are running in Docker.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 35492,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the containers with the name \"my-container\", please. ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 35493,
      "type": "docker",
      "category": "process_management",
      "input": "I want to know the status of all containers, whether running or stopped. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 35494,
      "type": "docker",
      "category": "container_management",
      "input": "Attach the container \"my_container\" to the \"my_network\" network.",
      "output": "\"docker login --username=marydoe --password-stdin < ~/herpassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 35495,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the Docker images that were built before the image \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 35496,
      "type": "docker",
      "category": "image_management",
      "input": "I need you to list the repositories and tags of your images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35497,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with the repository, tag, and digest information of the images.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35498,
      "type": "docker",
      "category": "container_management",
      "input": "You should login to the new registry with your username and password.",
      "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 35499,
      "type": "docker",
      "category": "container_management",
      "input": "Kindly provide your username and password from the specified file to login.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 35500,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the containers with a healthy health status.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35501,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of all containers that exited before the container with ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35502,
      "type": "docker",
      "category": "process_management",
      "input": "Get the names, images, and status of the containers for me.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35503,
      "type": "docker",
      "category": "process_management",
      "input": "Let me know the current status and sizes of the running containers.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35504,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the Docker containers that have exited and are related to the nginx image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35505,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers that are currently running on the network my-network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35506,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of images along with their repository, tag and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35507,
      "type": "docker",
      "category": "process_management",
      "input": "I need the complete details of all the currently running containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 35508,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the tasks currently running in Docker.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 35509,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the running containers that expose port 80.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35510,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the list of images with dangling status.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 35511,
      "type": "docker",
      "category": "process_management",
      "input": "I want to know the last 4 containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 35512,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers having an unhealthy health status.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35513,
      "type": "docker",
      "category": "process_management",
      "input": "Find the containers that have the ancestor as mongo and volumes set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35514,
      "type": "docker",
      "category": "image_management",
      "input": "Get me the Docker image IDs. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 35515,
      "type": "docker",
      "category": "process_management",
      "input": "Tell me the status and sizes of the containers that are currently running.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35516,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the nginx images' repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35517,
      "type": "docker",
      "category": "container_management",
      "input": "Please login to the new registry using your username and password.",
      "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 35518,
      "type": "docker",
      "category": "process_management",
      "input": "List the running containers that have the ACME label from vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35519,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of all the images in Docker.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35520,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, I want to see all the running containers, but only those with the 'network=host' filter.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35521,
      "type": "docker",
      "category": "process_management",
      "input": "Don't keep me hanging, show me the details of the recently executed container immediately.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 35522,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the running containers that are marked as unhealthy.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35523,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the running containers. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35524,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the repository, tag, and digest information for the images.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35525,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the containers that are currently running and have the Ubuntu image. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35526,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images that are not being used by any containers.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35527,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, please terminate all the containers linked to my image.",
      "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35528,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers with an unhealthy health status.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35529,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are named \"my-container\", please. ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 35530,
      "type": "docker",
      "category": "process_management",
      "input": "Please show the running containers that have been created before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35531,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me the list of containers with port 80 exposed. ",
      "output": "docker ps --filter 'expose=80'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35532,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the details of the three latest containers, including the inactive ones.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35533,
      "type": "docker",
      "category": "image_management",
      "input": "Can you display the repositories and tags of your images, please?",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35534,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are currently healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35535,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with the complete details of running containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 35536,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch me the full details of all active containers without any truncation.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 35537,
      "type": "docker",
      "category": "image_management",
      "input": "Could you display all the images along with their repository, tag, and ID?",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35538,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers with the name \"my-container\". ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 35539,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers with exited status, please.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35540,
      "type": "docker",
      "category": "process_management",
      "input": "Show running containers filtered with the Ubuntu ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35541,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the containers that have exited prior to container 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35542,
      "type": "docker",
      "category": "container_management",
      "input": "Make sure to login to the new registry using your username and password.",
      "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 35543,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the repository, tag, and ID of the nginx images.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35544,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the list of all containers, including the inactive ones. Show me the information about the first three.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35545,
      "type": "docker",
      "category": "container_management",
      "input": "Dear Docker, please log in to yetanotherregistry.example.net with the credentials of user \"marydoe\" and her password.",
      "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 35546,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch me the containers that are running and are on the network my-network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35547,
      "type": "docker",
      "category": "process_management",
      "input": "Please gracefully terminate confusioner by killing it with a SIGHUP signal.",
      "output": "\"docker kill -s SIGHUP confusioner\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35548,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch all the containers that have the status running on my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35549,
      "type": "docker",
      "category": "process_management",
      "input": "Display all running containers that are part of the frontend network.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35550,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the information of the last executed container ASAP.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 35551,
      "type": "docker",
      "category": "container_management",
      "input": "Hey there, please stop all the running containers gracefully within 5 seconds.",
      "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35552,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers with the volume set as \"/data\" and the ancestor set as \"postgres\".",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35553,
      "type": "docker",
      "category": "container_management",
      "input": "Please halt my_container gracefully after 10 seconds.",
      "output": "\"docker stop -t 10 my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 35554,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the running Docker containers created since 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35555,
      "type": "docker",
      "category": "process_management",
      "input": "Hand over the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35556,
      "type": "docker",
      "category": "process_management",
      "input": "I need to view the details of the last 4 containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 35557,
      "type": "docker",
      "category": "image_management",
      "input": "Get rid of all the dangling images.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 35558,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the details of the running containers?",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35559,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that are running on the network my-network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35560,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of all the Docker images and their digests. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 35561,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that have exited and are based on the Alpine image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35562,
      "type": "docker",
      "category": "image_management",
      "input": "Get the digests of all the available Docker images. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 35563,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the containers running the Ubuntu image. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35564,
      "type": "docker",
      "category": "container_management",
      "input": "\"Docker, I need you to log in using the username johndoe.\"",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 35565,
      "type": "docker",
      "category": "container_management",
      "input": "Log in now, Docker! Use your username and password for the authentication process.",
      "output": "\"docker login --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 35566,
      "type": "docker",
      "category": "process_management",
      "input": "Display the sizes of all the containers.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35567,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the details of any containers created since 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35568,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the running containers with port 443 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35569,
      "type": "docker",
      "category": "process_management",
      "input": "Display the details of the three latest containers, including the inactive ones.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35570,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the list of all containers along with their status. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 35571,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, can you list all the containers with exited status, please?",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35572,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the information of the three most recent containers.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35573,
      "type": "docker",
      "category": "container_management",
      "input": "You can access anotherregistry.example.com by logging in with your username as \"johndoe\" and password as \"mypassword\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 35574,
      "type": "docker",
      "category": "image_management",
      "input": "What images are there since the nginx:alpine image?",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 35575,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the unique identifiers of all containers, regardless of their current state. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35576,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of the containers that exited prior to the container 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35577,
      "type": "docker",
      "category": "container_management",
      "input": "Please log in to the container registry with your username and password.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 35578,
      "type": "docker",
      "category": "process_management",
      "input": "Display the IDs of all containers, regardless of their status. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35579,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers that are currently running.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35580,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, list all the containers that are in exited status.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35581,
      "type": "docker",
      "category": "image_management",
      "input": "Make sure to include all the information of the images.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 35582,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the containers that have exited successfully with a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35583,
      "type": "docker",
      "category": "image_management",
      "input": "Can you provide me with a list of the repositories and tags used for your images?",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35584,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers, including their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35585,
      "type": "docker",
      "category": "image_management",
      "input": "List the repositories and tags of your images, if it's not too much trouble.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35586,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the digests for all the available images in Docker. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 35587,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, I'm interested in the running containers. Can you apply the 'network=host' filter, please?",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35588,
      "type": "docker",
      "category": "image_management",
      "input": "Show the images that were built before \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 35589,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve a list of all the images showcasing their corresponding repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35590,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the complete information of all the currently running containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 35591,
      "type": "docker",
      "category": "container_management",
      "input": "Please authenticate yourself as Johndoe to login to Docker.",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 35592,
      "type": "docker",
      "category": "container_management",
      "input": "Johndoe, please use your username to login to Docker.",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 35593,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the images along with their repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35594,
      "type": "docker",
      "category": "image_management",
      "input": "I need a list of all the Docker images with their corresponding digests. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 35595,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the running containers with an unhealthy health status.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35596,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, show me the containers that are in exited status.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35597,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with a list of Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35598,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers that are considered healthy.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35599,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers that have a healthy status.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35600,
      "type": "docker",
      "category": "process_management",
      "input": "Provide a list of containers started since 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35601,
      "type": "docker",
      "category": "image_management",
      "input": "List all images that have the label \"maintainer=nginx\" and include their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35602,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, I request you to cease all the active containers smoothly within 5 seconds.",
      "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35603,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the names and images of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35604,
      "type": "docker",
      "category": "process_management",
      "input": "I want the list of all the containers that have exited before container with ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35605,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch me all the available Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35606,
      "type": "docker",
      "category": "image_management",
      "input": "Bring me the images along with their repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35607,
      "type": "docker",
      "category": "process_management",
      "input": "Show running containers that have the Ubuntu image as their ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35608,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see the running containers that have port 8080 exposed. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35609,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the names and statuses of all running containers for me.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35610,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers with the Ubuntu ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35611,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see the running containers with port 80 exposed. ",
      "output": "docker ps --filter 'expose=80'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35612,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the containers that are running and have the network set to my-network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35613,
      "type": "docker",
      "category": "process_management",
      "input": "Kindly stop my_container1 and my_container2, ensuring a graceful termination with the SIGINT signal.",
      "output": "\"docker kill -s SIGINT my_container1 my_container2\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35614,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the list of running containers' IDs and images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35615,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers in the frontend network that have a running status.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35616,
      "type": "docker",
      "category": "container_management",
      "input": "I request you to login using your account details mentioned in the password file.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 35617,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve a list of all containers and their names, images, and current status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35618,
      "type": "docker",
      "category": "process_management",
      "input": "I need the full information of active containers in one go.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 35619,
      "type": "docker",
      "category": "image_management",
      "input": "Could you show me all the images along with their respective repository, tag, and ID?",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35620,
      "type": "docker",
      "category": "process_management",
      "input": "Cease the operation of all running containers immediately.",
      "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35621,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers running prior to 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35622,
      "type": "docker",
      "category": "process_management",
      "input": "Please list down the containers that are running with an unhealthy health status.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35623,
      "type": "docker",
      "category": "process_management",
      "input": "Only show me the containers that have a health status of healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35624,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the names and statuses of all running containers, please.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35625,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of all Docker images, including those that are not being used at the moment.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 35626,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the containers with a health status of healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35627,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers along with their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35628,
      "type": "docker",
      "category": "image_management",
      "input": "I need the repository, tag, and ID of all the images created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35629,
      "type": "docker",
      "category": "process_management",
      "input": "Please, Docker, can you show me the running containers and filter them with 'network=host'?",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35630,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see all containers with their names, images, and current status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35631,
      "type": "docker",
      "category": "image_management",
      "input": "Show me all the available Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35632,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running Docker containers filtered by creation that started from 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35633,
      "type": "docker",
      "category": "image_management",
      "input": "Get me the repository, tag, and ID of all the images that were created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35634,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the IDs of the Docker images. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 35635,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the list of containers that are currently running and have volumes attached to \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35636,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers along with their respective status. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 35637,
      "type": "docker",
      "category": "process_management",
      "input": "Display only the IDs of the containers that are running. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35638,
      "type": "docker",
      "category": "process_management",
      "input": "List the running containers along with their sizes.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35639,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images and unveil their repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35640,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the repository, tag, and digest for the images on the server.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35641,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers with port 9090 published and in a running state.",
      "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35642,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see all containers and their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35643,
      "type": "docker",
      "category": "process_management",
      "input": "Can you give me the details of containers running on the Debian image?",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35644,
      "type": "docker",
      "category": "process_management",
      "input": "List down all the currently active containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35645,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the status and sizes of all the containers.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35646,
      "type": "docker",
      "category": "image_management",
      "input": "Display the list of nginx images.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35647,
      "type": "docker",
      "category": "image_management",
      "input": "Display the Docker images created earlier than \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 35648,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with the running containers on my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35649,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers and their status, regardless of their state. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 35650,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers which have the ancestor set as mongo and volume set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35651,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide the list of containers that are currently running and have port 443 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35652,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with a table that shows the repository, tag, ID, and size of the images.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35653,
      "type": "docker",
      "category": "process_management",
      "input": "Filter and show me only the containers that are marked as healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35654,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers in exited status, Docker, please.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35655,
      "type": "docker",
      "category": "container_management",
      "input": "Make sure to stop any containers utilizing my image.",
      "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35656,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the running containers created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35657,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the stopped containers.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35658,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the active containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35659,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the running containers for me. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35660,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch me the information about nginx images.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35661,
      "type": "docker",
      "category": "container_management",
      "input": "Please authenticate me using your login credentials.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 35662,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, kindly log me in as \"marydoe\" to proceed further.",
      "output": "\"docker login --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 35663,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that have exited and are using Alpine as the base image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35664,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch all images with the label \"maintainer=nginx\" along with their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35665,
      "type": "docker",
      "category": "process_management",
      "input": "Please list the IDs of the currently running containers. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35666,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the containers that have the status running and network set to my-network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35667,
      "type": "docker",
      "category": "process_management",
      "input": "Present me with the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35668,
      "type": "docker",
      "category": "container_management",
      "input": "Make sure to login to the Docker container registry using your username and password.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 35669,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images and present them in a table showing the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35670,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, terminate the container called \"my_container\" gracefully with the SIGTERM signal.",
      "output": "\"docker kill -s SIGTERM my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35671,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that are currently running and were created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35672,
      "type": "docker",
      "category": "container_management",
      "input": "Please log in to anotherregistry.example.com using your username \"johndoe\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 35673,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, could you please display the running containers, but only the ones with the 'network=host' filter?",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35674,
      "type": "docker",
      "category": "process_management",
      "input": "Display the list of running containers and their images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35675,
      "type": "docker",
      "category": "image_management",
      "input": "Show me only the Docker image IDs, please. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 35676,
      "type": "docker",
      "category": "image_management",
      "input": "List down the images along with their repository, tag, and digest on the server.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35677,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see all the containers that are currently running and having the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35678,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are both running and healthy.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35679,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the IDs of all currently running containers. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35680,
      "type": "docker",
      "category": "image_management",
      "input": "Can you provide me with a list of images that are dangling?",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 35681,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running Docker containers filtered by creation since 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35682,
      "type": "docker",
      "category": "process_management",
      "input": "Present the details of the last container execution right away.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 35683,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve a list of images' repository, tag, and ID for those created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35684,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers that are currently running and exposing port 443.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35685,
      "type": "docker",
      "category": "process_management",
      "input": "Display all containers that were started after the commit 3e33ad9a0b2e and are currently running.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35686,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the containers that have exited with a status code of 1?",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35687,
      "type": "docker",
      "category": "process_management",
      "input": "Display containers that are running based on the Ubuntu image.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35688,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the names of the running containers.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35689,
      "type": "docker",
      "category": "process_management",
      "input": "Stop all running containers.",
      "output": "\"docker kill $(docker ps -q)\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35690,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of all Docker images, regardless of whether they are dangling or not. Provide their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35691,
      "type": "docker",
      "category": "process_management",
      "input": "I am interested to know about the containers that exited and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35692,
      "type": "docker",
      "category": "image_management",
      "input": "Can you please present the images and their corresponding repository, tag, and ID?",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35693,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the containers that have exited with a status code of 1.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35694,
      "type": "docker",
      "category": "process_management",
      "input": "Get the details of all the running containers created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35695,
      "type": "docker",
      "category": "image_management",
      "input": "Present the Docker images which were created before the image \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 35696,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the containers currently running and having volumes mounted at \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35697,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers based on the Ubuntu image.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35698,
      "type": "docker",
      "category": "container_management",
      "input": "\"Docker, login now! Your username is johndoe.\"",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 35699,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that have exited and are based on the Alpine parent image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35700,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers that are currently running and have the network set to my-network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35701,
      "type": "docker",
      "category": "process_management",
      "input": "Give me an overview of the current status and sizes of the containers.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35702,
      "type": "docker",
      "category": "process_management",
      "input": "Display all containers and their respective names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35703,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers that have the volume set to \"/data\" and are based on the \"postgres\" image.",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35704,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the containers that have exited successfully?",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35705,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of images with the \"maintainer=nginx\" label and the corresponding repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35706,
      "type": "docker",
      "category": "image_management",
      "input": "Get the repository, tag, and digest details for each image on the server.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35707,
      "type": "docker",
      "category": "image_management",
      "input": "Provide details of the nginx images.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35708,
      "type": "docker",
      "category": "process_management",
      "input": "Show the running containers with a creation time before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35709,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the containers that have exited successfully and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35710,
      "type": "docker",
      "category": "process_management",
      "input": "Bring down all running containers using SIGTERM signal.",
      "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35711,
      "type": "docker",
      "category": "process_management",
      "input": "List the names of the last five running containers.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35712,
      "type": "docker",
      "category": "container_management",
      "input": "Please ensure that all the containers based on my image are stopped.",
      "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35713,
      "type": "docker",
      "category": "container_management",
      "input": "Stop all containers running my image.",
      "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35714,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35715,
      "type": "docker",
      "category": "container_management",
      "input": "Terminate any running containers within Docker.",
      "output": "\"docker stop $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35716,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with a list of images showing their repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35717,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers that are currently running and have the Ubuntu image. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35718,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers, even the inactive ones. Show the details for the first three.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35719,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, I want you to authenticate yourself on myregistry.example.com. Use the username \"johndoe\" and the password located in the file ~/mypassword.txt.",
      "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 35720,
      "type": "docker",
      "category": "container_management",
      "input": "Hey, log in to my registry now! Your username is \"johndoe\" and the password is \"mypassword\".",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 35721,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, terminate the container named \"my_container\" gracefully using SIGTERM signal.",
      "output": "\"docker kill -s SIGTERM my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35722,
      "type": "docker",
      "category": "process_management",
      "input": "Kill all running containers using SIGTERM signal.",
      "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35723,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the containers with the ancestor set as mongo and volumes set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35724,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images that have been built since the nginx:alpine image.",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 35725,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the details of containers running on Debian, please.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35726,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have the status as running and are on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35727,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the status and sizes of the running containers.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35728,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the repository, tag, and digest of the images.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35729,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all containers that are currently running and exposing port 443.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35730,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers that are healthy.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35731,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch all containers that were launched later than 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35732,
      "type": "docker",
      "category": "container_management",
      "input": "Please stop confusioner within 10 seconds.",
      "output": "\"docker stop -t 10 confusioner\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 35733,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the running containers' names and statuses.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35734,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the list of containers having /app as volume and mongo as ancestor.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35735,
      "type": "docker",
      "category": "process_management",
      "input": "Reveal the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35736,
      "type": "docker",
      "category": "process_management",
      "input": "Can you provide a list of tasks that are currently running in Docker?",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 35737,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see a list of all containers, no matter their status. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35738,
      "type": "docker",
      "category": "process_management",
      "input": "Show the containers that have exited before the container having the ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35739,
      "type": "docker",
      "category": "process_management",
      "input": "I request the details of the last container executed promptly.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 35740,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the images that are not currently being used by any containers.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35741,
      "type": "docker",
      "category": "image_management",
      "input": "List the repository names, tags, and IDs for the dangling images.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35742,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images showing their repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35743,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me all the containers that are in a healthy condition.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35744,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the list of all containers currently running and having the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35745,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers in the frontend network and their respective running statuses.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35746,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers with exited status, Docker.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35747,
      "type": "docker",
      "category": "image_management",
      "input": "Show the repository, tag, and ID for each image.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35748,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the details of containers started after 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35749,
      "type": "docker",
      "category": "image_management",
      "input": "Give a detailed list of images with their repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35750,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve a list of running containers and filter them by volumes mounted at \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35751,
      "type": "docker",
      "category": "image_management",
      "input": "Bring me the images with their repository, tag, and ID information.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35752,
      "type": "docker",
      "category": "process_management",
      "input": "Please show the running containers with a creation time prior to 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35753,
      "type": "docker",
      "category": "process_management",
      "input": "What are the containers that are currently running?",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35754,
      "type": "docker",
      "category": "process_management",
      "input": "I want to know which containers are running and exposing port 80. ",
      "output": "docker ps --filter 'expose=80'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35755,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that have exited and are using the Alpine image as the parent.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35756,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the complete details of currently running containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 35757,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers with port 9090 published.",
      "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35758,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide a list of containers created before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35759,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve only the containers that have exited, but don't include the one with ID '3e33ad9a0b2e'.",
      "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35760,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the running container IDs. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35761,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have exited, but only those with an ID before '3e33ad9a0b2e'.",
      "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35762,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see a list of containers that have a running status. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35763,
      "type": "docker",
      "category": "process_management",
      "input": "Only show me the containers that have exited, but don't include the one with ID '3e33ad9a0b2e'.",
      "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35764,
      "type": "docker",
      "category": "process_management",
      "input": "Tell me which containers are running at the moment.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35765,
      "type": "docker",
      "category": "image_management",
      "input": "Can you show me the digests of all the available Docker images? ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 35766,
      "type": "docker",
      "category": "process_management",
      "input": "Hey there, could you show me the containers that are currently running? ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35767,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers that have stopped running.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35768,
      "type": "docker",
      "category": "container_management",
      "input": "Make sure to login using the username \"marydoe\" and the password \"herpassword\".",
      "output": "\"docker login --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 35769,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers which are running and have a healthy status.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35770,
      "type": "docker",
      "category": "image_management",
      "input": "I need to see all the images with their complete details.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 35771,
      "type": "docker",
      "category": "process_management",
      "input": "Show me a complete list of all containers, regardless of whether they are currently running or stopped. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35772,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers with port 80 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35773,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with the list of containers currently running and publishing port 8080. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35774,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the list of active containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35775,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the images and IDs for all running containers.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35776,
      "type": "docker",
      "category": "process_management",
      "input": "Show me a list of running containers that are based on Debian, Docker.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35777,
      "type": "docker",
      "category": "container_management",
      "input": "I want you to stop my container immediately.",
      "output": "\"docker stop -t 0 my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 35778,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with a list of running containers that have port 8080 published. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35779,
      "type": "docker",
      "category": "image_management",
      "input": "List all the images along with their repository, tag, ID, and size, organizing them into a table.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35780,
      "type": "docker",
      "category": "container_management",
      "input": "Mary Doe, please login using your username (marydoe) and password (herpassword).",
      "output": "\"docker login --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 35781,
      "type": "docker",
      "category": "process_management",
      "input": "I need to view the last 4 containers that were running. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 35782,
      "type": "docker",
      "category": "process_management",
      "input": "List down all the running containers created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35783,
      "type": "docker",
      "category": "image_management",
      "input": "Bring me the list of images, including the repository, tag, and ID information.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35784,
      "type": "docker",
      "category": "process_management",
      "input": "Display a list of containers with the name \"my-container\". ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 35785,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the tags and repository names for the dangling images.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35786,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers with their names, images, and current status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35787,
      "type": "docker",
      "category": "image_management",
      "input": "Get the information about images including repository, tag, and digest.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35788,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the containers that are not running anymore.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35789,
      "type": "docker",
      "category": "process_management",
      "input": "Could you show me the running container IDs? ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35790,
      "type": "docker",
      "category": "image_management",
      "input": "List the available images and their corresponding repository, tag, and digest.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35791,
      "type": "docker",
      "category": "container_management",
      "input": "\"Docker, log in as johndoe to proceed further.\"",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 35792,
      "type": "docker",
      "category": "container_management",
      "input": "\"Mary, please authenticate yourself on the new registry located at newregistry.example.org using your Docker credentials.\"",
      "output": "\"docker login newregistry.example.org --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 35793,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that have the volume as \"/data\" and are of the \"postgres\" image.",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35794,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the tasks running in Docker.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 35795,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images and their corresponding repository, tag, and digest.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35796,
      "type": "docker",
      "category": "container_management",
      "input": "It would be great if you could login to the new registry. Please provide your username and password.",
      "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 35797,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the containers that are currently active and have volumes linked to the \"/data\" path.",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35798,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the containers named \"my-container\" for me, please. ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 35799,
      "type": "docker",
      "category": "process_management",
      "input": "Show me only the IDs of the containers that are in a running state. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35800,
      "type": "docker",
      "category": "image_management",
      "input": "Please provide me with a list of all the images including their repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35801,
      "type": "docker",
      "category": "image_management",
      "input": "Get the repository, tag, and digest details for each image.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35802,
      "type": "docker",
      "category": "image_management",
      "input": "I want to see the images along with their digests. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 35803,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the details of currently running containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 35804,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the exited containers before the one with ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35805,
      "type": "docker",
      "category": "process_management",
      "input": "Share the names of the last five containers that are currently running.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35806,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see the running tasks in Docker.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 35807,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, display the running containers, but make sure to filter them with 'network=host'.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35808,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the running containers?",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35809,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that were created before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35810,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers which have the ancestor set to mongo and volume set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35811,
      "type": "docker",
      "category": "process_management",
      "input": "Give me all the container IDs, whether they are running or stopped. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35812,
      "type": "docker",
      "category": "image_management",
      "input": "Provide the repository, tag, and ID details for each image.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35813,
      "type": "docker",
      "category": "container_management",
      "input": "\"Hey Docker, how about logging in to myregistry.example.com using 'johndoe' as the username?\"",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 35814,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, it's time to end ginto with a SIGHUP signal.",
      "output": "\"docker kill -s SIGHUP ginto\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35815,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers running based on the Ubuntu image.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35816,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the list of containers that exited successfully and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35817,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that are based on the Ubuntu image.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35818,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that have the status running and are on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35819,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the information about the containers currently running.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35820,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers with the volume set to \"/data\" and the ancestor set to \"postgres\".",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35821,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the names, images, and current status of all containers.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35822,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that are currently running and have an unhealthy health status.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35823,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, I want you to kill the container called \"my_container\" using the SIGTERM signal.",
      "output": "\"docker kill -s SIGTERM my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35824,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the Docker images that were created prior to \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 35825,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with a list of currently running containers and their sizes.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35826,
      "type": "docker",
      "category": "container_management",
      "input": "Terminate my_container immediately.",
      "output": "\"docker stop -t 0 my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 35827,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the details of containers started since 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35828,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the running containers filtered by network=my-network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35829,
      "type": "docker",
      "category": "process_management",
      "input": "Can you provide me with the names and images of all currently running containers?",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35830,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers along with their names and statuses.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35831,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running Docker containers created since 4f66ad9a0b2e. ",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35832,
      "type": "docker",
      "category": "process_management",
      "input": "Bring an end to my_container.",
      "output": "\"docker kill my_container\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35833,
      "type": "docker",
      "category": "process_management",
      "input": "Stop all containers currently running in Docker.",
      "output": "\"docker kill -s SIGTERM $(docker ps -q)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35834,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers that have a healthy health status only.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35835,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the names of containers created before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35836,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve a list of containers and their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35837,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers that are currently running and have port 8080 published.",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35838,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the digests for all the Docker images. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 35839,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, I need to see all the running containers that belong to the Debian image.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35840,
      "type": "docker",
      "category": "process_management",
      "input": "Return a list of all running containers that have port 8080 published. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35841,
      "type": "docker",
      "category": "image_management",
      "input": "I would like to see the details of all the images including their repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35842,
      "type": "docker",
      "category": "image_management",
      "input": "List the nginx images, including the repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35843,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers and show their status. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 35844,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers that are currently active and have port 9090 published.",
      "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35845,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers, including stopped ones. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35846,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the running containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35847,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers that have been created after 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35848,
      "type": "docker",
      "category": "image_management",
      "input": "Get me only the Docker image IDs. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 35849,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the details of containers that have exited with a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35850,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers running and their corresponding images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35851,
      "type": "docker",
      "category": "image_management",
      "input": "Please provide me with the details of all the images including their corresponding repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35852,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the containers that are currently in a healthy state.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35853,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running Docker containers since 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35854,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the repository and tag of each image in your collection.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35855,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the list of exited containers with a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35856,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the IDs of all the containers that are currently running. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35857,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have exited with a status code of 1.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35858,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers with the label 'com.example.vendor' set as ACME from vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35859,
      "type": "docker",
      "category": "process_management",
      "input": "Enumerate the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35860,
      "type": "docker",
      "category": "image_management",
      "input": "Please display only the IDs of Docker images. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 35861,
      "type": "docker",
      "category": "process_management",
      "input": "Find all containers that are running and have an unhealthy health status.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35862,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the images and display their repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35863,
      "type": "docker",
      "category": "process_management",
      "input": "Get me a comprehensive list of all the currently running containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 35864,
      "type": "docker",
      "category": "container_management",
      "input": "Authenticate to the registry at anotherregistry.example.com with your credentials.",
      "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 35865,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that are currently running along with their names and images.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35866,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers that have the name \"my-container\", please. ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 35867,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the currently active containers without truncating any information.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 35868,
      "type": "docker",
      "category": "image_management",
      "input": "Generate a list of images' repository, tag, and ID, excluding the ones created after the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35869,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the complete information of all currently running containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 35870,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the list of containers that are currently running. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35871,
      "type": "docker",
      "category": "image_management",
      "input": "List all the nginx images that are available.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35872,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me all the containers, regardless of whether they are running or stopped. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35873,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the Docker containers that have exited and have nginx as their ancestor.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35874,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers with the volume set as \"/data\" and the ancestor set as \"postgres\".",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35875,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see the details of the container you executed most recently.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 35876,
      "type": "docker",
      "category": "process_management",
      "input": "Find all Docker containers with an exited status and an image ancestry of nginx.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35877,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the details of the dangling images including their repository names.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35878,
      "type": "docker",
      "category": "process_management",
      "input": "Please give me a list of all containers, regardless of their status. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 35879,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers that expose the port 80. ",
      "output": "docker ps --filter 'expose=80'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35880,
      "type": "docker",
      "category": "image_management",
      "input": "Please display the dangling images.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 35881,
      "type": "docker",
      "category": "image_management",
      "input": "Can you show me the digests for all the Docker images? ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 35882,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of nginx images.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35883,
      "type": "docker",
      "category": "container_management",
      "input": "It's necessary to log in using your credentials \"johndoe\" and \"mypassword\" on anotherregistry.example.com.",
      "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 35884,
      "type": "docker",
      "category": "process_management",
      "input": "Please list all the containers running with the label 'com.example.vendor' set as ACME from the vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35885,
      "type": "docker",
      "category": "image_management",
      "input": "Show the Docker images to me.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35886,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers, whether running or stopped. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35887,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images before \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 35888,
      "type": "docker",
      "category": "image_management",
      "input": "List the images filtered by the label \"maintainer=nginx\" and show their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35889,
      "type": "docker",
      "category": "container_management",
      "input": "Login to your account on myregistry.example.com with the username johndoe.",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 35890,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the names and statuses of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35891,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, I'd like to see the running containers, but filter them by 'network=host', please.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35892,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, list only the running containers that are using the 'network=host' filter.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35893,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers that have an unhealthy health status.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35894,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that are running and have a healthy status.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35895,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the details of the 4 most recent containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 35896,
      "type": "docker",
      "category": "process_management",
      "input": "Can you list the containers that have exited without any errors?",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35897,
      "type": "docker",
      "category": "container_management",
      "input": "To continue, log in to myregistry.example.com. Make sure to use the username johndoe.",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 35898,
      "type": "docker",
      "category": "container_management",
      "input": "Stop all running containers on Docker.",
      "output": "\"docker stop $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35899,
      "type": "docker",
      "category": "process_management",
      "input": "Share with me the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35900,
      "type": "docker",
      "category": "image_management",
      "input": "Hey Docker, can you please show me all the Docker images? This should include the dangling ones. Additionally, provide their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35901,
      "type": "docker",
      "category": "process_management",
      "input": "Tell me which containers are running at the moment. Limit to the first five.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35902,
      "type": "docker",
      "category": "image_management",
      "input": "Display the dangling images and their repository names, tags, and IDs.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35903,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the containers that are currently running and have an unhealthy health status.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35904,
      "type": "docker",
      "category": "process_management",
      "input": "Show me containers running with the Ubuntu ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35905,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the running containers that are based on Debian.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35906,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the container IDs of all containers, irrespective of their status. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35907,
      "type": "docker",
      "category": "image_management",
      "input": "List all dangling images.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 35908,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of all the containers running in the frontend network.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35909,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the running Docker containers since 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35910,
      "type": "docker",
      "category": "process_management",
      "input": "List the last 4 containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 35911,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers with the label 'com.example.vendor' set as ACME from the ACME vendor.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35912,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers that have the port 80 exposed. ",
      "output": "docker ps --filter 'expose=80'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35913,
      "type": "docker",
      "category": "process_management",
      "input": "I want to know the names and statuses of all running containers, please.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35914,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the containers that are in exited status, Docker.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35915,
      "type": "docker",
      "category": "process_management",
      "input": "Provide the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35916,
      "type": "docker",
      "category": "container_management",
      "input": "\"Docker, it's time to log in to myregistry.example.com using the username 'johndoe'.\"",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 35917,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images maintained by nginx and show their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35918,
      "type": "docker",
      "category": "process_management",
      "input": "Display the details of the last 4 containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 35919,
      "type": "docker",
      "category": "process_management",
      "input": "I would like to see a list of running containers and their images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35920,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, terminate every single container with immediate effect!",
      "output": "\"docker kill -s SIGTERM $(docker ps -q)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35921,
      "type": "docker",
      "category": "container_management",
      "input": "Take down any containers that are running my image.",
      "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35922,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, display the running containers with the ancestor as Debian.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35923,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, it's time to log in to anotherregistry.example.com as \"johndoe\" and gain access.",
      "output": "\"docker login anotherregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 35924,
      "type": "docker",
      "category": "image_management",
      "input": "Generate a list of all images' repository, tag, and ID for those created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35925,
      "type": "docker",
      "category": "process_management",
      "input": "List the status and sizes of all the running containers.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35926,
      "type": "docker",
      "category": "process_management",
      "input": "Could you please return a list of containers running on Debian?",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35927,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers that have a healthy status.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35928,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the list of running container IDs. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35929,
      "type": "docker",
      "category": "image_management",
      "input": "Do not truncate any details while listing the images.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 35930,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers and their respective images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35931,
      "type": "docker",
      "category": "process_management",
      "input": "I want to know the tasks running in Docker.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 35932,
      "type": "docker",
      "category": "process_management",
      "input": "Return a list of running containers with published port 8080. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35933,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers named \"my-container\". ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 35934,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see the information about the last 4 containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 35935,
      "type": "docker",
      "category": "process_management",
      "input": "I would like to see the names and images of all containers that are currently running.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35936,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers that have exited before container with the ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35937,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the list of containers that have exited, but exclude the one with ID '3e33ad9a0b2e'.",
      "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35938,
      "type": "docker",
      "category": "image_management",
      "input": "Display all Docker images, including the ones that are not currently active.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 35939,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the unique identifiers of all containers, regardless of their status. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35940,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the repository names, tags, and IDs of the images that are not associated with any containers.",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35941,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the dangling images.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 35942,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the list of containers that are currently running.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35943,
      "type": "docker",
      "category": "image_management",
      "input": "I want only the Docker image IDs.",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 35944,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with the Docker images that were built before the image tag \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 35945,
      "type": "docker",
      "category": "image_management",
      "input": "Get me the repository, tag, and ID of the images that were created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35946,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the IDs of all containers, regardless of their status. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35947,
      "type": "docker",
      "category": "image_management",
      "input": "List all Docker image IDs. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 35948,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers that are currently running on port 8080. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35949,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see a list of all containers, no matter if they are running or stopped. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35950,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the full details of all the currently running containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 35951,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the containers running with the ACME label set by the ACME vendor.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35952,
      "type": "docker",
      "category": "container_management",
      "input": "End the functioning of the container called \"confusioner\" immediately.",
      "output": "\"docker stop confusioner\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35953,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the last 4 containers that were active.",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 35954,
      "type": "docker",
      "category": "process_management",
      "input": "Tell me the information about containers that have exited successfully and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35955,
      "type": "docker",
      "category": "process_management",
      "input": "List down all the running containers on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35956,
      "type": "docker",
      "category": "image_management",
      "input": "List the images in Docker.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35957,
      "type": "docker",
      "category": "process_management",
      "input": "I need a list of the container IDs for the running containers. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 35958,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with the running containers filtered by network=my-network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35959,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the list of running containers derived from the Debian image.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35960,
      "type": "docker",
      "category": "process_management",
      "input": "Terminate my_container instantly.",
      "output": "\"docker kill my_container\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35961,
      "type": "docker",
      "category": "process_management",
      "input": "I am interested in knowing the list of containers that exited and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35962,
      "type": "docker",
      "category": "image_management",
      "input": "Please display the repositories and tags of your images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35963,
      "type": "docker",
      "category": "process_management",
      "input": "Provide a list of containers that are currently running and have port 443 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35964,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the containers currently running with port 8080 published? ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35965,
      "type": "docker",
      "category": "process_management",
      "input": "I want to know which container you executed recently.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 35966,
      "type": "docker",
      "category": "image_management",
      "input": "Please download the nginx image.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35967,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers that have exited and filter them by ID, excluding '3e33ad9a0b2e'.",
      "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35968,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers in the frontend network that are currently running.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 35969,
      "type": "docker",
      "category": "process_management",
      "input": "I would like to see the names and statuses of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35970,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the details of all Docker images, even the inactive ones.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 35971,
      "type": "docker",
      "category": "image_management",
      "input": "List all the images with their repository, tag and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35972,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the containers that are running and have port 8080 published? ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35973,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers that are currently active and have volumes linked to the \"/data\" path.",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35974,
      "type": "docker",
      "category": "process_management",
      "input": "Show me a comprehensive list of running containers and their sizes.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35975,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch all containers that were launched after 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35976,
      "type": "docker",
      "category": "image_management",
      "input": "Showcase the repository, tag, and ID for all images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35977,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the dangling images and their repository names.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35978,
      "type": "docker",
      "category": "image_management",
      "input": "Display all the available Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 35979,
      "type": "docker",
      "category": "image_management",
      "input": "List all the images and include their repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35980,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch me a comprehensive list of all active containers without any truncation.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 35981,
      "type": "docker",
      "category": "container_management",
      "input": "Please halt all running containers in Docker.",
      "output": "\"docker stop $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35982,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the running containers that have port 80 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35983,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35984,
      "type": "docker",
      "category": "process_management",
      "input": "Tell me the names and statuses of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35985,
      "type": "docker",
      "category": "process_management",
      "input": "Show me a list of running containers that are rooted from Debian, Docker.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35986,
      "type": "docker",
      "category": "container_management",
      "input": "Hi Docker, could you please grant me access by logging me in with the username \"marydoe\"?",
      "output": "\"docker login --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 35987,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have started since 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35988,
      "type": "docker",
      "category": "process_management",
      "input": "Can you display the containers that have exited and exclude the one with an ID of '3e33ad9a0b2e'?",
      "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35989,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35990,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that are in a stopped state.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35991,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the containers that have the volume set to \"/data\" and are based on the \"postgres\" image.",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35992,
      "type": "docker",
      "category": "container_management",
      "input": "Ensure that you are logged in using Mary Doe's credentials - username: marydoe, password: herpassword.",
      "output": "\"docker login --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 35993,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, can you kindly stop my_container1 and my_container2 by sending them a SIGINT signal for a graceful termination?",
      "output": "\"docker kill -s SIGINT my_container1 my_container2\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 35994,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, log in to myregistry.example.com right now! Don't forget to use the username \"johndoe\" and the password \"mypassword\".",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 35995,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that are currently running and in a healthy state.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35996,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me the images and their associated repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 35997,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are not running and have the Alpine image as their parent.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35998,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the containers that are currently running. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 35999,
      "type": "docker",
      "category": "process_management",
      "input": "Could you provide the information about the running containers?",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36000,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the images and show their repository, tag, and ID values.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36001,
      "type": "docker",
      "category": "image_management",
      "input": "Could you provide me the IDs of Docker images? ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 36002,
      "type": "docker",
      "category": "image_management",
      "input": "Get the images with the label \"maintainer=nginx\" and include their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36003,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers created before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36004,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers with the health status as healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36005,
      "type": "docker",
      "category": "process_management",
      "input": "Find containers that are running and have been created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36006,
      "type": "docker",
      "category": "process_management",
      "input": "Hey there, display the containers that have a running status. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36007,
      "type": "docker",
      "category": "container_management",
      "input": "I need you to halt any running my_image containers.",
      "output": "\"docker stop $(docker ps -q --filter status=running --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36008,
      "type": "docker",
      "category": "image_management",
      "input": "List all the repositories and tags associated with your images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36009,
      "type": "docker",
      "category": "process_management",
      "input": "Please give me the list of containers that are running on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36010,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the list of containers currently running.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36011,
      "type": "docker",
      "category": "image_management",
      "input": "I want to see the comprehensive information about all Docker images, including the inactive ones.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 36012,
      "type": "docker",
      "category": "process_management",
      "input": "What containers are currently running? Include only the first five.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36013,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the containers that are currently running on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36014,
      "type": "docker",
      "category": "container_management",
      "input": "Login to the new registry using your username and password, please.",
      "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36015,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the repository, tag, and digest details of all the images on the server.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36016,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of the running containers with the Ubuntu image. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36017,
      "type": "docker",
      "category": "image_management",
      "input": "Display the Docker images created prior to \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36018,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the containers that have volumes mounted at \"/data\" and are currently running.",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36019,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, I command you to log in immediately using your username and password.",
      "output": "\"docker login --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36020,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the containers currently running and having the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36021,
      "type": "docker",
      "category": "process_management",
      "input": "Could you provide the information about the last five running containers?",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36022,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers with the Ubuntu image. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36023,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, please log in to myregistry.example.com using the credentials found in ~/mypassword.txt. The username is \"johndoe\".",
      "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36024,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the names and images of all containers that are currently running.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36025,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers that are currently running. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36026,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the details of containers that exited successfully and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36027,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the IDs of the containers that are currently in the running state. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36028,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers that have port 443 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36029,
      "type": "docker",
      "category": "container_management",
      "input": "Kindly log in to myregistry.example.com by entering your username as johndoe.",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36030,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers and filter them based on volumes connected to \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36031,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of images maintained by nginx and include the details of their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36032,
      "type": "docker",
      "category": "process_management",
      "input": "Could you provide the information about the first five running containers?",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36033,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the details of nginx images, such as the repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36034,
      "type": "docker",
      "category": "image_management",
      "input": "Could you please show me all the Docker images, including their repository, tags, and IDs? This should also include the dangling ones.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36035,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers with the status as \"exited\" and the ancestor set as Alpine.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36036,
      "type": "docker",
      "category": "container_management",
      "input": "Go ahead and log in to myregistry.example.com using \"johndoe\" as your username and \"mypassword\" as your password.",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36037,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide the running containers created before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36038,
      "type": "docker",
      "category": "process_management",
      "input": "Please display all the containers with the volume as \"/data\" and the image as \"postgres\".",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36039,
      "type": "docker",
      "category": "process_management",
      "input": "List the running containers and include their names and statuses.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36040,
      "type": "docker",
      "category": "process_management",
      "input": "What are the containers that are currently active?",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36041,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the names and statuses of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36042,
      "type": "docker",
      "category": "process_management",
      "input": "Display the status of all containers. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 36043,
      "type": "docker",
      "category": "image_management",
      "input": "List the repository names, tags, and IDs for the images that are not in use.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36044,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with a list of containers running with the label 'com.example.vendor' set as ACME from the vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36045,
      "type": "docker",
      "category": "process_management",
      "input": "Present me with a detailed list of currently active containers without any truncation.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36046,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the containers that are running and were created after the 3e33ad9a0b2e commit.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36047,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers currently running and exposing port 8080. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36048,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers with their names and statuses.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36049,
      "type": "docker",
      "category": "process_management",
      "input": "Show me a summary of the running containers and their sizes.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36050,
      "type": "docker",
      "category": "container_management",
      "input": "\"Docker, I need you to log in to myregistry.example.com. Please use 'johndoe' as your username.\"",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36051,
      "type": "docker",
      "category": "image_management",
      "input": "Provide a table of images that includes information like the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36052,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the details of the 4 most recent containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 36053,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the available Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36054,
      "type": "docker",
      "category": "process_management",
      "input": "List all active containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36055,
      "type": "docker",
      "category": "container_management",
      "input": "Please log in with your username and password in order to access the container registry.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36056,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the images and IDs of all the running containers, please.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36057,
      "type": "docker",
      "category": "process_management",
      "input": "Get the last 4 containers that were recently running. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 36058,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers with volumes mounted at \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36059,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the list of tasks running in Docker.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 36060,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the list of running containers with port 443 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36061,
      "type": "docker",
      "category": "process_management",
      "input": "Show me a summary of the containers that are currently running and their sizes.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36062,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with information about running containers that are based on Debian.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36063,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers that have the name \"my-container\". ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 36064,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the details of containers that have exited and are using Alpine as the base.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36065,
      "type": "docker",
      "category": "image_management",
      "input": "Display the images along with their repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36066,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that have exited and are using Alpine as their parent image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36067,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are running and belong to the frontend network.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36068,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers in the frontend network and their running statuses.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36069,
      "type": "docker",
      "category": "image_management",
      "input": "Display the list of all the images along with their repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36070,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, I need you to log in to my registry at myregistry.example.com. Use the username \"johndoe\" and the password \"mypassword\".",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36071,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, kindly log in to myregistry.example.com with the username \"johndoe\" and password from ~/mypassword.txt.",
      "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36072,
      "type": "docker",
      "category": "process_management",
      "input": "Show containers that expose port 80 and are running.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36073,
      "type": "docker",
      "category": "image_management",
      "input": "Show all the images without missing any details.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36074,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, list all the containers with exited status, please.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36075,
      "type": "docker",
      "category": "process_management",
      "input": "Check the status of all containers. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 36076,
      "type": "docker",
      "category": "process_management",
      "input": "Terminate all running containers silently.",
      "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36077,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers that are part of the frontend network.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36078,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, please kill my_container gracefully using the SIGINT signal.",
      "output": "\"docker kill -s SIGINT my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36079,
      "type": "docker",
      "category": "container_management",
      "input": "It's time to log in to myregistry.example.com. Ensure to use your username as \"johndoe\" and your password as \"mypassword\".",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36080,
      "type": "docker",
      "category": "image_management",
      "input": "Can you please fetch me the nginx images along with their repository, tag, and ID?",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36081,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers that are in a healthy state.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36082,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the first five running containers?",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36083,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see all the containers that are healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36084,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the list of containers that are currently running.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36085,
      "type": "docker",
      "category": "process_management",
      "input": "List the running containers with an unhealthy health status.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36086,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers in the frontend network and their running status.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36087,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the unique identifiers of all containers, regardless of their current state. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36088,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the list of all containers, including the inactive ones. Give me information about the first three.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36089,
      "type": "docker",
      "category": "image_management",
      "input": "Give me only the Docker image IDs. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 36090,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers that are in a healthy condition.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36091,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the running containers labeled with 'com.example.vendor' set as ACME from the vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36092,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers in the frontend network filtered by their running status.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36093,
      "type": "docker",
      "category": "process_management",
      "input": "Let me know the sizes of all the containers.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36094,
      "type": "docker",
      "category": "image_management",
      "input": "Display the available Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36095,
      "type": "docker",
      "category": "image_management",
      "input": "I only want to see the Docker image IDs. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 36096,
      "type": "docker",
      "category": "image_management",
      "input": "Help me find the nginx images and display their repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36097,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, I request you to log in to anotherregistry.example.com. Your username is \"johndoe\" and password is \"mypassword\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36098,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers with port 443 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36099,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers in the frontend network, filtered by running status.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36100,
      "type": "docker",
      "category": "process_management",
      "input": "Display running containers filtered by the Ubuntu ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36101,
      "type": "docker",
      "category": "process_management",
      "input": "Can you provide me with the IDs of all containers, whether stopped or running? ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36102,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, please end the container named \"ginto\" by sending the SIGTERM signal.",
      "output": "\"docker kill -s SIGTERM ginto\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36103,
      "type": "docker",
      "category": "container_management",
      "input": "Login to anotherregistry.example.com using your personal username (\"johndoe\") and password (\"mypassword\").",
      "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36104,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the list of Docker images that were created before \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36105,
      "type": "docker",
      "category": "container_management",
      "input": "Please log me in using your credentials, Johndoe.",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36106,
      "type": "docker",
      "category": "process_management",
      "input": "Display the list of running containers that are in a healthy state.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36107,
      "type": "docker",
      "category": "image_management",
      "input": "Display all the Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36108,
      "type": "docker",
      "category": "image_management",
      "input": "Please display all the Docker images, even the ones that are not being used at the moment.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 36109,
      "type": "docker",
      "category": "image_management",
      "input": "List out the images along with their repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36110,
      "type": "docker",
      "category": "process_management",
      "input": "Can you tell me the status of all containers, including the ones that are not running? ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 36111,
      "type": "docker",
      "category": "process_management",
      "input": "Give me an overview of the most recent container you launched.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36112,
      "type": "docker",
      "category": "process_management",
      "input": "List all the docker containers that have exited with a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36113,
      "type": "docker",
      "category": "image_management",
      "input": "I need a list of all the image repositories and their respective tags.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36114,
      "type": "docker",
      "category": "process_management",
      "input": "Display the list of containers that are running and have a healthy status.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36115,
      "type": "docker",
      "category": "image_management",
      "input": "I want an overview of all Docker images, including the ones that are not currently in use.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 36116,
      "type": "docker",
      "category": "process_management",
      "input": "I need the IDs of all containers, regardless of their status. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36117,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with a list of all the Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36118,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the repository, tag, and digest details of all the images.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36119,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide the status of all containers. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 36120,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with the running containers on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36121,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the details of the images that are not associated with any containers.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36122,
      "type": "docker",
      "category": "process_management",
      "input": "Give me an update on the status and sizes of all the containers.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36123,
      "type": "docker",
      "category": "process_management",
      "input": "Show running containers with the Ubuntu ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36124,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the current nginx images.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36125,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers that have the ACME label from vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36126,
      "type": "docker",
      "category": "image_management",
      "input": "Please show me only the IDs of Docker images. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 36127,
      "type": "docker",
      "category": "image_management",
      "input": "Print the images in a table that includes the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36128,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers with their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36129,
      "type": "docker",
      "category": "image_management",
      "input": "Display the repository, tag, and digest of all the images.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36130,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the containers named \"my-container\". ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 36131,
      "type": "docker",
      "category": "process_management",
      "input": "I would like to see a list of running containers along with their images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36132,
      "type": "docker",
      "category": "container_management",
      "input": "Please stop all running instances of my_image container.",
      "output": "\"docker stop $(docker ps -q --filter status=running --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36133,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with a list of containers that have the label 'com.example.vendor' set as ACME and currently running.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36134,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, ensure the container with the name \"my_container\" is terminated by sending the SIGTERM signal.",
      "output": "\"docker kill -s SIGTERM my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36135,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the repository names, tags, and IDs of the images that are not being used.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36136,
      "type": "docker",
      "category": "container_management",
      "input": "It would be great if you could authenticate yourself on anotherregistry.example.com with your username \"johndoe\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36137,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the containers that are currently running and having the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36138,
      "type": "docker",
      "category": "process_management",
      "input": "Terminate my_container.",
      "output": "\"docker kill my_container\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36139,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, I need you to log me in as Johndoe.",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36140,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the details of the three most recent containers, regardless of their status.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36141,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are currently running and have port 8080 published. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36142,
      "type": "docker",
      "category": "image_management",
      "input": "I need the repository, tag, and digest of all the images in the system.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36143,
      "type": "docker",
      "category": "container_management",
      "input": "\"Hey Docker, before proceeding further, make sure you are logged into the new registry on newregistry.example.org. I will need your username for that.\"",
      "output": "\"docker login newregistry.example.org --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36144,
      "type": "docker",
      "category": "process_management",
      "input": "Show the containers that have exited and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36145,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the running containers with full information.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36146,
      "type": "docker",
      "category": "image_management",
      "input": "List all the available images stored in Docker.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36147,
      "type": "docker",
      "category": "process_management",
      "input": "Show me a list of running containers rooted from Debian, Docker.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36148,
      "type": "docker",
      "category": "process_management",
      "input": "List the running tasks in Docker, please.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 36149,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with information about containers running on the Debian image.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36150,
      "type": "docker",
      "category": "image_management",
      "input": "List all the images along with their repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36151,
      "type": "docker",
      "category": "process_management",
      "input": "Terminate all the containers that are in a exited state. ",
      "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=exited)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36152,
      "type": "docker",
      "category": "process_management",
      "input": "Display the active containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36153,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers with the status as \"exited\" and kill them. ",
      "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=exited)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36154,
      "type": "docker",
      "category": "image_management",
      "input": "I would like to see the details of all the images including their corresponding repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36155,
      "type": "docker",
      "category": "process_management",
      "input": "Let me know the current status and sizes of the containers that are currently running.",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36156,
      "type": "docker",
      "category": "container_management",
      "input": "\"Hey Docker, authenticate yourself using your username so you can access the new registry at newregistry.example.org.\"",
      "output": "\"docker login newregistry.example.org --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36157,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see all containers, showing their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36158,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, kindly log in to myregistry.example.com using the username \"johndoe\" and the password stored in ~/mypassword.txt. Please make sure you authenticate successfully.",
      "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36159,
      "type": "docker",
      "category": "process_management",
      "input": "Please fetch the containers that have exposed port 80. ",
      "output": "docker ps --filter 'expose=80'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36160,
      "type": "docker",
      "category": "container_management",
      "input": "Please provide me with your login credentials from the file so that I can authenticate you.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36161,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide a list of containers currently running on Debian.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36162,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the digests for all the available Docker images. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 36163,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the digests of all the images in Docker. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 36164,
      "type": "docker",
      "category": "process_management",
      "input": "List the running containers which were created after the 3e33ad9a0b2e commit.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36165,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images in their entirety, please.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36166,
      "type": "docker",
      "category": "container_management",
      "input": "Stop my_container within 10 seconds, please.",
      "output": "\"docker stop -t 10 my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 36167,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, please show me the running containers and filter them by 'network=host'.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36168,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the repository, tag, and ID of the images that were created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36169,
      "type": "docker",
      "category": "process_management",
      "input": "Display running containers with the Ubuntu image as their ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36170,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers with their names and statuses.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36171,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all containers since 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36172,
      "type": "docker",
      "category": "process_management",
      "input": "Show the containers that have exited before the container with the ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36173,
      "type": "docker",
      "category": "process_management",
      "input": "I want to know the container's status and size.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36174,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the container IDs of all containers, regardless of whether they are running or stopped. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36175,
      "type": "docker",
      "category": "process_management",
      "input": "Find the containers that have exited before the one with the ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36176,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of images with their repository, tag, and ID, but only for those created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36177,
      "type": "docker",
      "category": "image_management",
      "input": "Display the images and their associated repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36178,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have port 8080 exposed and are currently running. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36179,
      "type": "docker",
      "category": "process_management",
      "input": "Could you display the containers that have exited without errors?",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36180,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the list of containers that have exited, but exclude the one with ID '3e33ad9a0b2e'.",
      "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36181,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of images that have the label \"maintainer=nginx\" and their respective repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36182,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers running in the frontend network with their respective statuses.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36183,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have volumes connected to \"/data\" and are currently running.",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36184,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, I request you to log in to the registry yetanotherregistry.example.net as user \"marydoe\" with the password \"herpassword\".",
      "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36185,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, I want you to list the running containers, but only show me the ones that are using the 'network=host' filter.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36186,
      "type": "docker",
      "category": "image_management",
      "input": "Display the Docker images created before the image tag \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36187,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the tags and IDs of the images that are not being used.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36188,
      "type": "docker",
      "category": "process_management",
      "input": "Just tell me about the container you ran recently right now.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36189,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers that are currently running and having the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36190,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the running container IDs, please. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36191,
      "type": "docker",
      "category": "container_management",
      "input": "Could you please login to the new registry? Use your username and password.",
      "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36192,
      "type": "docker",
      "category": "process_management",
      "input": "I'm interested in knowing the names and statuses of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36193,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the repository, tag, and ID of the images that were created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36194,
      "type": "docker",
      "category": "image_management",
      "input": "Display the nginx image repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36195,
      "type": "docker",
      "category": "process_management",
      "input": "Find the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36196,
      "type": "docker",
      "category": "process_management",
      "input": "Can you fetch all running containers and their names and statuses?",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36197,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36198,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers with a creation time before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36199,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the list of containers which have the ancestor as mongo and volumes set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36200,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the containers that have exited and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36201,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the available images in Docker.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36202,
      "type": "docker",
      "category": "process_management",
      "input": "Please list the containers with the name \"my-container\" for me. ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 36203,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with the complete list of running containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36204,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the list of containers that have exited and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36205,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the currently running containers. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36206,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve containers that have the volume \"/data\" and are based on the \"postgres\" image.",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36207,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see only the IDs of the containers that are currently running. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36208,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, I only want to see the running containers that are using the 'network=host' filter.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36209,
      "type": "docker",
      "category": "image_management",
      "input": "Display the repository names, tags, and IDs of the images that are dangling.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36210,
      "type": "docker",
      "category": "process_management",
      "input": "Tell me which containers are running at the moment. Limit to the last five.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36211,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, please stop all the containers derived from my image.",
      "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36212,
      "type": "docker",
      "category": "process_management",
      "input": "Please kill my_container1 and my_container2 gracefully utilizing the SIGINT signal.",
      "output": "\"docker kill -s SIGINT my_container1 my_container2\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36213,
      "type": "docker",
      "category": "container_management",
      "input": "Please stop my_container1 and my_container2.",
      "output": "\"docker stop my_container1 my_container2\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36214,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve a list of images' repository, tag, and ID, but only for those created before the latest ginto image.",
      "output": "docker images -f \"before=ginto:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36215,
      "type": "docker",
      "category": "process_management",
      "input": "Can you list the containers that have exited successfully?",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36216,
      "type": "docker",
      "category": "container_management",
      "input": "Cease operation of any my_image containers that are currently running.",
      "output": "\"docker stop $(docker ps -q --filter status=running --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36217,
      "type": "docker",
      "category": "image_management",
      "input": "I would appreciate it if you could show me all the Docker images along with their repository, tags, and IDs. This should include the ones that are dangling.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36218,
      "type": "docker",
      "category": "process_management",
      "input": "Show all the running containers with the Ubuntu image. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36219,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the repository, tag, and digest for all the images.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36220,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the IDs and images for all the running containers.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36221,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images and arrange them in a table showing the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36222,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the details of all active containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36223,
      "type": "docker",
      "category": "container_management",
      "input": "Hey Docker, why don't you log in to anotherregistry.example.com using the username \"johndoe\"?",
      "output": "\"docker login anotherregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36224,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see the running containers with port 80 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36225,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36226,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, cease all currently running containers.",
      "output": "\"docker stop $(docker ps -q)\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36227,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see the containers called \"my-container\". ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 36228,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are currently running and exposing port 80. ",
      "output": "docker ps --filter 'expose=80'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36229,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch me the list of all the Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36230,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the containers that are currently healthy?",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36231,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of healthy containers.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36232,
      "type": "docker",
      "category": "process_management",
      "input": "Remove the containers that are already stopped. ",
      "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=exited)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36233,
      "type": "docker",
      "category": "process_management",
      "input": "Display the IDs of all containers, regardless of if they are running or stopped. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36234,
      "type": "docker",
      "category": "image_management",
      "input": "Show the nginx images present in the repository.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36235,
      "type": "docker",
      "category": "container_management",
      "input": "Hey there, Docker! It would be awesome if you could log in to yetanotherregistry.example.net. Use \"marydoe\" as the username and \"herpassword\" as the password.",
      "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36236,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the complete list of active containers without any truncation.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36237,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the tags and IDs of the dangling images.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36238,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the last 4 containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 36239,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the images in Docker.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36240,
      "type": "docker",
      "category": "container_management",
      "input": "In 10 seconds, kindly stop my_container.",
      "output": "\"docker stop -t 10 my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 36241,
      "type": "docker",
      "category": "process_management",
      "input": "Could you please fetch the names and statuses of all running containers?",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36242,
      "type": "docker",
      "category": "image_management",
      "input": "Display the images which were created prior to \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36243,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve a list of all the images showcasing their repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36244,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that are running and have the Ubuntu image as their ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36245,
      "type": "docker",
      "category": "container_management",
      "input": "Please log in, Docker. Provide your username and password for authentication.",
      "output": "\"docker login --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36246,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, can you show me the running containers and filter them so only those with 'network=host' are displayed?",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36247,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are running and are on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36248,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, it would be great if you could pause all the running containers within 5 seconds in a gentle manner.",
      "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36249,
      "type": "docker",
      "category": "process_management",
      "input": "Please give me the list of containers that are running and on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36250,
      "type": "docker",
      "category": "image_management",
      "input": "Get the digests of all the Docker images. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 36251,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, please authenticate yourself using the provided username and password to access the container registry.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36252,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the running containers filtered by the ACME label from vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36253,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers since 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36254,
      "type": "docker",
      "category": "process_management",
      "input": "Deliver the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36255,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that belong to the frontend network and are currently running.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36256,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images and show their repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36257,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the images and IDs of all the running containers.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36258,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the list of the containers currently running.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36259,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers that were created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36260,
      "type": "docker",
      "category": "image_management",
      "input": "Display the images that have been generated since the nginx:alpine image.",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36261,
      "type": "docker",
      "category": "image_management",
      "input": "List all the Docker images, including the dangling ones, and display their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36262,
      "type": "docker",
      "category": "process_management",
      "input": "Get a list of containers that exited before container 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36263,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers with the label 'com.example.vendor' set as ACME from vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36264,
      "type": "docker",
      "category": "process_management",
      "input": "I want the complete information of currently running containers displayed.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36265,
      "type": "docker",
      "category": "container_management",
      "input": "Hey Docker, it would be great if you could log me in using the username \"marydoe\".",
      "output": "\"docker login --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36266,
      "type": "docker",
      "category": "image_management",
      "input": "Find all the images that are maintained by nginx and provide information about their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36267,
      "type": "docker",
      "category": "image_management",
      "input": "I would like to see the images generated after the nginx:alpine image.",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36268,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers with the ancestor set as mongo and volume set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36269,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see a list of containers that have exited, but not the one with ID '3e33ad9a0b2e'.",
      "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36270,
      "type": "docker",
      "category": "image_management",
      "input": "Find all images with the label \"maintainer=nginx\" and show their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36271,
      "type": "docker",
      "category": "process_management",
      "input": "Shut down my_container nicely with the SIGINT signal.",
      "output": "\"docker kill -s SIGINT my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36272,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch me the nginx image from the source.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36273,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of images with the \"maintainer=nginx\" label and show their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36274,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the details of all running containers created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36275,
      "type": "docker",
      "category": "container_management",
      "input": "Authenticate yourself, Docker, with the supplied username and password to access the container registry.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36276,
      "type": "docker",
      "category": "container_management",
      "input": "\"Hey Docker, login required! Use the username johndoe.\"",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36277,
      "type": "docker",
      "category": "image_management",
      "input": "Present the images with their repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36278,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the repository, tag, and digest of the available images.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36279,
      "type": "docker",
      "category": "image_management",
      "input": "Can you show me the images created after the nginx:alpine image?",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36280,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, authenticate yourself using the username and password provided to gain access to the container registry.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36281,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the list of running Docker containers filtered by creation since 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36282,
      "type": "docker",
      "category": "container_management",
      "input": "I expect you to log in to anotherregistry.example.com using the username \"johndoe\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36283,
      "type": "docker",
      "category": "process_management",
      "input": "Check the status of each and every container. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 36284,
      "type": "docker",
      "category": "image_management",
      "input": "Display the repository, tag, and digest information of the images.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36285,
      "type": "docker",
      "category": "process_management",
      "input": "Give me information about the containers that have exited with a code of 0.",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36286,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the names and statuses of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36287,
      "type": "docker",
      "category": "image_management",
      "input": "Please display the images that are dangling.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36288,
      "type": "docker",
      "category": "process_management",
      "input": "Can you please list all the containers with exited status?",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36289,
      "type": "docker",
      "category": "image_management",
      "input": "Please show me the dangling images.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36290,
      "type": "docker",
      "category": "process_management",
      "input": "I would like to see the names and statuses of all running containers, please.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36291,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch all the images with their corresponding repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36292,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the IDs of the containers currently in a running state. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36293,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, please login to the container registry with the provided username and password.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36294,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the last 4 containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 36295,
      "type": "docker",
      "category": "image_management",
      "input": "List only the Docker image IDs. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 36296,
      "type": "docker",
      "category": "process_management",
      "input": "Inform me about containers that have exited with a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36297,
      "type": "docker",
      "category": "process_management",
      "input": "Display the complete list of currently active containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36298,
      "type": "docker",
      "category": "process_management",
      "input": "Give me all the containers that have stopped running.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36299,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that have exited with a status code of 1.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36300,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch me the list of available nginx images.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36301,
      "type": "docker",
      "category": "image_management",
      "input": "Display the images along with their complete information.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36302,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers filtering by the label 'com.example.vendor=ACME'.",
      "output": "docker ps --filter 'label=com.example.vendor=ACME'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36303,
      "type": "docker",
      "category": "process_management",
      "input": "Could you show me the containers called \"my-container\"? ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 36304,
      "type": "docker",
      "category": "image_management",
      "input": "Unveil the images' repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36305,
      "type": "docker",
      "category": "image_management",
      "input": "Please give me the Docker image IDs. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 36306,
      "type": "docker",
      "category": "process_management",
      "input": "Get a list of containers that are running and were created after the 3e33ad9a0b2e commit.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36307,
      "type": "docker",
      "category": "process_management",
      "input": "Tell me the information about containers that exited successfully and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36308,
      "type": "docker",
      "category": "process_management",
      "input": "Get the last 4 containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 36309,
      "type": "docker",
      "category": "container_management",
      "input": "Johndoe, kindly log me into the Docker platform.",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36310,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that are currently running in the frontend network.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36311,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the running containers with the Ubuntu image. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36312,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers that are based on the Ubuntu image.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36313,
      "type": "docker",
      "category": "process_management",
      "input": "End the execution of all currently running containers.",
      "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36314,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers running with the Ubuntu image.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36315,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see all the containers with a health status of healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36316,
      "type": "docker",
      "category": "process_management",
      "input": "List all active containers without any truncation.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36317,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, I'm interested in seeing the running containers, but only the ones with the 'network=host' filter.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36318,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running Docker containers that were created after 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36319,
      "type": "docker",
      "category": "image_management",
      "input": "Can you please show me the images and their corresponding repository, tag, and ID?",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36320,
      "type": "docker",
      "category": "process_management",
      "input": "Please ensure that the container with the name \"my_container\" is killed using the SIGTERM signal.",
      "output": "\"docker kill -s SIGTERM my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36321,
      "type": "docker",
      "category": "container_management",
      "input": "It would be great if you could log in to my registry using your credentials as \"johndoe\" and \"mypassword\".",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36322,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are marked as healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36323,
      "type": "docker",
      "category": "process_management",
      "input": "List down all the running Docker containers created after 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36324,
      "type": "docker",
      "category": "container_management",
      "input": "\"Hey, please log in to myregistry.example.com with the username johndoe.\"",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36325,
      "type": "docker",
      "category": "process_management",
      "input": "I'm interested in seeing the complete information of active containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36326,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the names of the repositories and their tags for the dangling images.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36327,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images with the \"maintainer=nginx\" label and provide their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36328,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the images and IDs of all running containers.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36329,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers and include their names and statuses.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36330,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the list of currently running containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36331,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that are running and have port 8080 published. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36332,
      "type": "docker",
      "category": "process_management",
      "input": "Display the complete status of all containers. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 36333,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers with the status set as \"exited\" and the image ancestor set as Alpine.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36334,
      "type": "docker",
      "category": "image_management",
      "input": "Hey Docker, show me all the Docker images, including the ones that are dangling. I need their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36335,
      "type": "docker",
      "category": "image_management",
      "input": "List all the available images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36336,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that are running and marked as healthy.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36337,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the images along with their repository, tag, and digest.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36338,
      "type": "docker",
      "category": "container_management",
      "input": "Hello Docker, it would be great if you could log in to the registry yetanotherregistry.example.net. Your username is \"marydoe\" and your password is \"herpassword\".",
      "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36339,
      "type": "docker",
      "category": "image_management",
      "input": "Show me all the available nginx images.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36340,
      "type": "docker",
      "category": "image_management",
      "input": "I would like to see a list of all the images including their repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36341,
      "type": "docker",
      "category": "image_management",
      "input": "List the images with the label \"maintainer=nginx\" and show their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36342,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that are running on port 8080. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36343,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide the details of containers that have exited without errors.",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36344,
      "type": "docker",
      "category": "process_management",
      "input": "I want you to kill all running containers in Docker.",
      "output": "\"docker kill -s SIGTERM $(docker ps -q)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36345,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers with the Ubuntu image as their ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36346,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running Docker containers created since 4f66ad9a0b2e. ",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36347,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the dangling images along with their repository names, tags, and IDs.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36348,
      "type": "docker",
      "category": "container_management",
      "input": "Please use your credentials, Johndoe, to login to Docker.",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36349,
      "type": "docker",
      "category": "process_management",
      "input": "I need the information about containers that have exited and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36350,
      "type": "docker",
      "category": "image_management",
      "input": "Get me the list of images since the nginx:alpine image.",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36351,
      "type": "docker",
      "category": "process_management",
      "input": "Share the details of your most recent container execution.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36352,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images and their corresponding repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36353,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with a list of all Docker images, including the ones not in use at the moment.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 36354,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are running and expose port 80.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36355,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve a list of containers and their names, images, and current status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36356,
      "type": "docker",
      "category": "container_management",
      "input": "Hey Docker, would you mind stopping all the running containers in a gentle way within 5 seconds?",
      "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36357,
      "type": "docker",
      "category": "process_management",
      "input": "Find all containers that have exited, but make sure to leave out the one with ID '3e33ad9a0b2e'.",
      "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36358,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of images that have a creation timestamp prior to \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36359,
      "type": "docker",
      "category": "process_management",
      "input": "Please list the containers with port 8080 published. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36360,
      "type": "docker",
      "category": "process_management",
      "input": "Display the IDs of only the containers that are running. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36361,
      "type": "docker",
      "category": "image_management",
      "input": "Can you please provide me with the details of nginx images?",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36362,
      "type": "docker",
      "category": "process_management",
      "input": "Show me a detailed list of all the currently active containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36363,
      "type": "docker",
      "category": "image_management",
      "input": "Display the images with dangling status.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36364,
      "type": "docker",
      "category": "image_management",
      "input": "Filter the images based on the label \"maintainer=nginx\" and display their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36365,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the list of tasks currently running in Docker.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 36366,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the details of the three last containers, whether active or inactive.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36367,
      "type": "docker",
      "category": "container_management",
      "input": "Stop the container named \"my_container\".",
      "output": "\"docker login --username=marydoe --password-stdin < ~/herpassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36368,
      "type": "docker",
      "category": "process_management",
      "input": "Print the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36369,
      "type": "docker",
      "category": "process_management",
      "input": "Find containers that are currently running and were created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36370,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the status and sizes of all currently running containers.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36371,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, show me the running containers, but make sure to filter them with 'network=host'.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36372,
      "type": "docker",
      "category": "process_management",
      "input": "Bring me the list of all containers that exited prior to the container with ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36373,
      "type": "docker",
      "category": "process_management",
      "input": "Show me a list of the running containers with the ACME label from the vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36374,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve containers that have the volume set as \"/data\" and are of the \"postgres\" image.",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36375,
      "type": "docker",
      "category": "process_management",
      "input": "List all the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36376,
      "type": "docker",
      "category": "process_management",
      "input": "I am interested in knowing the details of containers that exited and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36377,
      "type": "docker",
      "category": "process_management",
      "input": "Find all Docker containers with an exited status and an ancestor of nginx.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36378,
      "type": "docker",
      "category": "container_management",
      "input": "I want you to login to the new registry with your username and password.",
      "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36379,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers that are currently running with the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36380,
      "type": "docker",
      "category": "image_management",
      "input": "List all the available Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36381,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers, whether they are running or stopped. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36382,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the details of images that are maintained by nginx, including their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36383,
      "type": "docker",
      "category": "process_management",
      "input": "Please stop all running containers immediately.",
      "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36384,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me all the containers in exited status, Docker.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36385,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the running Docker containers filtered by creation since 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36386,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers with the ACME label from the ACME vendor.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36387,
      "type": "docker",
      "category": "container_management",
      "input": "Make sure to log in to anotherregistry.example.com using the provided username \"johndoe\" and password \"mypassword\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36388,
      "type": "docker",
      "category": "process_management",
      "input": "Hey there, show me the running containers with the filter 'network=host'. ",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36389,
      "type": "docker",
      "category": "container_management",
      "input": "Authenticate yourself as Mary Doe by entering the username \"marydoe\" and the password \"herpassword\".",
      "output": "\"docker login --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36390,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the status of all containers. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 36391,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers created after the 3e33ad9a0b2e commit.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36392,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the containers that have the ancestor as mongo and volumes set to /app?",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36393,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers in the frontend network and filter them by running status.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36394,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, display all the containers with exited status, please.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36395,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the list of containers having /app as volume and mongo as ancestor.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36396,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers and their respective names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36397,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, terminate my_container1 and my_container2 immediately!",
      "output": "\"docker stop my_container1 my_container2\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36398,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers that have exited with a specific ID before '3e33ad9a0b2e'.",
      "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36399,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers with the corresponding names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36400,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a detailed overview of the nginx images, including their repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36401,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, can you please show me the containers that are in exited status?",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36402,
      "type": "docker",
      "category": "image_management",
      "input": "I need a list of all the images and their corresponding digests. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 36403,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the details of the container run last without hesitation.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36404,
      "type": "docker",
      "category": "process_management",
      "input": "Can you list the containers currently running with port 8080 published? ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36405,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the repository, tag, and digest for all the images on the server.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36406,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see a list of all containers, irrespective of their status. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36407,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the list of all containers, including the inactive ones. Fetch the details for the first three.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36408,
      "type": "docker",
      "category": "process_management",
      "input": "Display the status of each container, regardless of their state. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 36409,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with information about running containers that are Debian-based.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36410,
      "type": "docker",
      "category": "image_management",
      "input": "Display the IDs of all the dangling images.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36411,
      "type": "docker",
      "category": "process_management",
      "input": "Shut down every single container without delay!",
      "output": "\"docker kill -s SIGTERM $(docker ps -q)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36412,
      "type": "docker",
      "category": "image_management",
      "input": "I need information about nginx images.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36413,
      "type": "docker",
      "category": "image_management",
      "input": "Please show me the images created after the nginx:alpine image.",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36414,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with the repository, tag, and digest of the available images.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36415,
      "type": "docker",
      "category": "image_management",
      "input": "Display the available nginx images in the store.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36416,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, kindly terminate app within 10 seconds.",
      "output": "\"docker stop -t 10 app\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 36417,
      "type": "docker",
      "category": "process_management",
      "input": "List all active containers in full detail.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36418,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see all the containers currently running with the label 'com.example.vendor' set as ACME from the ACME vendor.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36419,
      "type": "docker",
      "category": "container_management",
      "input": "\"Hey, could you please log in with username johndoe?\"",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36420,
      "type": "docker",
      "category": "image_management",
      "input": "I would like to see the images and their corresponding repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36421,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the repository, tag, and digest for all the images in the system.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36422,
      "type": "docker",
      "category": "image_management",
      "input": "I would like you to list the repositories and tags of your images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36423,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers with the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36424,
      "type": "docker",
      "category": "process_management",
      "input": "Please, return the details of the currently running containers.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36425,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of the images that are not currently being used by any containers.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36426,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers filtered by the ACME label from the vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36427,
      "type": "docker",
      "category": "image_management",
      "input": "Get the images and display their repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36428,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers which are currently running.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36429,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers created since 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36430,
      "type": "docker",
      "category": "image_management",
      "input": "Find the images' repository, tag, and ID for those that were created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36431,
      "type": "docker",
      "category": "process_management",
      "input": "Please, return the details of the last five running containers.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36432,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the complete information of all the running containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36433,
      "type": "docker",
      "category": "container_management",
      "input": "To gain access, submit your username and password from the text file for successful login.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36434,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the IDs and images of all running containers.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36435,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch me the containers that are running and are on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36436,
      "type": "docker",
      "category": "process_management",
      "input": "Please list all the containers, regardless of whether they are running or stopped. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36437,
      "type": "docker",
      "category": "image_management",
      "input": "Display the images' repository, tag, and digest.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36438,
      "type": "docker",
      "category": "process_management",
      "input": "Please stop my_container gracefully using the SIGINT signal.",
      "output": "\"docker kill -s SIGINT my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36439,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers with running status and unhealthy health status.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36440,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers with Ubuntu as their ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36441,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the IDs of all containers, regardless of whether they are running or stopped. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36442,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see the containers that are running and expose port 80.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36443,
      "type": "docker",
      "category": "process_management",
      "input": "Display running containers based on the Ubuntu image.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36444,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36445,
      "type": "docker",
      "category": "process_management",
      "input": "I would appreciate it if you could display the names and statuses of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36446,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see the running containers that have port 80 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36447,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the list of containers that have exited before 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36448,
      "type": "docker",
      "category": "process_management",
      "input": "List the names of running containers prior to 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36449,
      "type": "docker",
      "category": "process_management",
      "input": "Show me only the IDs of the containers that are running. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36450,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers that are currently in a healthy condition.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36451,
      "type": "docker",
      "category": "image_management",
      "input": "Get the digests of all the images available in Docker. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 36452,
      "type": "docker",
      "category": "process_management",
      "input": "Stop the container named \"my_container\" using the SIGTERM signal, Docker.",
      "output": "\"docker kill -s SIGTERM my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36453,
      "type": "docker",
      "category": "image_management",
      "input": "List down the images with their repository, tag, and digest.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36454,
      "type": "docker",
      "category": "process_management",
      "input": "Display the names and images of all containers that are currently running.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36455,
      "type": "docker",
      "category": "process_management",
      "input": "List only the IDs of the containers that are running.",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36456,
      "type": "docker",
      "category": "image_management",
      "input": "List the Docker images with a prerequisite of \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36457,
      "type": "docker",
      "category": "process_management",
      "input": "List all the created containers.",
      "output": "docker ps -a --filter 'status=created'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36458,
      "type": "docker",
      "category": "container_management",
      "input": "It will be appreciated if you log in to myregistry.example.com using \"johndoe\" as your username and \"mypassword\" as your password.",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36459,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the containers that have exited before container ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36460,
      "type": "docker",
      "category": "process_management",
      "input": "Return the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36461,
      "type": "docker",
      "category": "container_management",
      "input": "Do me a favor and log in to myregistry.example.com. Use the username johndoe.",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36462,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the running containers with port 8080 published. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36463,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the list of tasks running in Docker, please.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 36464,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, let's authenticate with the username Johndoe.",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36465,
      "type": "docker",
      "category": "process_management",
      "input": "Display the last five running containers.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36466,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the list of all containers, even the inactive ones. Display information about the first three.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36467,
      "type": "docker",
      "category": "process_management",
      "input": "I need information about containers that have exited with a code of zero.",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36468,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images with their respective repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36469,
      "type": "docker",
      "category": "container_management",
      "input": "\"Please log in to Docker with the username johndoe.\"",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36470,
      "type": "docker",
      "category": "process_management",
      "input": "Provide a list of containers and their status. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 36471,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the containers that have exited before container ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36472,
      "type": "docker",
      "category": "process_management",
      "input": "List the running containers for me, please. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36473,
      "type": "docker",
      "category": "image_management",
      "input": "I need to view a list of images with their repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36474,
      "type": "docker",
      "category": "process_management",
      "input": "Could you gracefully kill ginto with the SIGINT signal, please?",
      "output": "\"docker kill -s SIGINT ginto\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36475,
      "type": "docker",
      "category": "image_management",
      "input": "Provide the list of images without any missing information.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36476,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the containers currently running and having the ancestor Ubuntu.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36477,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, please authenticate yourself by logging in to myregistry.example.com. Use \"johndoe\" as the username and \"mypassword\" as the password.",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36478,
      "type": "docker",
      "category": "container_management",
      "input": "Hey, Docker! Log in to myregistry.example.com right now! Your username is \"johndoe\" and the corresponding password is stored in ~/mypassword.txt. Don't forget!",
      "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36479,
      "type": "docker",
      "category": "container_management",
      "input": "Secure your access, Docker, by logging in to anotherregistry.example.com as \"johndoe\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36480,
      "type": "docker",
      "category": "process_management",
      "input": "Show me a complete list of all containers, including those that are currently running or stopped. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36481,
      "type": "docker",
      "category": "process_management",
      "input": "Get a list of containers created after 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36482,
      "type": "docker",
      "category": "image_management",
      "input": "List out all the Docker images, even the ones that are currently not active.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 36483,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the running containers with the ancestor as Debian, Docker.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36484,
      "type": "docker",
      "category": "process_management",
      "input": "Get me a list of containers that are running and were created after the 3e33ad9a0b2e commit.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36485,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the running Docker containers filtered by creation since 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36486,
      "type": "docker",
      "category": "container_management",
      "input": "Stop my container immediately.",
      "output": "\"docker stop -t 0 my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 36487,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, can you list all the running containers and apply a filter for 'network=host'?",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36488,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the list of running containers that have port 8080 exposed. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36489,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve containers that have the volume as \"/data\" and are based on the \"postgres\" image.",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36490,
      "type": "docker",
      "category": "container_management",
      "input": "Please log in to my registry with your username as \"johndoe\" and password as \"mypassword\".",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36491,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of the running containers and their respective sizes.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36492,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the containers with volumes connected to \"/data\" that are currently running.",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36493,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images and present their repository, tag, and ID values.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36494,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, I command you to stop my_container1 and my_container2.",
      "output": "\"docker stop my_container1 my_container2\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36495,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers that have port 443 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36496,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with a list of running containers with the ACME label from the ACME vendor.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36497,
      "type": "docker",
      "category": "image_management",
      "input": "I need a listing of nginx images.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36498,
      "type": "docker",
      "category": "container_management",
      "input": "\"Mary, please make sure you log in to the new registry at newregistry.example.org. Use your username as Mary Doe.\"",
      "output": "\"docker login newregistry.example.org --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36499,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers that are currently running and have port 443 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36500,
      "type": "docker",
      "category": "process_management",
      "input": "I need you to list the information of the last container run.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36501,
      "type": "docker",
      "category": "image_management",
      "input": "I want to see the images along with their repository, tag, and digest.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36502,
      "type": "docker",
      "category": "image_management",
      "input": "Show the images along with their repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36503,
      "type": "docker",
      "category": "image_management",
      "input": "Display the images in table form, with information regarding the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36504,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see all the containers currently running and labeled as ACME from the ACME vendor.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36505,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the list of running containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36506,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the containers that have exited with a status code of 1.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36507,
      "type": "docker",
      "category": "image_management",
      "input": "List all available nginx images with their relevant details.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36508,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have port 9090 published and are currently active.",
      "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36509,
      "type": "docker",
      "category": "process_management",
      "input": "Tell me the information about containers that exited and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36510,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers that have a creation time before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36511,
      "type": "docker",
      "category": "process_management",
      "input": "Inform me about the latest executed container, please.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36512,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are currently running and have port 9090 published.",
      "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36513,
      "type": "docker",
      "category": "process_management",
      "input": "Only show me the containers that are in a healthy state.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36514,
      "type": "docker",
      "category": "image_management",
      "input": "Get me the images and their corresponding repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36515,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the list of the first five containers currently running.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36516,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the containers with the name \"my-container\", please.",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 36517,
      "type": "docker",
      "category": "process_management",
      "input": "Filter and show me only the containers that have a health status of healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36518,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers running since 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36519,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have started after 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36520,
      "type": "docker",
      "category": "image_management",
      "input": "Get me the repository, tag, and digest for the images I have.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36521,
      "type": "docker",
      "category": "process_management",
      "input": "Show the running containers since 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36522,
      "type": "docker",
      "category": "process_management",
      "input": "Can you display the names and images of all running containers?",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36523,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running Docker containers that started from 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36524,
      "type": "docker",
      "category": "image_management",
      "input": "I would like to inspect the repositories and tags used for your images, please.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36525,
      "type": "docker",
      "category": "container_management",
      "input": "Make sure you specify your username as \"johndoe\" and password as \"mypassword\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36526,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that expose port 80 and are running.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36527,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running tasks in Docker.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 36528,
      "type": "docker",
      "category": "image_management",
      "input": "Display the images in table form, containing the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36529,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see all the containers that are currently running after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36530,
      "type": "docker",
      "category": "image_management",
      "input": "Display a comprehensive list of nginx images, including the repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36531,
      "type": "docker",
      "category": "container_management",
      "input": "Could you log in to anotherregistry.example.com? The username is \"johndoe\" and the password is \"mypassword\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36532,
      "type": "docker",
      "category": "process_management",
      "input": "Find and display all the containers named \"my-container\", please. ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 36533,
      "type": "docker",
      "category": "process_management",
      "input": "Show me a list of running containers that have Debian as the ancestor, Docker.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36534,
      "type": "docker",
      "category": "process_management",
      "input": "Can you display the containers that have exited with a status code of 1?",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36535,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, I need to log in, so please authenticate me using the username \"marydoe\".",
      "output": "\"docker login --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36536,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, I need you to stop reverseProxyGinto by sending a SIGHUP signal.",
      "output": "\"docker kill -s SIGHUP reverseProxyGinto\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36537,
      "type": "docker",
      "category": "image_management",
      "input": "Present the images that have a creation timestamp earlier than \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36538,
      "type": "docker",
      "category": "process_management",
      "input": "List out the containers running with Debian as their base image.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36539,
      "type": "docker",
      "category": "container_management",
      "input": "Kindly log in to anotherregistry.example.com using your username \"johndoe\" and password \"mypassword\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36540,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the details of containers running on the Debian image, please.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36541,
      "type": "docker",
      "category": "process_management",
      "input": "Please halt all currently running containers.",
      "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36542,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that are running and have port 443 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36543,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images filtered by the label \"maintainer=nginx\" and include their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36544,
      "type": "docker",
      "category": "container_management",
      "input": "Hey Docker, authenticate yourself by logging in to myregistry.example.com. Remember to use \"johndoe\" as the username and \"mypassword\" as the password.",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36545,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the repository, tag, and digest of the images in the system.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36546,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the list of available images in Docker.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36547,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are running but have an unhealthy health status.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36548,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images that have the label \"maintainer=nginx\" and provide their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36549,
      "type": "docker",
      "category": "process_management",
      "input": "Please list all containers that are currently running and were created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36550,
      "type": "docker",
      "category": "process_management",
      "input": "Display the complete list of containers, regardless of their status. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36551,
      "type": "docker",
      "category": "image_management",
      "input": "Find the images maintained by nginx and include their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36552,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all containers, their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36553,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the IDs of Docker images. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 36554,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the repository, tag, and ID of all the images that were created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36555,
      "type": "docker",
      "category": "container_management",
      "input": "Hello Docker! Could you please authenticate yourself on the registry at yetanotherregistry.example.net? Make sure to use the username \"marydoe\" and the password \"herpassword\".",
      "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36556,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the running containers having the network set to my-network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36557,
      "type": "docker",
      "category": "process_management",
      "input": "Let me know ASAP about the container you ran most recently.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36558,
      "type": "docker",
      "category": "process_management",
      "input": "Hey, stop that container named \"my_container\" immediately!",
      "output": "\"docker kill -s SIGTERM my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36559,
      "type": "docker",
      "category": "process_management",
      "input": "Get rid of those annoying containers that have already stopped. ",
      "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=exited)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36560,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the current status of the containers.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36561,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the last 4 containers that were recently active. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 36562,
      "type": "docker",
      "category": "process_management",
      "input": "I need a list of running container IDs. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36563,
      "type": "docker",
      "category": "image_management",
      "input": "Can you please show me the available images after the nginx:alpine image?",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36564,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the names and statuses of the running containers, please.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36565,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers running in the frontend network, filtering by running status.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36566,
      "type": "docker",
      "category": "process_management",
      "input": "Quickly share the information of the last executed container.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36567,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers that are descendants of the Ubuntu image.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36568,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the containers that have a health status of healthy?",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36569,
      "type": "docker",
      "category": "process_management",
      "input": "List all the docker containers that have the ancestor as mongo and volumes set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36570,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with a list of running containers that are listening on port 8080. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36571,
      "type": "docker",
      "category": "image_management",
      "input": "Which images have been built after the nginx:alpine image?",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36572,
      "type": "docker",
      "category": "process_management",
      "input": "Tell me the current status and sizes of all the running containers.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36573,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers with the volume as \"/data\" and the ancestor as \"postgres\".",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36574,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers running with a creation time prior to 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36575,
      "type": "docker",
      "category": "image_management",
      "input": "I want to see the complete details of all the images.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36576,
      "type": "docker",
      "category": "process_management",
      "input": "Stop the execution of all currently running containers promptly.",
      "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36577,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the Docker images that were created prior to the image with tag \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36578,
      "type": "docker",
      "category": "image_management",
      "input": "Docker, show me all the Docker images, including the dangling ones, and make sure to display their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36579,
      "type": "docker",
      "category": "image_management",
      "input": "Please display a list of all Docker images, even the ones that are not active at the moment.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 36580,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, can you show me the running containers? But please, only include the 'network=host' ones.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36581,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch all the containers that have exited with status code 1.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36582,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are currently running and belong to the frontend network.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36583,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have exited before the one with the ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36584,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the running containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36585,
      "type": "docker",
      "category": "process_management",
      "input": "Display all running containers created after 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36586,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, show me the containers that have a running status. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36587,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a detailed overview of the nginx images, including the repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36588,
      "type": "docker",
      "category": "image_management",
      "input": "Make all the information of the images visible to me.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36589,
      "type": "docker",
      "category": "process_management",
      "input": "I need the complete information of all running containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36590,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers, active or inactive. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36591,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers, Docker, but make sure to filter them with 'network=host'.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36592,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers with the ACME label from the vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36593,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with a list of running containers filtered by the ACME label from vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36594,
      "type": "docker",
      "category": "image_management",
      "input": "Present the Docker images before the image \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36595,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve all the images in Docker.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36596,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with the repository, tag, and digest details of the images.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36597,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see the containers that are not running anymore.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36598,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see a list of all containers, irrespective of whether they are currently running or stopped.",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36599,
      "type": "docker",
      "category": "process_management",
      "input": "List down all the containers that are currently running.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36600,
      "type": "docker",
      "category": "process_management",
      "input": "Can you provide me with a list of all containers, including the stopped ones? ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 36601,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch a list of all images' repository, tag, and ID excluding those created after the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36602,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the active containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36603,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are running with Ubuntu as their ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36604,
      "type": "docker",
      "category": "process_management",
      "input": "Exhibit the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36605,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers along with their names, images, and current status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36606,
      "type": "docker",
      "category": "image_management",
      "input": "Could you show me all the images along with their repository, tag, and ID?",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36607,
      "type": "docker",
      "category": "process_management",
      "input": "Terminate all the containers that have completed execution. ",
      "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=exited)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36608,
      "type": "docker",
      "category": "process_management",
      "input": "Please give me a list of containers that are running and exposing port 443.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36609,
      "type": "docker",
      "category": "container_management",
      "input": "Would you be so kind as to terminate any running my_image containers?",
      "output": "\"docker stop $(docker ps -q --filter status=running --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36610,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the corresponding repository, tag, and ID of all the images.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36611,
      "type": "docker",
      "category": "container_management",
      "input": "Run a container using the latest version of the Nginx image.",
      "output": "\"docker login --username=marydoe --password-stdin < ~/herpassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36612,
      "type": "docker",
      "category": "image_management",
      "input": "List all the available images with their respective repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36613,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the running Docker containers filtered by creation since 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36614,
      "type": "docker",
      "category": "process_management",
      "input": "Why don't you display the names and images of all running containers?",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36615,
      "type": "docker",
      "category": "process_management",
      "input": "Could you display the containers that have exited successfully?",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36616,
      "type": "docker",
      "category": "process_management",
      "input": "Find all containers where the volume is set to \"/data\" and the ancestor is \"postgres\".",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36617,
      "type": "docker",
      "category": "image_management",
      "input": "Please display the Docker image IDs only. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 36618,
      "type": "docker",
      "category": "image_management",
      "input": "I need to see a list of images with their repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36619,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are not running and are based on Alpine.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36620,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the available Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36621,
      "type": "docker",
      "category": "container_management",
      "input": "Stop running myApp and my_container2, Docker.",
      "output": "\"docker stop myApp my_container2\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36622,
      "type": "docker",
      "category": "image_management",
      "input": "Show me a list of images' repository, tag, and ID, but only for those created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36623,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the last 4 containers that were recently active. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 36624,
      "type": "docker",
      "category": "image_management",
      "input": "Please list the repositories and tags of your images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36625,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with a list of containers running with the ACME label from the vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36626,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers that are currently running and listening on port 8080. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36627,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve all the containers having the ancestor set as mongo and volumes set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36628,
      "type": "docker",
      "category": "process_management",
      "input": "List the names of running containers created before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36629,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running Docker containers filtered by creation since 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36630,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with a list of all the available images in Docker.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36631,
      "type": "docker",
      "category": "container_management",
      "input": "Hey Docker, I need you to authenticate yourself on yetanotherregistry.example.net. Your username is \"marydoe\" and your password is \"herpassword\".",
      "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36632,
      "type": "docker",
      "category": "image_management",
      "input": "Display the images that are not being used by any running containers.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36633,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, it's necessary for me to log in using the username \"marydoe\". Could you please facilitate the process?",
      "output": "\"docker login --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36634,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, list all the running containers with Debian as their ancestor.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36635,
      "type": "docker",
      "category": "process_management",
      "input": "Please list down all the running containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36636,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers that are exposing port 8080. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36637,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers that have port 8080 published. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36638,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are running and healthy.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36639,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with the nginx image listing.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36640,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that have the port 80 exposed. ",
      "output": "docker ps --filter 'expose=80'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36641,
      "type": "docker",
      "category": "process_management",
      "input": "Expose the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36642,
      "type": "docker",
      "category": "image_management",
      "input": "List the Docker images that have a creation timestamp earlier than \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36643,
      "type": "docker",
      "category": "process_management",
      "input": "Display only the containers that are running and have volumes mounted at \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36644,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the running containers labeled with 'com.example.vendor' set as ACME from vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36645,
      "type": "docker",
      "category": "container_management",
      "input": "Login to the new registry using your username and password.",
      "output": "\"docker login newregistry.example.org --username=marydoe --password-stdin < ~/herpassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36646,
      "type": "docker",
      "category": "process_management",
      "input": "What containers are currently active?",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36647,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers based on the Ubuntu image.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36648,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with the digests of all the Docker images. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 36649,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers that have the Ubuntu image as their ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36650,
      "type": "docker",
      "category": "container_management",
      "input": "Create a new network called \"my_network\".",
      "output": "\"docker login --username=marydoe --password-stdin < ~/herpassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36651,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that have port 9090 published and are in a running state.",
      "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36652,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers filtered by the frontend-network and running status.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36653,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the current status and sizes of the containers that are running.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36654,
      "type": "docker",
      "category": "image_management",
      "input": "Could you give me the complete details of all Docker images, including the ones not in use?",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 36655,
      "type": "docker",
      "category": "process_management",
      "input": "Display the IDs of the running containers. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36656,
      "type": "docker",
      "category": "image_management",
      "input": "Showcase the repository, tag, and ID for each image.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36657,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, display the containers that have exited status.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36658,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, show me only the running containers that are using the 'network=host' filter, please.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36659,
      "type": "docker",
      "category": "process_management",
      "input": "Could you show me the running containers' IDs and images?",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36660,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers with a creation time before 3e33ad9a0b8e.",
      "output": "docker ps --filter 'before=3e33ad9a0b8e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36661,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are currently running.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36662,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the containers with exited status, Docker.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36663,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers that have port 443 exposed to me.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36664,
      "type": "docker",
      "category": "process_management",
      "input": "Inform me about the last container you executed as soon as possible.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36665,
      "type": "docker",
      "category": "process_management",
      "input": "Display all containers with a healthy health status.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36666,
      "type": "docker",
      "category": "process_management",
      "input": "Please give me the information of the three most recent containers.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36667,
      "type": "docker",
      "category": "process_management",
      "input": "Get a list of containers that exited before container with the ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36668,
      "type": "docker",
      "category": "image_management",
      "input": "I need to see the repositories and tags used for your images, please.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36669,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the Docker images that were created before the image with tag \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36670,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with a list of running containers and their respective sizes.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36671,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are stopped.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36672,
      "type": "docker",
      "category": "process_management",
      "input": "Hey, Docker! Stop ginto using the SIGINT signal gracefully.",
      "output": "\"docker kill -s SIGINT ginto\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36673,
      "type": "docker",
      "category": "image_management",
      "input": "Display the repository names of the images that are not associated with any containers.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36674,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the names and images of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36675,
      "type": "docker",
      "category": "image_management",
      "input": "Can you list the images with dangling status?",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36676,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the list of containers with volumes mounted at \"/data\" that are currently active.",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36677,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the last five running containers?",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36678,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the list of running containers that expose port 8080. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36679,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers running on port 9090.",
      "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36680,
      "type": "docker",
      "category": "image_management",
      "input": "Can you show me the repositories and tags of your images?",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36681,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, could you please stop all running container instances?",
      "output": "\"docker stop $(docker ps -q)\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36682,
      "type": "docker",
      "category": "process_management",
      "input": "List all available containers and their status. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 36683,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers named \"my-container\", please. ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 36684,
      "type": "docker",
      "category": "process_management",
      "input": "Hey, show me all the containers that have exited status.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36685,
      "type": "docker",
      "category": "image_management",
      "input": "Could you provide me with the repositories and tags for your images, please?",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36686,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the list of all containers in running state on my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36687,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the information of the container run most recently, ASAP.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36688,
      "type": "docker",
      "category": "container_management",
      "input": "\"Dear Docker, kindly log in to the new registry with the username Mary Doe.\"",
      "output": "\"docker login newregistry.example.org --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36689,
      "type": "docker",
      "category": "container_management",
      "input": "To authenticate, use the command \"docker login anotherregistry.example.com\" and enter your username as \"johndoe\" and password as \"mypassword\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36690,
      "type": "docker",
      "category": "container_management",
      "input": "Take a moment to log in to anotherregistry.example.com using your login credentials.",
      "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36691,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the running containers and filter them by volumes attached to \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36692,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, I request you to log in to anotherregistry.example.com with the username \"johndoe\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36693,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, log in now to anotherregistry.example.com and use your username \"johndoe\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36694,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers that are currently running with port 9090 published.",
      "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36695,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the running containers that have the ACME label from vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36696,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the running containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36697,
      "type": "docker",
      "category": "image_management",
      "input": "Display a table containing information about the images, including details like the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36698,
      "type": "docker",
      "category": "process_management",
      "input": "Tell me the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36699,
      "type": "docker",
      "category": "process_management",
      "input": "Could you show me the containers called \"my-container\", please? ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 36700,
      "type": "docker",
      "category": "image_management",
      "input": "List all the images in Docker.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36701,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers with their corresponding images, please.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36702,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide the details of containers that have exited successfully.",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36703,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images with their associated digests. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 36704,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the containers that are running and have the Ubuntu image. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36705,
      "type": "docker",
      "category": "container_management",
      "input": "Please halt all active Docker containers.",
      "output": "\"docker stop $(docker ps -q)\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36706,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the list of containers that are currently running and have volumes connected to \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36707,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the list of containers created before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36708,
      "type": "docker",
      "category": "process_management",
      "input": "Display containers filtered by the Ubuntu ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36709,
      "type": "docker",
      "category": "image_management",
      "input": "Display all Docker images, including the ones that are not active right now.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 36710,
      "type": "docker",
      "category": "image_management",
      "input": "Display all the available Docker images to me.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36711,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the repository, tag, and digest for all the images in the system.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36712,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the list of running containers along with their images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36713,
      "type": "docker",
      "category": "process_management",
      "input": "List down the containers that have exited before 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36714,
      "type": "docker",
      "category": "image_management",
      "input": "Docker, can you please show me all the Docker images? This should include the ones that are dangling. Additionally, provide their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36715,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide the current tasks running in Docker.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 36716,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers labeled as ACME from the ACME vendor.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36717,
      "type": "docker",
      "category": "image_management",
      "input": "I would like to see the repositories and tags of your images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36718,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the details of containers that have exited with a code of 0.",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36719,
      "type": "docker",
      "category": "process_management",
      "input": "Show me a full list of all running containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36720,
      "type": "docker",
      "category": "image_management",
      "input": "Display the digests for all the available Docker images. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 36721,
      "type": "docker",
      "category": "image_management",
      "input": "List all the images that are dangling and their IDs.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36722,
      "type": "docker",
      "category": "process_management",
      "input": "Inform me about the container you recently executed without delay.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36723,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a table displaying the repository, tag, ID, and size of the images.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36724,
      "type": "docker",
      "category": "process_management",
      "input": "Provide a list of running containers with an unhealthy health status.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36725,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers with complete information.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36726,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see a list of all containers with their respective names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36727,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the images listed with their corresponding repository, tag, and ID values.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36728,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the exited containers that are using Alpine as their base image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36729,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers filtered by the Ubuntu ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36730,
      "type": "docker",
      "category": "image_management",
      "input": "Give a detailed overview of the images with their repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36731,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, kindly authenticate yourself on the registry yetanotherregistry.example.net using the login credentials of user \"marydoe\" and the corresponding password.",
      "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36732,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images in a table format with the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36733,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images in a table format, including details such as the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36734,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers with the frontend-network filter and running status.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36735,
      "type": "docker",
      "category": "process_management",
      "input": "Can you display the containers that have a health status of healthy?",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36736,
      "type": "docker",
      "category": "container_management",
      "input": "I need your username and password in order to log you into the system.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36737,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that are running and in a healthy condition.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36738,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that have exited and are using Alpine as their base.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36739,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve a list of all Docker images, including the dangling ones. Please provide their repository, tags, and IDs as well.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36740,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see a list of all containers along with their status. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 36741,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that have exited, but make sure to exclude the one with ID '3e33ad9a0b2e'.",
      "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36742,
      "type": "docker",
      "category": "process_management",
      "input": "Find the running containers that are marked as unhealthy.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36743,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see all the containers running on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36744,
      "type": "docker",
      "category": "process_management",
      "input": "I need information about the last five running containers.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36745,
      "type": "docker",
      "category": "container_management",
      "input": "Hey, Docker, can you please authenticate me with my username \"marydoe\"?",
      "output": "\"docker login --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36746,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers that have exited with status code 1.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36747,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, terminate myAPP and thirdAPP in a graceful manner using the SIGINT signal.",
      "output": "\"docker kill -s SIGINT myAPP thirdAPP\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36748,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers that are running and expose the port 80. ",
      "output": "docker ps --filter 'expose=80'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36749,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me all running containers and their names and statuses?",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36750,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36751,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, ensure that you are logged in to the container registry using the provided username and password.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 36752,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that have exited before container 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36753,
      "type": "docker",
      "category": "image_management",
      "input": "Can you please provide me with the repositories and tags of your images?",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36754,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, please list the running containers and apply the 'network=host' filter.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36755,
      "type": "docker",
      "category": "image_management",
      "input": "List all the images with their repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36756,
      "type": "docker",
      "category": "container_management",
      "input": "Please stop the container called \"my_container\" now.",
      "output": "\"docker stop my_container\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36757,
      "type": "docker",
      "category": "process_management",
      "input": "Please end the process of my_container.",
      "output": "\"docker kill my_container\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36758,
      "type": "docker",
      "category": "container_management",
      "input": "Log in to Docker by providing your username and password to authenticate.",
      "output": "\"docker login --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36759,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that have started after 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36760,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers and filter them based on volumes connected to the \"/data\" directory.",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36761,
      "type": "docker",
      "category": "image_management",
      "input": "I need to see the repositories and tags of your images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36762,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images in Docker.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36763,
      "type": "docker",
      "category": "process_management",
      "input": "Could you show me the containers that have a running status? ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36764,
      "type": "docker",
      "category": "image_management",
      "input": "Display all the Docker images to me.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36765,
      "type": "docker",
      "category": "process_management",
      "input": "Return a list of containers that have port 8080 published and are currently running. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36766,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers in the frontend network and filter them by running status.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36767,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch me the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36768,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the images that are not in use.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36769,
      "type": "docker",
      "category": "process_management",
      "input": "Get the details of the 4 containers that were recently running. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 36770,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the containers that are healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36771,
      "type": "docker",
      "category": "image_management",
      "input": "Please show me the repositories and tags used for your images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36772,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the IDs of all containers, irrespective of their current state. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36773,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running Docker containers that were created after 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36774,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see all containers with their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36775,
      "type": "docker",
      "category": "process_management",
      "input": "Present the running containers and include their names and statuses.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36776,
      "type": "docker",
      "category": "process_management",
      "input": "Display the information of your last executed container, now!",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36777,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers and their corresponding names and images.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36778,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that are currently running and listening on port 8080. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36779,
      "type": "docker",
      "category": "image_management",
      "input": "Display the repository, tag, and ID information for all the available images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36780,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with the repository, tag, and digest information of the images on the server.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36781,
      "type": "docker",
      "category": "process_management",
      "input": "Display the list of running containers and their respective images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36782,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the names and images of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36783,
      "type": "docker",
      "category": "image_management",
      "input": "List down the images along with their repository, tag, and digest.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36784,
      "type": "docker",
      "category": "container_management",
      "input": "Kindly consider logging in to myregistry.example.com with your username set as \"johndoe\" and the provided password being \"mypassword\".",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36785,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers with label version 1.0 and status running.",
      "output": "docker ps -a --filter 'label=version=1.0' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36786,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the current status of all containers. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 36787,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers with port 9090 published.",
      "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36788,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers that have Debian as their ancestor, please.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36789,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the containers that have exited successfully.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36790,
      "type": "docker",
      "category": "image_management",
      "input": "Hey Docker, I would like to see all the Docker images. This should include the ones that are dangling. Also, provide their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36791,
      "type": "docker",
      "category": "image_management",
      "input": "Can you list down the images that are dangling?",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36792,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the details of containers that have exited and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36793,
      "type": "docker",
      "category": "container_management",
      "input": "I request you to log in to myregistry.example.com with \"johndoe\" as your username and \"mypassword\" as your password.",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36794,
      "type": "docker",
      "category": "container_management",
      "input": "Please grant access to anotherregistry.example.com by logging in with your username \"johndoe\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36795,
      "type": "docker",
      "category": "image_management",
      "input": "Give me just the Docker image IDs. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 36796,
      "type": "docker",
      "category": "image_management",
      "input": "List the images filtered by the label \"maintainer=nginx\" and provide their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36797,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, show me only the running containers that are using the 'network=host' filter.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36798,
      "type": "docker",
      "category": "container_management",
      "input": "Can you please log in to myregistry.example.com as \"johndoe\" with your password set as \"mypassword\"?",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36799,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see all the containers that are currently running and have the ACME label from the ACME vendor.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36800,
      "type": "docker",
      "category": "process_management",
      "input": "What are the running containers?",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36801,
      "type": "docker",
      "category": "process_management",
      "input": "I would like to see the details of the last 4 containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 36802,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the names, images, and status of all containers.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36803,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the list of running Docker containers that were started after 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36804,
      "type": "docker",
      "category": "image_management",
      "input": "Please provide me with the repositories and tags of your images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36805,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve containers that have the volume \"/data\" and are of the \"postgres\" image.",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36806,
      "type": "docker",
      "category": "image_management",
      "input": "I would appreciate it if you could list the repositories and tags of your images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36807,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that are running and have the Ubuntu image as their ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36808,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the containers that have the status running and the network as my-network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36809,
      "type": "docker",
      "category": "image_management",
      "input": "Can you fetch me the nginx images along with their repository, tag, and ID?",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36810,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the containers which are currently running. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36811,
      "type": "docker",
      "category": "process_management",
      "input": "I need to know which containers are currently running.",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36812,
      "type": "docker",
      "category": "process_management",
      "input": "Give me an overview of running containers and their sizes.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36813,
      "type": "docker",
      "category": "image_management",
      "input": "Display a list of images' repository, tag, and ID, excluding those created after the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36814,
      "type": "docker",
      "category": "process_management",
      "input": "Would you mind stopping my_container gracefully by sending the SIGINT signal?",
      "output": "\"docker kill -s SIGINT my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36815,
      "type": "docker",
      "category": "image_management",
      "input": "Please show me a table of images, including details such as the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36816,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see all the containers named \"my-container\", please. ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 36817,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, display the containers that have exited status.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36818,
      "type": "docker",
      "category": "container_management",
      "input": "Make sure you are logged in to myregistry.example.com. The username is johndoe.",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36819,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve a list of all containers, showing their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36820,
      "type": "docker",
      "category": "process_management",
      "input": "Present me with a comprehensive list of currently active containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36821,
      "type": "docker",
      "category": "process_management",
      "input": "Please display all the containers where the volume is \"/data\" and the image is \"postgres\".",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36822,
      "type": "docker",
      "category": "process_management",
      "input": "Output the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36823,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers with the status set as \"exited\" and the ancestor set as Alpine.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36824,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve all the containers that have the ancestor as mongo and volumes set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36825,
      "type": "docker",
      "category": "image_management",
      "input": "Can you display the images that have been created since the nginx:alpine image?",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36826,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the details of the containers currently running.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36827,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the details of the nginx images, such as the repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36828,
      "type": "docker",
      "category": "process_management",
      "input": "Obtain the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36829,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that are currently running and have port 8080 published. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36830,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the containers that are currently running after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36831,
      "type": "docker",
      "category": "process_management",
      "input": "Display all containers with their corresponding names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36832,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers that are publishing port 8080. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36833,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the status of each and every container, including the stopped ones. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 36834,
      "type": "docker",
      "category": "process_management",
      "input": "Please show the containers with exposed port 80. ",
      "output": "docker ps --filter 'expose=80'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36835,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers from vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36836,
      "type": "docker",
      "category": "image_management",
      "input": "I want to see the comprehensive information about all Docker images, even the inactive ones.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 36837,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images that are dangling.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36838,
      "type": "docker",
      "category": "image_management",
      "input": "List the images and their corresponding repository, tag, and digest.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36839,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the containers that have the status running and network=my-network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36840,
      "type": "docker",
      "category": "process_management",
      "input": "Display the details of the three latest containers, regardless of their status.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36841,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that have exited and are using the Alpine parent as their image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36842,
      "type": "docker",
      "category": "process_management",
      "input": "I want to know the details of the last 4 containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 36843,
      "type": "docker",
      "category": "process_management",
      "input": "Tell me the names and images of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36844,
      "type": "docker",
      "category": "container_management",
      "input": "Halt my_container1 and confusioner, Docker, right away!",
      "output": "\"docker stop my_container1 confusioner\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36845,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36846,
      "type": "docker",
      "category": "image_management",
      "input": "Present the repositories and tags of your images, please.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36847,
      "type": "docker",
      "category": "process_management",
      "input": "Could you please display the running containers, but only those with the 'network=host' filter?",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36848,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that have port 8080 published and are currently running. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36849,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the IDs of the containers currently in running state. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36850,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers with volumes connected to \"/data\" that are currently running.",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36851,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the tasks currently running.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 36852,
      "type": "docker",
      "category": "container_management",
      "input": "Cease the operation of the container named \"my_container\".",
      "output": "\"docker stop my_container\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36853,
      "type": "docker",
      "category": "process_management",
      "input": "Show me a list of the running containers and filter them by volumes mounted at \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36854,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the running containers that expose the port 80. ",
      "output": "docker ps --filter 'expose=80'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36855,
      "type": "docker",
      "category": "image_management",
      "input": "List all the images that are not in use by any containers.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36856,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the active containers with volumes connected to \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36857,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, I command you to kill all running containers!",
      "output": "\"docker kill -s SIGTERM $(docker ps -q)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36858,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the list of running containers and their images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36859,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that are currently running and have port 8080 published. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36860,
      "type": "docker",
      "category": "container_management",
      "input": "Please log in to myregistry.example.com by providing your username as johndoe.",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36861,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the running containers that are derived from Debian, Docker.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36862,
      "type": "docker",
      "category": "process_management",
      "input": "Show me any containers that have been started since 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36863,
      "type": "docker",
      "category": "process_management",
      "input": "I would like to see a list of containers that have the status running. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36864,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the containers that exited before the container with ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36865,
      "type": "docker",
      "category": "process_management",
      "input": "Provide the details of the active containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36866,
      "type": "docker",
      "category": "process_management",
      "input": "What containers are currently running? Include only the last five.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36867,
      "type": "docker",
      "category": "process_management",
      "input": "Tell me the status and sizes of the running containers.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36868,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the containers that are currently running with the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36869,
      "type": "docker",
      "category": "image_management",
      "input": "It would be really helpful if you could show me the repositories and tags of your images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36870,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the containers and their sizes.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36871,
      "type": "docker",
      "category": "image_management",
      "input": "I want to see the nginx images in the repository.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36872,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the list of running Docker containers that started from 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36873,
      "type": "docker",
      "category": "process_management",
      "input": "Share the information of your last container run quickly.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36874,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the list of containers that have exited and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36875,
      "type": "docker",
      "category": "process_management",
      "input": "Display all healthy containers.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36876,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers, including the ones that are not currently running. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 36877,
      "type": "docker",
      "category": "process_management",
      "input": "Display the current status and sizes of all the containers.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36878,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the running Docker containers that started from 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36879,
      "type": "docker",
      "category": "image_management",
      "input": "List all the nginx images in the store.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36880,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the details of containers that have exited and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36881,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of the running containers since 4f66ad9a0b2e. ",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36882,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that are running and have port 8080 published. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36883,
      "type": "docker",
      "category": "process_management",
      "input": "Present a list of all running containers with their respective images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36884,
      "type": "docker",
      "category": "image_management",
      "input": "I need you to display the repositories and tags of your images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36885,
      "type": "docker",
      "category": "process_management",
      "input": "Display the complete information of currently running containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36886,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of all containers and their names, images, and current status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36887,
      "type": "docker",
      "category": "image_management",
      "input": "List out all the Docker images, including the ones not currently active.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 36888,
      "type": "docker",
      "category": "process_management",
      "input": "List all active containers with complete information.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36889,
      "type": "docker",
      "category": "image_management",
      "input": "Show the list of nginx images in the store.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36890,
      "type": "docker",
      "category": "process_management",
      "input": "Present me with the details of the most recently executed container, now!",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36891,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with the details of the containers that are currently running.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36892,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers with a status of running. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36893,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all containers running in the frontend network, filtering by their running statuses.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36894,
      "type": "docker",
      "category": "image_management",
      "input": "Can you provide the Docker image IDs only? ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 36895,
      "type": "docker",
      "category": "image_management",
      "input": "Show me a table that includes the repository, tag, ID, and size of the images.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36896,
      "type": "docker",
      "category": "image_management",
      "input": "Present the images with a created timestamp prior to \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36897,
      "type": "docker",
      "category": "image_management",
      "input": "List the IDs, repository names, and tags for the dangling images.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36898,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers that have exited, filtering them by ID and excluding '3e33ad9a0b2e'.",
      "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36899,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with the repository, tag, and digest for all the images.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36900,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, I'd like to see a list of running containers, but only the ones with the 'network=host' filter applied.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36901,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers and their respective names, images, and current status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36902,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the images along with their repository, tag, and digest in the system.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36903,
      "type": "docker",
      "category": "process_management",
      "input": "I need information about the first five running containers.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36904,
      "type": "docker",
      "category": "process_management",
      "input": "Terminate all currently running containers.",
      "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36905,
      "type": "docker",
      "category": "image_management",
      "input": "Please show me a list of dangling images.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36906,
      "type": "docker",
      "category": "image_management",
      "input": "Get me all the images in Docker.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36907,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the containers that exited before container 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36908,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the currently running containers?",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36909,
      "type": "docker",
      "category": "image_management",
      "input": "Present the repository, tag, and ID for all images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36910,
      "type": "docker",
      "category": "process_management",
      "input": "List all healthy containers.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36911,
      "type": "docker",
      "category": "image_management",
      "input": "Help me gather information about the confusioner images, including the repository, tag, and ID.",
      "output": "docker images confusioner --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36912,
      "type": "docker",
      "category": "image_management",
      "input": "Please display the full details of all Docker images, including the ones not currently being used.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 36913,
      "type": "docker",
      "category": "process_management",
      "input": "I would like to see the list of containers running on my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36914,
      "type": "docker",
      "category": "container_management",
      "input": "Kindly terminate all existing Docker containers.",
      "output": "\"docker stop $(docker ps -q)\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36915,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the containers that are currently running and have volumes attached to \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36916,
      "type": "docker",
      "category": "image_management",
      "input": "Display the digests for all the images available in Docker. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 36917,
      "type": "docker",
      "category": "image_management",
      "input": "I am looking for the images created since the nginx:alpine image.",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36918,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the running containers after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36919,
      "type": "docker",
      "category": "image_management",
      "input": "Please provide me with a list of all the Docker images, including the ones that are dangling. Additionally, include their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36920,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the list of running containers that were created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36921,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the IDs of all the containers that are currently running. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36922,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with a list of running containers listening on port 8080. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36923,
      "type": "docker",
      "category": "process_management",
      "input": "Provide a list of running containers that have exposed port 80.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36924,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that are named \"my-container\". ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 36925,
      "type": "docker",
      "category": "container_management",
      "input": "Stop all running containers.",
      "output": "\"docker stop $(docker ps -q)\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36926,
      "type": "docker",
      "category": "container_management",
      "input": "Could you please log in using your username and password? It's important.",
      "output": "\"docker login --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36927,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers with port 80 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36928,
      "type": "docker",
      "category": "image_management",
      "input": "Show me all the Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36929,
      "type": "docker",
      "category": "process_management",
      "input": "Please kill all the containers which have exited. ",
      "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=exited)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36930,
      "type": "docker",
      "category": "process_management",
      "input": "Could you show me the IDs of the containers that are currently running? ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36931,
      "type": "docker",
      "category": "process_management",
      "input": "Give me all the container IDs, whether they are currently running or stopped. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36932,
      "type": "docker",
      "category": "image_management",
      "input": "Generate a list of all images' repository, tag, and ID for those created before the latest confusioner image.",
      "output": "docker images -f \"before=confusioner:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36933,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that are running on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36934,
      "type": "docker",
      "category": "container_management",
      "input": "Hi Docker, please log in to the registry at yetanotherregistry.example.net using the username \"marydoe\" and the password \"herpassword\".",
      "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 36935,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch me the containers that are running but have unhealthy health status.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36936,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the list of tasks currently running in Docker.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 36937,
      "type": "docker",
      "category": "process_management",
      "input": "Give me an overview of the current status and sizes of the containers that are running.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36938,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, list all the running containers that are rooted from Debian.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36939,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch all the available Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36940,
      "type": "docker",
      "category": "process_management",
      "input": "Display the IDs of all containers, regardless of their current state. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36941,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, show me the containers in exited status, please.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36942,
      "type": "docker",
      "category": "process_management",
      "input": "List the names of the first five running containers.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36943,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that are currently running and in a healthy condition.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36944,
      "type": "docker",
      "category": "image_management",
      "input": "Can you please show me the images since the nginx:alpine image?",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 36945,
      "type": "docker",
      "category": "process_management",
      "input": "Present the information of the container you ran last.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36946,
      "type": "docker",
      "category": "container_management",
      "input": "\"Docker, it's time to log in to the new registry at newregistry.example.org. Please provide your username, Mary Doe.\"",
      "output": "\"docker login newregistry.example.org --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36947,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers, be it running or stopped. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36948,
      "type": "docker",
      "category": "image_management",
      "input": "Can you please display the repositories and tags of your images?",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36949,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the running containers that are exposing port 80.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36950,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that were created before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36951,
      "type": "docker",
      "category": "process_management",
      "input": "Please present the IDs and images of all the running containers.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36952,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers, even the inactive ones. Give me the details of the first three.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36953,
      "type": "docker",
      "category": "container_management",
      "input": "Hey Docker, please ensure that all the containers using my image are stopped.",
      "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36954,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the list of containers which have the ancestor set to mongo and volume set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36955,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, please kill all running containers immediately!",
      "output": "\"docker kill -s SIGTERM $(docker ps -q)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36956,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see the containers called \"my-container\", please. ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 36957,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers labeled as ACME from vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36958,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the list of running containers with a healthy status.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36959,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of the dangling images and their tags.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36960,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers running on my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36961,
      "type": "docker",
      "category": "process_management",
      "input": "Tell me the current sizes of all the containers.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36962,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers running prior to 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36963,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers with the status set as \"exited\" and the ancestor image set as Alpine.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36964,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the list of running containers that have the ACME label from the ACME vendor.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36965,
      "type": "docker",
      "category": "process_management",
      "input": "Let me know about the last container you executed.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36966,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see the details of your last container run.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 36967,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, show me the running containers and filter them. I want only the ones with 'network=host'.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36968,
      "type": "docker",
      "category": "process_management",
      "input": "Display running containers that have the Ubuntu image as their ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36969,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the names and images of all containers that are currently running.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36970,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers with the name \"my-container\". ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 36971,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, please provide me access by logging me in with the username \"marydoe\".",
      "output": "\"docker login --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36972,
      "type": "docker",
      "category": "process_management",
      "input": "Display a list of containers with the name \"my-container\", please. ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 36973,
      "type": "docker",
      "category": "process_management",
      "input": "Could you show me the names and images of all running containers?",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36974,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve just the Docker image IDs. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 36975,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all running containers in the frontend network and their statuses.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36976,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with the IDs and images of all the containers running.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36977,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the images and IDs of all the containers that are running.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36978,
      "type": "docker",
      "category": "process_management",
      "input": "Show running containers, including their names and statuses.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36979,
      "type": "docker",
      "category": "container_management",
      "input": "\"You can't proceed without logging in, Docker. Use johndoe as your username.\"",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 36980,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with the details of nginx images, such as the repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36981,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the containers that are no longer running?",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36982,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, would you mind stopping my_container1 and my_container2?",
      "output": "\"docker stop my_container1 my_container2\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 36983,
      "type": "docker",
      "category": "process_management",
      "input": "Could you show me the IDs and images of all running containers?",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36984,
      "type": "docker",
      "category": "image_management",
      "input": "List all the images with their corresponding repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36985,
      "type": "docker",
      "category": "image_management",
      "input": "Make the list of images available in full, please.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 36986,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the exited containers with the parent image set as Alpine.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36987,
      "type": "docker",
      "category": "image_management",
      "input": "Unveil the repository, tag, and ID for each image.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36988,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, make sure you stop the container named \"my_container\" using the SIGTERM signal.",
      "output": "\"docker kill -s SIGTERM my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 36989,
      "type": "docker",
      "category": "process_management",
      "input": "I need a list of containers that have stopped running.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36990,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have exited before the one with ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36991,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the containers that are currently healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36992,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the running containers and present their names and statuses.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36993,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with the digests of all the images in Docker. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 36994,
      "type": "docker",
      "category": "image_management",
      "input": "Display all the images along with their corresponding digests. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 36995,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images along with their repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 36996,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see the running containers that have port 8080 published. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 36997,
      "type": "docker",
      "category": "process_management",
      "input": "Show all the containers with the status running on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 36998,
      "type": "docker",
      "category": "process_management",
      "input": "Can you display the IDs of the containers that are currently running? ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 36999,
      "type": "docker",
      "category": "image_management",
      "input": "Get me the nginx image listing.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37000,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all containers that are in a healthy state.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37001,
      "type": "docker",
      "category": "process_management",
      "input": "Display all running containers created since 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37002,
      "type": "docker",
      "category": "process_management",
      "input": "List only the running containers with volumes mounted at \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37003,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide the running containers that were created before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37004,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers that are published on port 8080. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37005,
      "type": "docker",
      "category": "image_management",
      "input": "Make the complete details of the images visible to me.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37006,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list showing all containers and their respective names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37007,
      "type": "docker",
      "category": "image_management",
      "input": "Help me gather information about the nginx images, including the repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37008,
      "type": "docker",
      "category": "process_management",
      "input": "Show me a list of containers that are running and have port 443 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37009,
      "type": "docker",
      "category": "process_management",
      "input": "Please find all the containers having the ancestor set as mongo and volumes set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37010,
      "type": "docker",
      "category": "process_management",
      "input": "Could you fetch the names and statuses of the running containers, please?",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37011,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are not running and have Alpine as their ancestor.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37012,
      "type": "docker",
      "category": "process_management",
      "input": "Can you display the running tasks in Docker?",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37013,
      "type": "docker",
      "category": "process_management",
      "input": "Show running containers that are exposing port 80.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37014,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of the running containers with the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37015,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve information about containers that have exited and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37016,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers filtered by creation since 4f66ad9a0b2e. ",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37017,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that exited prior to the container with the ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37018,
      "type": "docker",
      "category": "container_management",
      "input": "Kindly stop all the currently active containers in a graceful way within 5 seconds, Docker.",
      "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37019,
      "type": "docker",
      "category": "process_management",
      "input": "Please give me a list of containers that are currently healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37020,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of all Docker images, including those that are not being used.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 37021,
      "type": "docker",
      "category": "process_management",
      "input": "Show running containers filtered by the Ubuntu ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37022,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me all the running containers and their names and statuses?",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37023,
      "type": "docker",
      "category": "process_management",
      "input": "List all the stopped containers for me.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37024,
      "type": "docker",
      "category": "image_management",
      "input": "Show me all the images that were created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37025,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, I'm requesting you to log me in as Johndoe.",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37026,
      "type": "docker",
      "category": "process_management",
      "input": "Display the current status and sizes of all the containers that are running.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37027,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the running containers that have Debian as their base image, Docker.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37028,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that are running and marked as unhealthy.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37029,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers filtered with the Ubuntu ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37030,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the last 4 containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 37031,
      "type": "docker",
      "category": "image_management",
      "input": "Can you display the dangling images for me?",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37032,
      "type": "docker",
      "category": "container_management",
      "input": "Hey Docker, log in using your username and password. We need to proceed further.",
      "output": "\"docker login --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37033,
      "type": "docker",
      "category": "container_management",
      "input": "\"Please ensure that you are logged in to myregistry.example.com with the username 'johndoe'.\"",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37034,
      "type": "docker",
      "category": "process_management",
      "input": "List down all the running Docker containers starting from 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37035,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the last 4 containers that were recently running. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 37036,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37037,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the information of all the images including their respective repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37038,
      "type": "docker",
      "category": "container_management",
      "input": "Stop the container named \"my_container\" immediately.",
      "output": "\"docker stop my_container\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37039,
      "type": "docker",
      "category": "image_management",
      "input": "List all images that have dangling status.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37040,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with a breakdown of the running containers and their sizes.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37041,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the containers and their status. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 37042,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images without omitting any details.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37043,
      "type": "docker",
      "category": "process_management",
      "input": "Please list all the containers running with the label from ACME vendor.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37044,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the complete list of images without abbreviating any information.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37045,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers created later than 3e33ad9a0b3e.",
      "output": "docker ps --filter 'since=3e33ad9a0b3e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37046,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the list of dangling images.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37047,
      "type": "docker",
      "category": "container_management",
      "input": "Cease the operation of all containers currently running in Docker, please.",
      "output": "\"docker stop $(docker ps -q)\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37048,
      "type": "docker",
      "category": "process_management",
      "input": "Display all containers and their respective names, images, and current status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37049,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list displaying all containers and their corresponding names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37050,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers with the volume \"/data\" and the ancestor \"postgres\".",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37051,
      "type": "docker",
      "category": "image_management",
      "input": "Get the digests of all the images in Docker. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 37052,
      "type": "docker",
      "category": "image_management",
      "input": "I want you to list all the images and organize them in a table showing the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37053,
      "type": "docker",
      "category": "image_management",
      "input": "List down the nginx images that are present.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37054,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, kindly log in to anotherregistry.example.com with the provided credentials: username \"johndoe\" and password \"mypassword\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37055,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers, please. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37056,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are not running and have Alpine as their ancestor image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37057,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the details of the three last containers, regardless of their status.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37058,
      "type": "docker",
      "category": "container_management",
      "input": "Stop my_container without any delay.",
      "output": "\"docker stop -t 0 my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37059,
      "type": "docker",
      "category": "process_management",
      "input": "Just tell me what container you last ran.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 37060,
      "type": "docker",
      "category": "process_management",
      "input": "Can you display the running tasks in Docker, please?",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37061,
      "type": "docker",
      "category": "process_management",
      "input": "Return the names of the containers that are currently running.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37062,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that have exited and are using Alpine as the ancestor image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37063,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers running in the frontend-network with their current status.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37064,
      "type": "docker",
      "category": "image_management",
      "input": "Get the images with the label \"maintainer=nginx\" and provide their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37065,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the containers that are currently running.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37066,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that are currently running, including their names and images.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37067,
      "type": "docker",
      "category": "image_management",
      "input": "Can you please list the repositories and tags used for your images?",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37068,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see the containers that have exited before container 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37069,
      "type": "docker",
      "category": "process_management",
      "input": "Show the containers that exited before the container 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37070,
      "type": "docker",
      "category": "process_management",
      "input": "Please show the containers that are currently running and were created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37071,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the information of the last 4 containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 37072,
      "type": "docker",
      "category": "process_management",
      "input": "Find all containers where the volume is set as \"/data\" and the ancestor is set as \"postgres\".",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37073,
      "type": "docker",
      "category": "process_management",
      "input": "Display the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37074,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of all currently running containers after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37075,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the stopped containers.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37076,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of the containers currently running and having the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37077,
      "type": "docker",
      "category": "process_management",
      "input": "Tell me which containers are currently running.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37078,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are running and exposing port 80.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37079,
      "type": "docker",
      "category": "image_management",
      "input": "Show me a list of images' repository, tag, and ID for those created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37080,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have port 9090 published and are currently running.",
      "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37081,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the containers that have exited with a status code of 1.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37082,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the details of images that have the label \"maintainer=nginx,\" including their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37083,
      "type": "docker",
      "category": "process_management",
      "input": "Could you provide me with the containers that have a running status? ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37084,
      "type": "docker",
      "category": "image_management",
      "input": "Show the repository, tag, and ID for each nginx image available.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37085,
      "type": "docker",
      "category": "image_management",
      "input": "Get me the images stored in Docker.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37086,
      "type": "docker",
      "category": "process_management",
      "input": "Cease the execution of confusioner.",
      "output": "\"docker kill confusioner\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37087,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers with port 8080 exposed. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37088,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the containers with the name \"my-container\". ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 37089,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that are running and are in a healthy state.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37090,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide the containers that are running and exposing port 80. ",
      "output": "docker ps --filter 'expose=80'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37091,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the containers with the ancestor set as mongo and volume set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37092,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, can you please display the containers that have exited status?",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37093,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that have stopped running.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37094,
      "type": "docker",
      "category": "process_management",
      "input": "Please get me the containers that have exited, filtering them by their ID and excluding '3e33ad9a0b2e'.",
      "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37095,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers with the status set as exited and using Alpine as the ancestor.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37096,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the details of all current containers without truncating.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37097,
      "type": "docker",
      "category": "process_management",
      "input": "Open up the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37098,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers along with their sizes.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37099,
      "type": "docker",
      "category": "process_management",
      "input": "Display a complete list of all containers, including those that are currently running or stopped. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37100,
      "type": "docker",
      "category": "container_management",
      "input": "Halt all running containers that have been created from my_image.",
      "output": "\"docker stop $(docker ps -q --filter status=running --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37101,
      "type": "docker",
      "category": "image_management",
      "input": "List all Docker images, including those that are not being used right now.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 37102,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the names and statuses of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37103,
      "type": "docker",
      "category": "process_management",
      "input": "Please give me the list of containers that are running and have network=my-network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37104,
      "type": "docker",
      "category": "image_management",
      "input": "Get me the images in a table format and include their repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37105,
      "type": "docker",
      "category": "image_management",
      "input": "Could you please display the repositories and tags of your images?",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37106,
      "type": "docker",
      "category": "process_management",
      "input": "Give me all the container IDs, regardless of their status. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37107,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, please display the containers with exited status.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37108,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that have exited and are using Alpine as the parent.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37109,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers, including their names, images, and current status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37110,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with a list of containers that are running right now and have port 443 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37111,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch all images with the \"maintainer=nginx\" label and display their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37112,
      "type": "docker",
      "category": "image_management",
      "input": "Display the repository names, tags, and IDs of the images that are not being used by any containers.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37113,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the Docker containers that have exited and are related to the mongo image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37114,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the IDs of Docker images. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 37115,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the details of containers that have exited and are based on Alpine.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37116,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the IDs and images of all the running containers.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37117,
      "type": "docker",
      "category": "container_management",
      "input": "Please log in to the container registry using the provided username and password.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 37118,
      "type": "docker",
      "category": "process_management",
      "input": "Can you display the containers that are currently running?",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37119,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers that are marked as healthy.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37120,
      "type": "docker",
      "category": "process_management",
      "input": "Get the status of containers created after 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37121,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers with volumes matching \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37122,
      "type": "docker",
      "category": "process_management",
      "input": "Can you help me find the containers that are currently running and were created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37123,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, fetch the running containers which are descendants of Debian.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37124,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the list of running containers created before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37125,
      "type": "docker",
      "category": "process_management",
      "input": "I need a list of running containers that expose port 8080. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37126,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the details of any containers started since 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37127,
      "type": "docker",
      "category": "image_management",
      "input": "Don't leave out any details while showing the images to me.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37128,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the running containers and filter them based on volumes connected to \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37129,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, send a SIGHUP signal to my_container and bring it to a halt.",
      "output": "\"docker kill -s SIGHUP my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37130,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the names of running containers created before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37131,
      "type": "docker",
      "category": "image_management",
      "input": "List just the Docker image IDs. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 37132,
      "type": "docker",
      "category": "image_management",
      "input": "I request you to provide me with the complete list of images.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37133,
      "type": "docker",
      "category": "image_management",
      "input": "Display the dangling images.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37134,
      "type": "docker",
      "category": "container_management",
      "input": "Pull the latest version of the Redis image.",
      "output": "\"docker login --username=marydoe --password-stdin < ~/herpassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 37135,
      "type": "docker",
      "category": "image_management",
      "input": "I want to see the IDs of Docker images. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 37136,
      "type": "docker",
      "category": "process_management",
      "input": "Please terminate reverseProxyGinto in a graceful manner using SIGHUP signal.",
      "output": "\"docker kill -s SIGHUP reverseProxyGinto\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37137,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the running containers filtered by volumes mounted at \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37138,
      "type": "docker",
      "category": "process_management",
      "input": "Display all containers, both running and stopped. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 37139,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the list of containers that exited and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37140,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the containers that are currently running and having the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37141,
      "type": "docker",
      "category": "image_management",
      "input": "Show me all the available images, including the ones not currently in use.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 37142,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers with their respective images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37143,
      "type": "docker",
      "category": "process_management",
      "input": "Terminate all containers currently running in Docker, ASAP!",
      "output": "\"docker kill -s SIGTERM $(docker ps -q)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37144,
      "type": "docker",
      "category": "process_management",
      "input": "Please show the details of containers that have exited successfully.",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37145,
      "type": "docker",
      "category": "image_management",
      "input": "Get the list of images and display their repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37146,
      "type": "docker",
      "category": "image_management",
      "input": "Could you provide me with a list of all Docker images, including the ones that are not being used?",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 37147,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers running on my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37148,
      "type": "docker",
      "category": "container_management",
      "input": "Stop my_container1 and my_container2, Docker.",
      "output": "\"docker stop my_container1 my_container2\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37149,
      "type": "docker",
      "category": "process_management",
      "input": "I would like to see a list of running containers and their corresponding images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37150,
      "type": "docker",
      "category": "container_management",
      "input": "\"Mary, please log into the new registry on newregistry.example.org using your username.\"",
      "output": "\"docker login newregistry.example.org --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37151,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with a list of all Docker images, including the ones not in use currently.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 37152,
      "type": "docker",
      "category": "process_management",
      "input": "Please list all containers that have exited, filtering them by their ID and excluding '3e33ad9a0b2e'.",
      "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37153,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the list of Docker containers that have an exited status and use the nginx image as their ancestor.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37154,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve all the containers that have the ancestor set as mongo and volumes set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37155,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers that are currently running and expose port 80.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37156,
      "type": "docker",
      "category": "image_management",
      "input": "Get the images that have the label \"maintainer=nginx\" and show their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37157,
      "type": "docker",
      "category": "process_management",
      "input": "List the details of the last five running containers.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37158,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers that have exited before the container with ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37159,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the list of containers which have the ancestor as mongo and volume set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37160,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the repository, tag, and ID of images labeled with \"maintainer=nginx.\"",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37161,
      "type": "docker",
      "category": "process_management",
      "input": "Display all containers, showing their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37162,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are running and have port 443 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37163,
      "type": "docker",
      "category": "process_management",
      "input": "I would like to see the last 4 containers that were active. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 37164,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve containers that have the volume set as \"/data\" and are based on the \"postgres\" image.",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37165,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the containers with a health status of healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37166,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of all containers and their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37167,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the containers that are in a stopped state.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37168,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, can you list all the containers that have exited status?",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37169,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, show me all the containers that are in exited status, please.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37170,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the complete list of images without omission.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37171,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the last 4 containers that were active. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 37172,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running Docker containers that were started after 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37173,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see a complete list of containers and their status. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 37174,
      "type": "docker",
      "category": "image_management",
      "input": "Hey, Docker, could you please give me a list of all available images, including the dangling ones? Also, provide their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37175,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve only the Docker image IDs for me. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 37176,
      "type": "docker",
      "category": "process_management",
      "input": "Show running containers with port 80 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37177,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the list of running containers and their images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37178,
      "type": "docker",
      "category": "container_management",
      "input": "Hey Docker, make sure you log in to myregistry.example.com with the username \"johndoe\" and the password \"mypassword\".",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37179,
      "type": "docker",
      "category": "image_management",
      "input": "List all the available images with their repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37180,
      "type": "docker",
      "category": "image_management",
      "input": "Display the repository, tag, and ID information for all images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37181,
      "type": "docker",
      "category": "image_management",
      "input": "I would like to see a list of all the images including their corresponding repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37182,
      "type": "docker",
      "category": "container_management",
      "input": "Put a stop to any containers that are currently running.",
      "output": "\"docker stop $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37183,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers that are running and expose the port 80.",
      "output": "docker ps --filter 'expose=80'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37184,
      "type": "docker",
      "category": "process_management",
      "input": "Display the names and statuses of all running containers for me.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37185,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37186,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have the ancestor as mongo and volumes set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37187,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers in the frontend network and their respective statuses.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37188,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve all running containers' IDs and images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37189,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that are running and considered healthy.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37190,
      "type": "docker",
      "category": "container_management",
      "input": "It would be great if you could authenticate yourself on anotherregistry.example.com. Use your username as \"johndoe\" and password as \"mypassword\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37191,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers that have exited with a status code of 1.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37192,
      "type": "docker",
      "category": "process_management",
      "input": "Display the tasks that are currently running in Docker, please.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37193,
      "type": "docker",
      "category": "image_management",
      "input": "Display all the images along with their corresponding repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37194,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, I request you to shut down my_container with the SIGINT signal.",
      "output": "\"docker kill -s SIGINT my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37195,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the details of containers that have exited and are using the Alpine image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37196,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with a list of containers and their respective status. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 37197,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the list of running containers that have the 'com.example.vendor' set as ACME and are currently running.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37198,
      "type": "docker",
      "category": "container_management",
      "input": "Terminate my_container gracefully in 10 seconds.",
      "output": "\"docker stop -t 10 my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37199,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers with exited status, please Docker.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37200,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with a list of images and their corresponding repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37201,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the stopped containers.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37202,
      "type": "docker",
      "category": "process_management",
      "input": "Give a detailed list of the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37203,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of all containers in the frontend network that are currently running.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37204,
      "type": "docker",
      "category": "image_management",
      "input": "Display the repositories and tags used for your images, if you may.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37205,
      "type": "docker",
      "category": "process_management",
      "input": "List down the containers that have exited before container with ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37206,
      "type": "docker",
      "category": "image_management",
      "input": "What images have been generated since the nginx:alpine image?",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37207,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that have the Ubuntu image as their ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37208,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the details of your most recent container execution without delay.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 37209,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the list of running containers with Debian as their ancestor.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37210,
      "type": "docker",
      "category": "image_management",
      "input": "List the repository names, tags, and IDs for the images that are not being used.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37211,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me all the containers, irrespective of their status. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37212,
      "type": "docker",
      "category": "process_management",
      "input": "Display the list of containers that are currently running and exposing port 443.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37213,
      "type": "docker",
      "category": "image_management",
      "input": "Show the repository, tag, and digest for the images in the system.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37214,
      "type": "docker",
      "category": "process_management",
      "input": "I want to know the names and statuses of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37215,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, display the running containers that have Debian as their ancestor.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37216,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers filtered by the ACME label from vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37217,
      "type": "docker",
      "category": "container_management",
      "input": "Do me a favor and authenticate yourself by logging into my registry using \"johndoe\" as your username and \"mypassword\" as your password.",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37218,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers currently running with the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37219,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the containers that have exited status, Docker.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37220,
      "type": "docker",
      "category": "image_management",
      "input": "List down the images which are dangling.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37221,
      "type": "docker",
      "category": "image_management",
      "input": "I need only a list of the Docker image IDs. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 37222,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are not running and are based on the Alpine image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37223,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, I command you to kill the container named \"my_container\" promptly using the SIGTERM signal.",
      "output": "\"docker kill -s SIGTERM my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37224,
      "type": "docker",
      "category": "image_management",
      "input": "Could you display all the images along with their corresponding repository, tag, and ID?",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37225,
      "type": "docker",
      "category": "process_management",
      "input": "Can you please show me the containers having the ancestor set as mongo and volumes set to /app?",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37226,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers with the volume set to \"/data\" and the ancestor set as \"postgres\".",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37227,
      "type": "docker",
      "category": "process_management",
      "input": "Display the details of the most recent container execution now!",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 37228,
      "type": "docker",
      "category": "process_management",
      "input": "Provide a list of containers that expose port 80 and are running.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37229,
      "type": "docker",
      "category": "image_management",
      "input": "Present the Docker images that were created earlier than \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37230,
      "type": "docker",
      "category": "image_management",
      "input": "I want to see all Docker images, including the ones that are not currently in use.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 37231,
      "type": "docker",
      "category": "image_management",
      "input": "List down the repository, tag, and ID of the images that were created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37232,
      "type": "docker",
      "category": "process_management",
      "input": "Inform me about the last container run instantly.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 37233,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers running on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37234,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the repository, tag, and ID of all the images.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37235,
      "type": "docker",
      "category": "container_management",
      "input": "Halt all the containers that are currently operating in Docker.",
      "output": "\"docker stop $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37236,
      "type": "docker",
      "category": "process_management",
      "input": "Can you display the IDs of the running containers? ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37237,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers that are currently running on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37238,
      "type": "docker",
      "category": "process_management",
      "input": "List only the IDs of the containers that are running. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37239,
      "type": "docker",
      "category": "process_management",
      "input": "Let me know the list of containers that have exited successfully and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37240,
      "type": "docker",
      "category": "process_management",
      "input": "List the Docker containers with an ancestor of nginx and an exited status.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37241,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide a list of tasks that are currently running in Docker.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37242,
      "type": "docker",
      "category": "image_management",
      "input": "Can you please list the repositories and tags of your images?",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37243,
      "type": "docker",
      "category": "container_management",
      "input": "I urge you to put an end to all running my_image containers.",
      "output": "\"docker stop $(docker ps -q --filter status=running --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37244,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers with the status set as exited and using Alpine as the base image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37245,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers running in the frontend network.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37246,
      "type": "docker",
      "category": "image_management",
      "input": "Make the complete list of images with their details visible to me.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37247,
      "type": "docker",
      "category": "container_management",
      "input": "\"I need you to log in to myregistry.example.com. Use 'johndoe' as your username.\"",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37248,
      "type": "docker",
      "category": "process_management",
      "input": "Get the list of containers that have exited before the container with ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37249,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the last 4 containers that were running. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 37250,
      "type": "docker",
      "category": "process_management",
      "input": "Please give me the list of Docker containers that have exited and are based on nginx.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37251,
      "type": "docker",
      "category": "image_management",
      "input": "Can you list the Docker image IDs? ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 37252,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, I need you to kill my_container gracefully with a SIGHUP signal.",
      "output": "\"docker kill -s SIGHUP my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37253,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that are currently in a healthy condition.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37254,
      "type": "docker",
      "category": "image_management",
      "input": "Get me the repository, tag, and digest for the images on the server.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37255,
      "type": "docker",
      "category": "image_management",
      "input": "Can you please present the repositories and tags associated with your images?",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37256,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, please put an end to my_container1 and my_container2.",
      "output": "\"docker stop my_container1 my_container2\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37257,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, list the containers that are running and have the 'network=host' filter applied.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37258,
      "type": "docker",
      "category": "image_management",
      "input": "Provide a table of images, including details like the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37259,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of Docker image IDs. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 37260,
      "type": "docker",
      "category": "container_management",
      "input": "Halt the operation of all Docker containers, please.",
      "output": "\"docker stop $(docker ps -q)\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37261,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, please show me the running containers, but filter them by 'network=host'.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37262,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the containers that are running and have volumes linked to the \"/data\" directory.",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37263,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the running containers created before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37264,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the running containers filtered by volumes attached to \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37265,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve only the Docker image IDs. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 37266,
      "type": "docker",
      "category": "process_management",
      "input": "Could you please show me the IDs of the running containers? ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37267,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers and include their names and images.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37268,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are running and exposing port 443.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37269,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers created after 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37270,
      "type": "docker",
      "category": "container_management",
      "input": "Show the logs of the container \"my_container\".",
      "output": "\"docker login --username=marydoe --password-stdin < ~/herpassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 37271,
      "type": "docker",
      "category": "image_management",
      "input": "What are the images that have been generated since the nginx:alpine image?",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37272,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve all the containers that are currently running and having the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37273,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers with the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37274,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that have exited successfully.",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37275,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers that expose port 80 and are running.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37276,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers that are listening on port 8080. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37277,
      "type": "docker",
      "category": "process_management",
      "input": "It would be great if you could terminate my_container by sending the SIGINT signal.",
      "output": "\"docker kill -s SIGINT my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37278,
      "type": "docker",
      "category": "process_management",
      "input": "I want to know which containers are currently running. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37279,
      "type": "docker",
      "category": "image_management",
      "input": "Please display all the images along with their repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37280,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me the list of images, including the repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37281,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the Docker containers that have an exited status and are descended from the nginx image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37282,
      "type": "docker",
      "category": "process_management",
      "input": "Display running containers that are descendants of the Ubuntu image.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37283,
      "type": "docker",
      "category": "process_management",
      "input": "Please list the containers that were created before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37284,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the IDs of all containers, regardless of their current state. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37285,
      "type": "docker",
      "category": "process_management",
      "input": "Find all containers that are running and were created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37286,
      "type": "docker",
      "category": "image_management",
      "input": "List down the images' repository, tag, and ID for the ones created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37287,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the Docker containers that have exited and have nginx as their ancestor.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37288,
      "type": "docker",
      "category": "process_management",
      "input": "Provide the list of currently active containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37289,
      "type": "docker",
      "category": "image_management",
      "input": "Display the repository, tag, and ID for each available nginx image.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37290,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the running containers in the frontend network and their statuses.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37291,
      "type": "docker",
      "category": "image_management",
      "input": "Please show me all the Docker images, including the ones that are dangling. I also need their repository, tags, and IDs to be displayed.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37292,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of all the images and their digests. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 37293,
      "type": "docker",
      "category": "container_management",
      "input": "Terminate the container with the name \"my_container\" instantly.",
      "output": "\"docker stop my_container\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37294,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see all the containers that are marked as healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37295,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the dangling images, please.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37296,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of all the Docker images with their digests. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 37297,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers, whether running or stopped. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 37298,
      "type": "docker",
      "category": "process_management",
      "input": "What are the currently active containers?",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37299,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the information of the container you ran lastly.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 37300,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of all Docker images, including those that are not being used currently.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 37301,
      "type": "docker",
      "category": "image_management",
      "input": "Display the images that are dangling along with their respective repository names.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37302,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the images and provide their repository, tag, and ID information.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37303,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the nginx images along with their relevant details.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37304,
      "type": "docker",
      "category": "image_management",
      "input": "I want to see the images created after the nginx:alpine image.",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37305,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the running containers created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37306,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that are currently running and have been created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37307,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch me the details of the three latest containers, regardless of their status.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37308,
      "type": "docker",
      "category": "container_management",
      "input": "Please log me in to yetanotherregistry.example.net with the username \"marydoe\".",
      "output": "\"docker login yetanotherregistry.example.net --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37309,
      "type": "docker",
      "category": "process_management",
      "input": "Shut down all running containers gracefully.",
      "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37310,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the repository, tag, and digest for all the images on the server.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37311,
      "type": "docker",
      "category": "image_management",
      "input": "Display the Docker images created before \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37312,
      "type": "docker",
      "category": "image_management",
      "input": "Show me just the Docker image IDs, please. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 37313,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that are currently running and their respective sizes.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37314,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers that have port 8080 published. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37315,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the details of the nginx image.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37316,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers that are actively running and have port 9090 published.",
      "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37317,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the list of containers with /app as volume and mongo as ancestor.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37318,
      "type": "docker",
      "category": "container_management",
      "input": "List all running Docker containers.",
      "output": "\"docker login --username=marydoe --password-stdin < ~/herpassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 37319,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers that have been launched after 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37320,
      "type": "docker",
      "category": "process_management",
      "input": "Show me a list of running containers with the label 'com.example.vendor' set as ACME from the vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37321,
      "type": "docker",
      "category": "process_management",
      "input": "Get the containers that terminated before the one with ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37322,
      "type": "docker",
      "category": "image_management",
      "input": "List all images with the label \"maintainer=nginx\" and display their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37323,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, please authenticate on anotherregistry.example.com using the given username \"johndoe\" and password \"mypassword\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37324,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with a list of containers that are running on port 8080. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37325,
      "type": "docker",
      "category": "process_management",
      "input": "Stop my_container immediately.",
      "output": "\"docker kill my_container\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37326,
      "type": "docker",
      "category": "image_management",
      "input": "Provide a list of images maintained by nginx and their respective repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37327,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve all the containers that are currently running with the Ubuntu image. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37328,
      "type": "docker",
      "category": "process_management",
      "input": "Find all containers where the volume is set to \"/data\" and the ancestor is set to \"postgres\".",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37329,
      "type": "docker",
      "category": "container_management",
      "input": "Don't forget to login to the new registry using your username and password.",
      "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37330,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the list of running containers and their images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37331,
      "type": "docker",
      "category": "container_management",
      "input": "Please log in to myregistry.example.com using the username johndoe and password from the file ~/mypassword.txt.",
      "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 37332,
      "type": "docker",
      "category": "image_management",
      "input": "Please provide me with the Docker images before \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37333,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that are listening on port 8080 and currently running. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37334,
      "type": "docker",
      "category": "image_management",
      "input": "Please list the watchbot images' repository, tag, and ID.",
      "output": "docker images watchbot --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37335,
      "type": "docker",
      "category": "process_management",
      "input": "Find the containers that are not running anymore.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37336,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the containers that have stopped running.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37337,
      "type": "docker",
      "category": "process_management",
      "input": "Could you kindly kill my_container and deliver a SIGHUP signal?",
      "output": "\"docker kill -s SIGHUP my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37338,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the active containers with volumes connected to the \"/data\" path.",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37339,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, stop the container \"my_container\" promptly.",
      "output": "\"docker stop my_container\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37340,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers running with the Ubuntu ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37341,
      "type": "docker",
      "category": "image_management",
      "input": "Get me the repository, tag, and digest for the available images.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37342,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that have exited and are using the Alpine as the base.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37343,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the running containers with the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37344,
      "type": "docker",
      "category": "process_management",
      "input": "Display all containers that were running prior to 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37345,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with a list of nginx images, their repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37346,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, I need you to log in using your username and password, please.",
      "output": "\"docker login --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37347,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch all images maintained by nginx and provide details of their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37348,
      "type": "docker",
      "category": "process_management",
      "input": "I'm interested in the names and statuses of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37349,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the list of all containers running the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37350,
      "type": "docker",
      "category": "container_management",
      "input": "Display the detailed information of the image \"my_image\".",
      "output": "\"docker login --username=marydoe --password-stdin < ~/herpassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 37351,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are currently running and have port 80 exposed. ",
      "output": "docker ps --filter 'expose=80'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37352,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, could you display the running containers, but only the ones with the 'network=host' filter?",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37353,
      "type": "docker",
      "category": "process_management",
      "input": "I need to know which containers are currently running. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37354,
      "type": "docker",
      "category": "container_management",
      "input": "\"Docker, I need you to log in to the new registry with the username Mary Doe so we can continue.\"",
      "output": "\"docker login newregistry.example.org --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37355,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that are currently running with the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37356,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, I need you to log in as soon as possible. Use your username and password for authentication purposes.",
      "output": "\"docker login --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37357,
      "type": "docker",
      "category": "image_management",
      "input": "Please show me the nginx images' repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37358,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the status of the containers that are currently running.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37359,
      "type": "docker",
      "category": "process_management",
      "input": "Display the tasks that are running in Docker.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37360,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with a list of running containers that have port 8080 published and are currently running. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37361,
      "type": "docker",
      "category": "process_management",
      "input": "Share the details of the container you ran last.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 37362,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that are no longer running.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37363,
      "type": "docker",
      "category": "image_management",
      "input": "List all the images that are not currently being used.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37364,
      "type": "docker",
      "category": "image_management",
      "input": "List the available nginx images with their repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37365,
      "type": "docker",
      "category": "image_management",
      "input": "Present the images and their repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37366,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, could you kindly log in to anotherregistry.example.com using the username \"johndoe\"?",
      "output": "\"docker login anotherregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37367,
      "type": "docker",
      "category": "process_management",
      "input": "Inform about the containers that have exited with a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37368,
      "type": "docker",
      "category": "process_management",
      "input": "Please list all the containers and their respective status. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 37369,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the containers that are currently running and have been created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37370,
      "type": "docker",
      "category": "image_management",
      "input": "Get the images labeled with \"maintainer=nginx\" and show their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37371,
      "type": "docker",
      "category": "image_management",
      "input": "List all the available images with their complete details.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37372,
      "type": "docker",
      "category": "process_management",
      "input": "Display the detailed list of currently active containers without truncation.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37373,
      "type": "docker",
      "category": "process_management",
      "input": "What containers are currently running?",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37374,
      "type": "docker",
      "category": "image_management",
      "input": "Can you please inspect the repositories and tags of your images?",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37375,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see all the containers that are running and have the Ubuntu image. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37376,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all running containers filtered by the frontend network and running status.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37377,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, show me the containers in exited status.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37378,
      "type": "docker",
      "category": "process_management",
      "input": "List all the tasks running in Docker, please.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37379,
      "type": "docker",
      "category": "container_management",
      "input": "\"I need you to log in Docker, and your username is johndoe.\"",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37380,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with the details of the last container you executed immediately.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 37381,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of all the images and their corresponding digests. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 37382,
      "type": "docker",
      "category": "process_management",
      "input": "Hey there, Docker! How about showing me the running containers with the 'network=host' filter?",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37383,
      "type": "docker",
      "category": "container_management",
      "input": "Could you please stop my container?",
      "output": "\"docker stop -t 0 my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37384,
      "type": "docker",
      "category": "process_management",
      "input": "List the details of the first five running containers.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37385,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide a list of currently running containers after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37386,
      "type": "docker",
      "category": "process_management",
      "input": "Display all containers that are running in the frontend network with their statuses.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37387,
      "type": "docker",
      "category": "container_management",
      "input": "Please provide your username as johndoe to log in to myregistry.example.com.",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37388,
      "type": "docker",
      "category": "container_management",
      "input": "Stop myApp with no delay.",
      "output": "\"docker stop -t 0 myApp\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37389,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers in the frontend network with their respective running statuses.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37390,
      "type": "docker",
      "category": "container_management",
      "input": "\"Hey, log in to myregistry.example.com right now. Use 'johndoe' as your username.\"",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37391,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch all the containers that are currently active and have volumes linked to \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37392,
      "type": "docker",
      "category": "image_management",
      "input": "I need the repository, tag, and digest of the images.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37393,
      "type": "docker",
      "category": "image_management",
      "input": "Please list the repository, tag, and ID of the nginx images.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37394,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have been running before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37395,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers in the frontend network and their running statuses.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37396,
      "type": "docker",
      "category": "container_management",
      "input": "Kindly cease my_container within 10 seconds.",
      "output": "\"docker stop -t 10 my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37397,
      "type": "docker",
      "category": "process_management",
      "input": "Present the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37398,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the IDs of all Docker images. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 37399,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, can you display the containers with a running status? ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37400,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me all the containers, no matter if they are running or stopped. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37401,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the list of running containers along with their images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37402,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the containers that have a health status of healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37403,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the containers with exited status, Docker.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37404,
      "type": "docker",
      "category": "process_management",
      "input": "I want to view the information of the last 4 containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 37405,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, can you show me the containers that have exited status?",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37406,
      "type": "docker",
      "category": "image_management",
      "input": "Find the repository, tag, and ID of the images that were created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37407,
      "type": "docker",
      "category": "process_management",
      "input": "I want to know the last 4 containers that were recently active. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 37408,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers that are exposing port 80.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37409,
      "type": "docker",
      "category": "process_management",
      "input": "Can you please show me the running Docker containers that were created since 4f66ad9a0b2e?",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37410,
      "type": "docker",
      "category": "process_management",
      "input": "Can you please show me the containers that have the ancestor as mongo and volumes set to /app?",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37411,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see all the containers named \"my-container\". ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 37412,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the containers that have stopped running?",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37413,
      "type": "docker",
      "category": "image_management",
      "input": "Provide a list of images since the nginx:alpine image.",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37414,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the digests of all the Docker images. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 37415,
      "type": "docker",
      "category": "image_management",
      "input": "Don't skip any details while displaying the images to me.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37416,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that are in exited status, Docker.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37417,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images and their repository, tag, and ID information.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37418,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers and their respective sizes.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37419,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, kindly halt all the currently active containers in a smooth manner within 5 seconds.",
      "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37420,
      "type": "docker",
      "category": "image_management",
      "input": "Display the complete list of images without any truncation.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37421,
      "type": "docker",
      "category": "process_management",
      "input": "List the IDs of all the running containers, please. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37422,
      "type": "docker",
      "category": "image_management",
      "input": "Generate a table displaying the repository, tag, ID, and size of the images.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37423,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are running right now and exposing port 443.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37424,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the list of containers that exited before the container having the ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37425,
      "type": "docker",
      "category": "process_management",
      "input": "Hey there, Docker! I'd like to see the running containers, but only those with the 'network=host' filter.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37426,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, use the credentials from ~/mypassword.txt to log in as user \"johndoe\" on myregistry.example.com.",
      "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 37427,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the information of the three most recent containers.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37428,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the details of containers that exited with an exit status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37429,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the containers named \"my-container\". ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 37430,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the running containers labeled as ACME from the ACME vendor.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37431,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that are running and were created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37432,
      "type": "docker",
      "category": "container_management",
      "input": "Please halt all the currently active containers gracefully within 5 seconds, Docker.",
      "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37433,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers and their status. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 37434,
      "type": "docker",
      "category": "image_management",
      "input": "List the dangling images along with their repository names.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37435,
      "type": "docker",
      "category": "image_management",
      "input": "Get the images listed with their repository, tag, and ID details.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37436,
      "type": "docker",
      "category": "image_management",
      "input": "Let me know the complete details of all the available images.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37437,
      "type": "docker",
      "category": "image_management",
      "input": "Can you please display the dangling images?",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37438,
      "type": "docker",
      "category": "process_management",
      "input": "Please show the details of containers that have exited with a code of 0.",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37439,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the containers named \"my-container\", please. ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 37440,
      "type": "docker",
      "category": "image_management",
      "input": "Display the available nginx images.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37441,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, please stop my_container1 and my_container2 as soon as possible.",
      "output": "\"docker stop my_container1 my_container2\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37442,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of all containers with their respective names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37443,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the list of containers that have exited, excluding the one with ID '3e33ad9a0b2e'.",
      "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37444,
      "type": "docker",
      "category": "image_management",
      "input": "I need to see a list of all Docker images, including the dangling ones. Also, I want their repository, tags, and IDs to be displayed.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37445,
      "type": "docker",
      "category": "image_management",
      "input": "Display the images and their respective repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37446,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are currently running and have port 8080 published. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37447,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the list of containers which have the ancestor as mongo and volume set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37448,
      "type": "docker",
      "category": "image_management",
      "input": "Ensure that all the information of the images is displayed.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37449,
      "type": "docker",
      "category": "process_management",
      "input": "Show all the containers that have stopped running.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37450,
      "type": "docker",
      "category": "container_management",
      "input": "Hey Docker, log in to the registry yetanotherregistry.example.net using the login details of user \"marydoe\" and her corresponding password.",
      "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37451,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the tasks that are currently running.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37452,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers currently running and having the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37453,
      "type": "docker",
      "category": "process_management",
      "input": "Give me information about the containers that have exited without any errors.",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37454,
      "type": "docker",
      "category": "process_management",
      "input": "Display running containers filtered with the Ubuntu ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37455,
      "type": "docker",
      "category": "image_management",
      "input": "Get the repository, tag, and digest for each image in the system.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37456,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the information of all the images including their repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37457,
      "type": "docker",
      "category": "image_management",
      "input": "Display all the images along with their repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37458,
      "type": "docker",
      "category": "image_management",
      "input": "Display the repository, tag, and ID of images that are maintained by nginx.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37459,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, list all the containers with exited status.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37460,
      "type": "docker",
      "category": "process_management",
      "input": "Display the information of your latest running container.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 37461,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the exited containers with Alpine as their base image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37462,
      "type": "docker",
      "category": "process_management",
      "input": "Display only the IDs of the running containers. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37463,
      "type": "docker",
      "category": "process_management",
      "input": "Display the details of the three last containers, whether active or inactive.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37464,
      "type": "docker",
      "category": "process_management",
      "input": "Please kill my_container1 and my_container2 with a SIGINT signal.",
      "output": "\"docker kill -s SIGINT my_container1 my_container2\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37465,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37466,
      "type": "docker",
      "category": "image_management",
      "input": "Can you provide only the Docker image IDs? ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 37467,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, I request you to put an end to all currently active containers.",
      "output": "\"docker stop $(docker ps -q)\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37468,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are currently running and listening on port 8080. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37469,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the repository, tag, and digest of the images on the server.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37470,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the containers running the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37471,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers currently running and having the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37472,
      "type": "docker",
      "category": "image_management",
      "input": "List all the Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37473,
      "type": "docker",
      "category": "process_management",
      "input": "Show off the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37474,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the running containers filtered by network=my-network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37475,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the container you ran recently.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 37476,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the details of the most recently run container.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 37477,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, please show me the running containers with the 'network=host' filter applied.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37478,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers with the Ubuntu image as their ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37479,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the digests of all the available images. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 37480,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers running on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37481,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers, their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37482,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the names, images, and current status of all containers.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37483,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with the unique identifiers of all containers, irrespective of their current state. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37484,
      "type": "docker",
      "category": "image_management",
      "input": "Show the Docker images that have a creation date earlier than \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37485,
      "type": "docker",
      "category": "container_management",
      "input": "Hey Docker, stop my_container in 10 seconds.",
      "output": "\"docker stop -t 10 my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37486,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the tasks that are currently running in Docker?",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37487,
      "type": "docker",
      "category": "image_management",
      "input": "Please provide me with all the Docker images, including the ones that are dangling. Make sure to also include their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37488,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the containers that have the ancestor as mongo and volumes set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37489,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers which are running and healthy.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37490,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, send a SIGHUP signal to my_container and make it exit gracefully.",
      "output": "\"docker kill -s SIGHUP my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37491,
      "type": "docker",
      "category": "container_management",
      "input": "Ensure that you are logged in to myregistry.example.com. Use the username johndoe.",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37492,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the IDs of all containers, regardless of their status. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37493,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the containers that are healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37494,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images and their corresponding repository, tag, and digest on the server.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37495,
      "type": "docker",
      "category": "process_management",
      "input": "Display containers that have exited with a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37496,
      "type": "docker",
      "category": "process_management",
      "input": "Display the active containers that are publishing port 8080. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37497,
      "type": "docker",
      "category": "image_management",
      "input": "Display all the images along with their digests. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 37498,
      "type": "docker",
      "category": "image_management",
      "input": "I need the information of nginx images, including their repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37499,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the list of all containers that are running and were created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37500,
      "type": "docker",
      "category": "image_management",
      "input": "It would be great if you could show me the repositories and tags of your images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37501,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have port 8080 published and are currently running. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37502,
      "type": "docker",
      "category": "process_management",
      "input": "I'm waiting, provide me with the information about the last executed container right away.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 37503,
      "type": "docker",
      "category": "image_management",
      "input": "Please display the images in a table format, including the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37504,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the IDs of the containers that are currently running. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37505,
      "type": "docker",
      "category": "image_management",
      "input": "Display a table containing information about the images, including the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37506,
      "type": "docker",
      "category": "image_management",
      "input": "List the images that have been created after the nginx:alpine image.",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37507,
      "type": "docker",
      "category": "process_management",
      "input": "List the Docker tasks that are currently running.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37508,
      "type": "docker",
      "category": "image_management",
      "input": "Can you list all the repositories and tags of your images for me, please?",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37509,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that have a health status of healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37510,
      "type": "docker",
      "category": "process_management",
      "input": "Display the status of all containers, both running and stopped. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 37511,
      "type": "docker",
      "category": "process_management",
      "input": "Show all containers along with their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37512,
      "type": "docker",
      "category": "image_management",
      "input": "Could you show me the repositories and tags used for your images?",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37513,
      "type": "docker",
      "category": "image_management",
      "input": "Display the images that are not associated with any running containers.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37514,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers with the volume \"/data\" and the ancestor \"postgres\".",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37515,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the repository names, tags, and IDs of the images that are not in use.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37516,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the details of the 4 most recent containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 37517,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that exited with a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37518,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the names, images, and status of all containers.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37519,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the list of all Docker images, regardless of whether they are dangling or not. Also, provide their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37520,
      "type": "docker",
      "category": "process_management",
      "input": "Display for me the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37521,
      "type": "docker",
      "category": "process_management",
      "input": "Please, return the details of the first five running containers.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37522,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch a list of all images' repository, tag, and ID, excluding the ones created after the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37523,
      "type": "docker",
      "category": "process_management",
      "input": "Display the list of currently running containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37524,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the images along with their repository, tag, and digest on the server.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37525,
      "type": "docker",
      "category": "image_management",
      "input": "Please provide me with a list of images created after the nginx:alpine image.",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37526,
      "type": "docker",
      "category": "image_management",
      "input": "Display a list of all Docker images, including the dangling ones. Please provide their repository, tags, and IDs as well.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37527,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, can you display the containers with exited status?",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37528,
      "type": "docker",
      "category": "container_management",
      "input": "Hey there, I need you to carefully stop all the active containers within 5 seconds, Docker.",
      "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37529,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, show me the running containers, but only those that are using the 'network=host' filter.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37530,
      "type": "docker",
      "category": "process_management",
      "input": "List only the container IDs for running containers. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37531,
      "type": "docker",
      "category": "process_management",
      "input": "Please kill my_container1 and my_container2, ensuring a graceful termination with the SIGINT signal.",
      "output": "\"docker kill -s SIGINT my_container1 my_container2\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37532,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, could you kindly cease the containers using my image?",
      "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37533,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the images with the label \"maintainer=nginx\" and display their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37534,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all running containers in the frontend network along with their respective statuses.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37535,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the containers that are marked as healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37536,
      "type": "docker",
      "category": "process_management",
      "input": "I'm interested in knowing the names and images of all containers that are currently running.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37537,
      "type": "docker",
      "category": "image_management",
      "input": "Display all the Docker images, regardless of whether they are dangling or not, and provide their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37538,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers running with the Ubuntu image.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37539,
      "type": "docker",
      "category": "process_management",
      "input": "Only show me the containers that are healthy.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37540,
      "type": "docker",
      "category": "image_management",
      "input": "I want to see the images along with their associated digests. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 37541,
      "type": "docker",
      "category": "container_management",
      "input": "Hey, log in to myregistry.example.com using your username and password from ~/mypassword.txt.",
      "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 37542,
      "type": "docker",
      "category": "container_management",
      "input": "\"Dear Docker, kindly log in to myregistry.example.com with the username 'johndoe'.\"",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37543,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of the running containers that were created after 4f66ad9a0b2e. ",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37544,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the running tasks in Docker, please.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37545,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with a list of dangling images, please.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37546,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the running containers on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37547,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that started since 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37548,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers with port 9090 published and currently active.",
      "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37549,
      "type": "docker",
      "category": "process_management",
      "input": "Quickly stop all Docker containers, no questions asked!",
      "output": "\"docker kill -s SIGTERM $(docker ps -q)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37550,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the names and images of all currently running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37551,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with a list of containers currently running with the label from the vendor ACME.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37552,
      "type": "docker",
      "category": "process_management",
      "input": "Please display the running Docker containers created since 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37553,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the containers named \"my-container\" for me. ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 37554,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images generated since the nginx:alpine image.",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37555,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that exited successfully and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37556,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers with port 443 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37557,
      "type": "docker",
      "category": "process_management",
      "input": "Give me an overview of all containers and their status. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 37558,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see all containers that are running and exposing port 443.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37559,
      "type": "docker",
      "category": "container_management",
      "input": "You need to authenticate with Docker using Mary Doe's username (marydoe) and her password (herpassword).",
      "output": "\"docker login --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37560,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images alongside their repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37561,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the images and IDs of all the containers currently running.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37562,
      "type": "docker",
      "category": "container_management",
      "input": "Please provide the login details for Mary Doe - username: marydoe, password: herpassword.",
      "output": "\"docker login --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37563,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the images without truncating their information.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37564,
      "type": "docker",
      "category": "process_management",
      "input": "Terminate the instance of confusioner.",
      "output": "\"docker kill confusioner\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37565,
      "type": "docker",
      "category": "image_management",
      "input": "Docker, could you show me all the Docker images, whether they are dangling or not? Additionally, display their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37566,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with the containers that were launched after 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37567,
      "type": "docker",
      "category": "process_management",
      "input": "Provide the details of the recently executed container.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 37568,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the full information of all active containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37569,
      "type": "docker",
      "category": "container_management",
      "input": "It's time to authenticate, Docker. Log in with your username and password, please.",
      "output": "\"docker login --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37570,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that are running and are in a healthy condition.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37571,
      "type": "docker",
      "category": "image_management",
      "input": "Display the repositories and tags of your images, if possible.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37572,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the list of running containers with a creation time before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37573,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with a list of images that were created before \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37574,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the Docker image IDs. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 37575,
      "type": "docker",
      "category": "process_management",
      "input": "Bring up the list of containers that have exited before 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37576,
      "type": "docker",
      "category": "image_management",
      "input": "Show me a list of all the images along with their repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37577,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers that are in a healthy state.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37578,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the containers that have the volume as \"/data\" and are based on the \"postgres\" image.",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37579,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the list of containers that have exposed port 80. ",
      "output": "docker ps --filter 'expose=80'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37580,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with information about the nginx images.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37581,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have the name \"my-container\". ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 37582,
      "type": "docker",
      "category": "image_management",
      "input": "Please give me the list of all the images along with their respective repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37583,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that were running before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37584,
      "type": "docker",
      "category": "process_management",
      "input": "I require the details of the previously executed container.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 37585,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the repository, tag, and digest for the images in the system.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37586,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers that have port 9090 published.",
      "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37587,
      "type": "docker",
      "category": "process_management",
      "input": "Kindly stop my_container1 and my_container2 by sending them a SIGINT signal.",
      "output": "\"docker kill -s SIGINT my_container1 my_container2\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37588,
      "type": "docker",
      "category": "image_management",
      "input": "Can you provide me with the repositories and tags used for your images?",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37589,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the container IDs of all containers, irrespective of their current state. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37590,
      "type": "docker",
      "category": "process_management",
      "input": "Display the last 4 containers that were active. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 37591,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch me the images and present them in a table format with the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37592,
      "type": "docker",
      "category": "image_management",
      "input": "I need a list of just the Docker image IDs. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 37593,
      "type": "docker",
      "category": "process_management",
      "input": "Could you display the containers that have exited without any errors?",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37594,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch all the images with their repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37595,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the containers that have exited without errors.",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37596,
      "type": "docker",
      "category": "image_management",
      "input": "Please display all Docker images, even the ones that are not active currently.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 37597,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that have published port 8080 and are currently running. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37598,
      "type": "docker",
      "category": "process_management",
      "input": "Can you provide me the list of containers having /app as volume and mongo as ancestor?",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37599,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the repositories, tags, and IDs of the dangling images.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37600,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37601,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the details of any containers started after 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37602,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have the status as running and the network as my-network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37603,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve a list of all Docker images. I also need the dangling ones to be included. Please provide their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37604,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the running Docker containers that were created after 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37605,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of images that are not being used.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37606,
      "type": "docker",
      "category": "process_management",
      "input": "List only the containers that are currently active with volumes mounted at \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37607,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers that have port 8080 published and are currently running. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37608,
      "type": "docker",
      "category": "process_management",
      "input": "Display the names and statuses of all running containers, please.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37609,
      "type": "docker",
      "category": "container_management",
      "input": "\"Hey, Docker! It's time to log in. The username is johndoe.\"",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37610,
      "type": "docker",
      "category": "image_management",
      "input": "List all the images with their corresponding repository, tag, ID, and size in a table format.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37611,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the running tasks in Docker, please.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37612,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that have port 8080 published and are currently running. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37613,
      "type": "docker",
      "category": "process_management",
      "input": "Can you give me the IDs of the running containers? ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37614,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images since the nginx:alpine image.",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37615,
      "type": "docker",
      "category": "image_management",
      "input": "Show the Docker images that were created before the image \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37616,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the nginx images and their respective repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37617,
      "type": "docker",
      "category": "process_management",
      "input": "Give me an update on the status and sizes of the containers currently running.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37618,
      "type": "docker",
      "category": "image_management",
      "input": "Display the repository, tag, and ID of the images that were created before the latest nginx image.",
      "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37619,
      "type": "docker",
      "category": "container_management",
      "input": "Hey Docker, log in to my registry at myregistry.example.com using the username \"johndoe\" and the password \"mypassword\".",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37620,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with the digests for all the images in Docker. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 37621,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see a list of containers that are currently running. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37622,
      "type": "docker",
      "category": "container_management",
      "input": "Login using the credentials stored in the password file to access the system.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 37623,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are currently running on my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37624,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers that expose port 80.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37625,
      "type": "docker",
      "category": "image_management",
      "input": "I want an overview of all Docker images, including the ones that are not currently active.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 37626,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running and stopped containers. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 37627,
      "type": "docker",
      "category": "container_management",
      "input": "Stop ginto  after 10 seconds with grace.",
      "output": "\"docker stop -t 10 ginto\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37628,
      "type": "docker",
      "category": "process_management",
      "input": "Display the stopped containers.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37629,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve a list of containers that have exited with a status code of 1.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37630,
      "type": "docker",
      "category": "process_management",
      "input": "Please show me the containers that are running and exposing port 443.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=443'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37631,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers filtered by the Ubuntu ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37632,
      "type": "docker",
      "category": "process_management",
      "input": "Stop all containers with the image \"my_image\".",
      "output": "\"docker kill $(docker ps -q --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37633,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images and format them as a table with the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37634,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the names, images, and status of the containers for me.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37635,
      "type": "docker",
      "category": "process_management",
      "input": "Find all containers where the volume is \"/data\" and the ancestor is \"postgres\".",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37636,
      "type": "docker",
      "category": "container_management",
      "input": "Cease the operation of any containers that are currently running.",
      "output": "\"docker stop $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37637,
      "type": "docker",
      "category": "image_management",
      "input": "Show the Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37638,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers, even the inactive ones. Display the details of the first three.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37639,
      "type": "docker",
      "category": "process_management",
      "input": "List all containers, showing their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37640,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images along with their complete information.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37641,
      "type": "docker",
      "category": "container_management",
      "input": "Please log in to anotherregistry.example.com using your username \"johndoe\" and password \"mypassword\".",
      "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37642,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers in the frontend network with their running statuses.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37643,
      "type": "docker",
      "category": "container_management",
      "input": "Please authenticate yourself with myregistry.example.com using the provided username and password in ~/mypassword.txt.",
      "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 37644,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the details of the three latest containers, whether active or inactive.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37645,
      "type": "docker",
      "category": "process_management",
      "input": "Hey, Docker friend, could you display the running containers with the 'network=host' filter applied?",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37646,
      "type": "docker",
      "category": "process_management",
      "input": "List any containers that have been started after 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37647,
      "type": "docker",
      "category": "image_management",
      "input": "Can you fetch the nginx image from the source?",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37648,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the running containers' IDs and images, please.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37649,
      "type": "docker",
      "category": "process_management",
      "input": "Shut down reverseProxyGinto promptly.",
      "output": "\"docker kill reverseProxyGinto\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37650,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, it's time to log in. Use your username and password for authentication purposes.",
      "output": "\"docker login --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37651,
      "type": "docker",
      "category": "process_management",
      "input": "Please show the containers that have exited successfully.",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37652,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers with their names and images.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37653,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the details of all the images including their respective repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37654,
      "type": "docker",
      "category": "process_management",
      "input": "Please give me the names, images, and status of the containers.",
      "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37655,
      "type": "docker",
      "category": "container_management",
      "input": "Please terminate all my_image containers.",
      "output": "\"docker stop $(docker ps -q --filter status=running --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37656,
      "type": "docker",
      "category": "process_management",
      "input": "Show all the containers currently running and having the ancestor Ubuntu. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37657,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see all the containers currently running with the ACME label.",
      "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37658,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the containers currently running and having volumes attached to \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37659,
      "type": "docker",
      "category": "process_management",
      "input": "Don't keep me waiting, display the recent container information.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 37660,
      "type": "docker",
      "category": "container_management",
      "input": "Hi Docker, I need to log in as \"marydoe\" to proceed. Can you please assist me with that?",
      "output": "\"docker login --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37661,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with the names and images of all containers that are currently running.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37662,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of running containers with the Ubuntu image. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37663,
      "type": "docker",
      "category": "image_management",
      "input": "I would like to see a list of all Docker images, including the dangling ones, along with their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37664,
      "type": "docker",
      "category": "container_management",
      "input": "Mary Doe, please enter your username (marydoe) and password (herpassword) to login.",
      "output": "\"docker login --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37665,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running containers created since 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37666,
      "type": "docker",
      "category": "process_management",
      "input": "Return a list of running containers that have port 8080 published and are currently running. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37667,
      "type": "docker",
      "category": "process_management",
      "input": "List the status and sizes of all the containers that are currently running.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37668,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers currently active with volumes linked to \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37669,
      "type": "docker",
      "category": "image_management",
      "input": "Could you please give me a list of all the Docker images, even the dangling ones? Additionally, include their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37670,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve all containers that have the volume set to \"/data\" and are based on the \"postgres\" image.",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37671,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the list of the last five containers currently running.",
      "output": "docker ps -n 5",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37672,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, please perform a login to myregistry.example.com using the credentials \"johndoe\" as the username and \"mypassword\" as the password.",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37673,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the IDs and images of all running containers.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37674,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the details of containers that have exited with a successful status.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37675,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve a list of all Docker images, including the dangling ones, and provide their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37676,
      "type": "docker",
      "category": "process_management",
      "input": "Let me know about the container you ran last straight away.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 37677,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers with unhealthy health status.",
      "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37678,
      "type": "docker",
      "category": "image_management",
      "input": "Please show me the repositories and tags of your images when you get a chance.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37679,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the list of running containers that are derived from Debian, please.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37680,
      "type": "docker",
      "category": "process_management",
      "input": "I'm interested in seeing the names and statuses of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37681,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see only the IDs of the running containers. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37682,
      "type": "docker",
      "category": "container_management",
      "input": "Hey Docker, I need you to log in to myregistry.example.com. The username is \"johndoe\" and the password is stored in ~/mypassword.txt.",
      "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 37683,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve containers that have the volume set to \"/data\" and are based on the \"postgres\" image.",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37684,
      "type": "docker",
      "category": "process_management",
      "input": "Please present the details of the last executed container.",
      "output": "docker ps -l",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-l",
          "description": "Long listing format"
        }
      ]
    },
    {
      "id": 37685,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the running containers and provide their names and statuses.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37686,
      "type": "docker",
      "category": "image_management",
      "input": "I would appreciate it if you could show me the repositories and tags of your images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37687,
      "type": "docker",
      "category": "process_management",
      "input": "Please return the details of the three latest containers, including the inactive ones.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37688,
      "type": "docker",
      "category": "process_management",
      "input": "Show containers that are running and expose port 80.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37689,
      "type": "docker",
      "category": "process_management",
      "input": "Display the names and images of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37690,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the information of the 4 most recent containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 37691,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the names of the images that are dangling.  ",
      "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37692,
      "type": "docker",
      "category": "process_management",
      "input": "List the IDs of all the running containers. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37693,
      "type": "docker",
      "category": "image_management",
      "input": "Docker, show me all the Docker images, including the ones that are dangling, and provide their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37694,
      "type": "docker",
      "category": "process_management",
      "input": "Display the running Docker containers that started from 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37695,
      "type": "docker",
      "category": "process_management",
      "input": "Hey Docker, display the running containers, but don't forget to filter them by 'network=host'.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37696,
      "type": "docker",
      "category": "process_management",
      "input": "Is it possible to provide me with the names and statuses of the running containers?",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37697,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve the list of running containers that have Debian as their ancestor.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37698,
      "type": "docker",
      "category": "container_management",
      "input": "I kindly request you to stop all running my_image containers.",
      "output": "\"docker stop $(docker ps -q --filter status=running --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37699,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers with the name \"my-container\". ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 37700,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the containers having the ancestor set as mongo and volume set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37701,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that exited before the container 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37702,
      "type": "docker",
      "category": "process_management",
      "input": "Find the containers that have exited before the container with ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37703,
      "type": "docker",
      "category": "image_management",
      "input": "Show the images and their corresponding repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37704,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the details of all the images with their respective repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37705,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, fetch the running containers derived from Debian.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37706,
      "type": "docker",
      "category": "image_management",
      "input": "Display all the images stored in Docker.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37707,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers with the status set as \"exited\" and the image ancestor set as Alpine.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37708,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the status of all containers, whether they are running or stopped. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 37709,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images with dangling status.",
      "output": "docker images -f dangling=true",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37710,
      "type": "docker",
      "category": "process_management",
      "input": "Let me see the list of tasks running in Docker.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37711,
      "type": "docker",
      "category": "process_management",
      "input": "Help me find the names and statuses of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37712,
      "type": "docker",
      "category": "image_management",
      "input": "Get me all the available images stored in Docker.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37713,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the containers having the ancestor set to mongo and volume set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37714,
      "type": "docker",
      "category": "image_management",
      "input": "Could you please let me know the nginx images that are present?",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37715,
      "type": "docker",
      "category": "image_management",
      "input": "Give me all the Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37716,
      "type": "docker",
      "category": "image_management",
      "input": "Give me a list of all the Docker images and their associated digests. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 37717,
      "type": "docker",
      "category": "container_management",
      "input": "Hi Docker! Can you please log in to yetanotherregistry.example.net using the username \"marydoe\" and the password \"herpassword\"?",
      "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37718,
      "type": "docker",
      "category": "container_management",
      "input": "Johndoe, please login to the Docker to proceed.",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37719,
      "type": "docker",
      "category": "process_management",
      "input": "Display the active containers that have port 8080 published. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37720,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the list of running containers with a healthy health status.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37721,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, I want you to gracefully terminate my_container1 and my_container2 using the SIGINT signal.",
      "output": "\"docker kill -s SIGINT my_container1 my_container2\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37722,
      "type": "docker",
      "category": "process_management",
      "input": "Show the containers that are running.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37723,
      "type": "docker",
      "category": "image_management",
      "input": "Display a list of all Docker images, and make sure to include the dangling ones. Provide their repository, tags, and IDs as well.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37724,
      "type": "docker",
      "category": "process_management",
      "input": "Display containers that are running with the Ubuntu ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37725,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the images along with their repository, tag, and ID.",
      "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37726,
      "type": "docker",
      "category": "container_management",
      "input": "\"Could you log me in to myregistry.example.com? Use 'johndoe' as the username.\"",
      "output": "\"docker login myregistry.example.com --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37727,
      "type": "docker",
      "category": "image_management",
      "input": "Find all the images that have the label \"maintainer=nginx\" and show their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37728,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers that exited before having the ID 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37729,
      "type": "docker",
      "category": "image_management",
      "input": "Please provide me with the details of all the images including their repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37730,
      "type": "docker",
      "category": "process_management",
      "input": "Could you show me the running containers, please? ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37731,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers with the volume set to \"/data\" and the ancestor set as \"postgres\".",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37732,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers in a healthy state.",
      "output": "docker ps --filter 'health=healthy'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37733,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the images information with the repository, tag, ID, and size represented in a table.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37734,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are running and listening on port 8080. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37735,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers, including the inactive ones. Show the details for the first three.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37736,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the images that were created before \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37737,
      "type": "docker",
      "category": "image_management",
      "input": "List all the images without cutting off any information.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37738,
      "type": "docker",
      "category": "process_management",
      "input": "I would like to see the running containers and their sizes.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37739,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers that are running and exposed on port 8080. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37740,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve a list of all containers with their respective names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37741,
      "type": "docker",
      "category": "process_management",
      "input": "Display all containers, including their status. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 37742,
      "type": "docker",
      "category": "container_management",
      "input": "Please log in to anotherregistry.example.com with the username \"johndoe\" and password \"mypassword\" for authentication.",
      "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37743,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the details of all the images with their repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37744,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the complete list of images.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37745,
      "type": "docker",
      "category": "process_management",
      "input": "Show containers that are running and have the Ubuntu ancestor.",
      "output": "docker ps --filter 'ancestor=ubuntu'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37746,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with a breakdown of the containers that are currently running and their sizes.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37747,
      "type": "docker",
      "category": "process_management",
      "input": "List down all the containers that are currently running and have the network as my-network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37748,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, list the running containers, but make sure to only include those that have the 'network=host' filter.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37749,
      "type": "docker",
      "category": "process_management",
      "input": "I'm interested in knowing the names and images of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37750,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers that have been created since 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37751,
      "type": "docker",
      "category": "process_management",
      "input": "Find and display all the containers named \"my-container\". ",
      "output": "docker ps --filter 'name=my-container'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-c",
          "description": "Short option flag -c"
        }
      ]
    },
    {
      "id": 37752,
      "type": "docker",
      "category": "image_management",
      "input": "Can you get me the list of nginx images?",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37753,
      "type": "docker",
      "category": "process_management",
      "input": "Provide a list of containers that were launched since 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37754,
      "type": "docker",
      "category": "process_management",
      "input": "List down all the running Docker containers filtered by creation since 4f66ad9a0b2e.",
      "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37755,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running containers with a healthy status.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37756,
      "type": "docker",
      "category": "process_management",
      "input": "List all the tasks that are currently running in Docker.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37757,
      "type": "docker",
      "category": "process_management",
      "input": "Let me know about the containers that exited successfully and have a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37758,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are running and expose port 80.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37759,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a detailed summary of all the running containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37760,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with a list of running containers that are running on port 8080. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37761,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the full details of all the images.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37762,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are not running and have the parent image set as Alpine.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37763,
      "type": "docker",
      "category": "image_management",
      "input": "I need to know the IDs of Docker images. ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 37764,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the list of containers with volumes mounted at \"/data\" and are currently active.",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37765,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, could you please cease all the running containers within 5 seconds with proper care?",
      "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37766,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the container IDs for the running containers. ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37767,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers with a status of running. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37768,
      "type": "docker",
      "category": "process_management",
      "input": "List all running containers created before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37769,
      "type": "docker",
      "category": "process_management",
      "input": "Please display all the containers with the volume set as \"/data\" and the image set as \"postgres\".",
      "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37770,
      "type": "docker",
      "category": "process_management",
      "input": "Display the information of the last 4 containers. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 37771,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the containers that have port 8080 published and are running.",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37772,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the details of the images such as repository, tag, and digest.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37773,
      "type": "docker",
      "category": "image_management",
      "input": "List all Docker images, including those that are not being used currently.",
      "output": "docker images --all",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--all",
          "description": "Long option flag --all"
        }
      ]
    },
    {
      "id": 37774,
      "type": "docker",
      "category": "process_management",
      "input": "Return a list of running containers that are currently listening on port 8080. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37775,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers in the frontend network filtered by running status.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37776,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch all the images and format them in a table with the repository, tag, ID, and size.",
      "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37777,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch the containers that have volumes mounted at \"/data\" and are currently running.",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37778,
      "type": "docker",
      "category": "process_management",
      "input": "List the running containers and filter them by volumes mounted at \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37779,
      "type": "docker",
      "category": "image_management",
      "input": "Retrieve the list of all Docker images, even the dangling ones, and include their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37780,
      "type": "docker",
      "category": "image_management",
      "input": "List all the images along with their digests. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 37781,
      "type": "docker",
      "category": "image_management",
      "input": "Display the images' repository, tag, and digest information.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37782,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are running and have port 80 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37783,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers which are currently running and healthy.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37784,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that have been created before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37785,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me with the details of the three latest containers, regardless of their status.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37786,
      "type": "docker",
      "category": "process_management",
      "input": "Can you provide me with the IDs of running containers? ",
      "output": "docker ps -q",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37787,
      "type": "docker",
      "category": "image_management",
      "input": "I need to see the digests for all the Docker images. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 37788,
      "type": "docker",
      "category": "container_management",
      "input": "Please login using Mary Doe's username and her password.",
      "output": "\"docker login --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37789,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers running with a creation time before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37790,
      "type": "docker",
      "category": "image_management",
      "input": "Please show me the repositories and tags of your images.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37791,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve a list of all containers, with their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37792,
      "type": "docker",
      "category": "process_management",
      "input": "Please provide me with a list of containers that are currently running. ",
      "output": "docker ps --filter 'status=running'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37793,
      "type": "docker",
      "category": "container_management",
      "input": "\"Docker, the next step requires you to log in to the new registry. Your username, Mary Doe, will grant you access.\"",
      "output": "\"docker login newregistry.example.org --username=marydoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37794,
      "type": "docker",
      "category": "process_management",
      "input": "Check the status of all containers, regardless of their state.",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 37795,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, show me the running containers and filter them with the 'network=host' criteria.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37796,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with a list of images that were built before the image \"nginx:latest\".",
      "output": "docker images -f before=nginx:latest",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37797,
      "type": "docker",
      "category": "image_management",
      "input": "Could you fetch the Docker image IDs for me? ",
      "output": "docker images --quiet",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--quiet",
          "description": "Long option flag --quiet"
        }
      ]
    },
    {
      "id": 37798,
      "type": "docker",
      "category": "process_management",
      "input": "Kindly display the names and statuses of all running containers.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37799,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, list all the containers with exited status.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37800,
      "type": "docker",
      "category": "process_management",
      "input": "Provide me the complete details of currently active containers.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37801,
      "type": "docker",
      "category": "image_management",
      "input": "Can you show me the repository, tag, and ID of the mongo images?",
      "output": "docker images mongo --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37802,
      "type": "docker",
      "category": "container_management",
      "input": "Kindly halt the container named \"my_container\".",
      "output": "\"docker stop my_container\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37803,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the containers that have exited successfully.",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37804,
      "type": "docker",
      "category": "process_management",
      "input": "Display containers that exited successfully with a status of 0.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37805,
      "type": "docker",
      "category": "process_management",
      "input": "Retrieve a list of all containers and their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37806,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, fetch the running containers whose base image is Debian.",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37807,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with the complete details of the images in the list.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37808,
      "type": "docker",
      "category": "container_management",
      "input": "\"Docker, please login immediately. Use the username johndoe.\"",
      "output": "\"docker login --username=johndoe\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        }
      ]
    },
    {
      "id": 37809,
      "type": "docker",
      "category": "container_management",
      "input": "Kindly enter your login details saved in the specified file for authentication purposes.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 37810,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the information about the active containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37811,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the information of the last three containers, whether active or inactive.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37812,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the digests of all the Docker images. ",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 37813,
      "type": "docker",
      "category": "container_management",
      "input": "Please stop my container.",
      "output": "\"docker stop -t 0 my_container\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37814,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the running containers.",
      "output": "docker ps",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37815,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the images and their corresponding repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37816,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the containers that have port 8080 published and are running. ",
      "output": "docker ps --filter 'publish=8080'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37817,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see the names and images of all containers that are currently running.",
      "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37818,
      "type": "docker",
      "category": "image_management",
      "input": "Give me the repository, tag, and digest for each image.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37819,
      "type": "docker",
      "category": "image_management",
      "input": "Sort the images by the label \"maintainer=nginx\" and display their repository, tag, and ID.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37820,
      "type": "docker",
      "category": "process_management",
      "input": "I need a list of running containers that were created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37821,
      "type": "docker",
      "category": "process_management",
      "input": "List the names of containers running before 3e33ad9a0b2e.",
      "output": "docker ps --filter 'before=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37822,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch me the available Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37823,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are currently running on port 8080 and have port 8080 published. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37824,
      "type": "docker",
      "category": "image_management",
      "input": "Display all the images without truncating any information.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37825,
      "type": "docker",
      "category": "container_management",
      "input": "Hey there, please authenticate yourself by logging in with your username and password.",
      "output": "\"docker login --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37826,
      "type": "docker",
      "category": "process_management",
      "input": "Get me the list of all containers running the Ubuntu image. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37827,
      "type": "docker",
      "category": "process_management",
      "input": "Please terminate all Docker containers right now.",
      "output": "\"docker kill -s SIGTERM $(docker ps -q)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37828,
      "type": "docker",
      "category": "process_management",
      "input": "Display all the containers with the ancestor set to mongo and volume set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37829,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the nginx images along with their relevant details, like the repository, tag, and ID.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37830,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers in the frontend network and their respective statuses.",
      "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37831,
      "type": "docker",
      "category": "process_management",
      "input": "Can you show me the containers that have exited with a code of 0?",
      "output": "docker ps --filter 'exited=0'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37832,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers, even the inactive ones. Show details for the first three.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37833,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of all running containers that are running on port 8080. ",
      "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37834,
      "type": "docker",
      "category": "process_management",
      "input": "Display the Docker containers that have an exited status and are derived from the nginx image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37835,
      "type": "docker",
      "category": "container_management",
      "input": "Remove the container with the ID \"abcd1234\".",
      "output": "\"docker login --username=marydoe --password-stdin < ~/herpassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 37836,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers with their corresponding images.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37837,
      "type": "docker",
      "category": "image_management",
      "input": "Show me all the nginx images.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37838,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that are in exited status.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37839,
      "type": "docker",
      "category": "process_management",
      "input": "List the Docker containers that have exited and are based on the nginx image.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37840,
      "type": "docker",
      "category": "process_management",
      "input": "Docker, I'm curious to see the running containers, but only those that are using the 'network=host' filter.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37841,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the running tasks in Docker.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37842,
      "type": "docker",
      "category": "image_management",
      "input": "Display the images' repository, tag, and digest information on the server.",
      "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37843,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch a list of containers that have exited with a status code of 1.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37844,
      "type": "docker",
      "category": "process_management",
      "input": "Display all containers, along with their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37845,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the active containers with volumes connected to \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37846,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are running and marked as healthy.",
      "output": "docker ps --filter 'status=running' --filter 'health=healthy'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37847,
      "type": "docker",
      "category": "process_management",
      "input": "Stop reverseProxyGinto without delay.",
      "output": "\"docker kill reverseProxyGinto\"",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37848,
      "type": "docker",
      "category": "process_management",
      "input": "Display the IDs and images of the containers.",
      "output": "docker ps --format '{{.ID}}: {{.Image}}'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37849,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the containers that are running and expose port 80.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37850,
      "type": "docker",
      "category": "image_management",
      "input": "Show me the repository, tag, and ID of images that are maintained by nginx.",
      "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37851,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch the list of images and display their repository, tag, and ID.",
      "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37852,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers that are currently running and have the Ubuntu image. ",
      "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37853,
      "type": "docker",
      "category": "process_management",
      "input": "List all the running containers that were created after the 3e33ad9a0b2e commit.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37854,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the containers, including their names, images, and status.",
      "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37855,
      "type": "docker",
      "category": "image_management",
      "input": "Display the list of all the images along with their respective repository, tag, and ID.",
      "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37856,
      "type": "docker",
      "category": "process_management",
      "input": "Fetch me the containers that have the status running on the my-network network.",
      "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'",
      "complexity": "advanced",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37857,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers that have stopped running.",
      "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37858,
      "type": "docker",
      "category": "process_management",
      "input": "Hey there, show me the running containers, but don't forget to apply the 'network=host' filter.",
      "output": "docker ps --filter 'network=host'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37859,
      "type": "docker",
      "category": "image_management",
      "input": "Fetch all the Docker images.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37860,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers currently running along with their sizes.  ",
      "output": "docker ps -s",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-s",
          "description": "Short option flag -s"
        }
      ]
    },
    {
      "id": 37861,
      "type": "docker",
      "category": "container_management",
      "input": "Login to your account by entering the username and password saved in the text file.",
      "output": "\"docker login --username=johndoe --password-stdin < ~/mypassword.txt\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password-stdin",
          "description": "Long option flag --password-stdin"
        }
      ]
    },
    {
      "id": 37862,
      "type": "docker",
      "category": "container_management",
      "input": "Could you login to the new registry? Use your username and password.",
      "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37863,
      "type": "docker",
      "category": "process_management",
      "input": "Give me a list of containers that are currently running with volumes linked to \"/data\".",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37864,
      "type": "docker",
      "category": "process_management",
      "input": "Display the containers that are not running and have the ancestor set as Alpine.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37865,
      "type": "docker",
      "category": "process_management",
      "input": "Tell me the information of the three most recent containers.",
      "output": "docker ps -a -n 3",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-n",
          "description": "Short option flag -n"
        }
      ]
    },
    {
      "id": 37866,
      "type": "docker",
      "category": "image_management",
      "input": "Please display all the Docker images, including the dangling ones, and provide their repository, tags, and IDs.",
      "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37867,
      "type": "docker",
      "category": "process_management",
      "input": "Please list all the containers having the ancestor set to mongo and volumes set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37868,
      "type": "docker",
      "category": "process_management",
      "input": "List the containers that are currently running and have port 80 exposed.",
      "output": "docker ps -a --filter 'status=running' --filter 'expose=80'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37869,
      "type": "docker",
      "category": "process_management",
      "input": "Please list all the containers in exited status, Docker.",
      "output": "docker ps -a --filter 'status=exited'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37870,
      "type": "docker",
      "category": "image_management",
      "input": "Provide me with the digests of all the images available.",
      "output": "docker images --digests",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--digests",
          "description": "Long option flag --digests"
        }
      ]
    },
    {
      "id": 37871,
      "type": "docker",
      "category": "process_management",
      "input": "Show me the last 4 containers of this Docker. ",
      "output": "docker ps --last 4",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--last",
          "description": "Long option flag --last"
        }
      ]
    },
    {
      "id": 37872,
      "type": "docker",
      "category": "image_management",
      "input": "Get me the list of images in Docker.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37873,
      "type": "docker",
      "category": "image_management",
      "input": "List all the images available in Docker.",
      "output": "docker images",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37874,
      "type": "docker",
      "category": "process_management",
      "input": "Display the tasks that are running in Docker, please.",
      "output": "docker ps --filter 'is-task=true'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        },
        {
          "name": "-t",
          "description": "Short option flag -t"
        }
      ]
    },
    {
      "id": 37875,
      "type": "docker",
      "category": "container_management",
      "input": "Hey Docker, could you halt the containers associated with my image?",
      "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37876,
      "type": "docker",
      "category": "process_management",
      "input": "Please list all the containers with the volumes set to /app and the ancestor as mongo.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37877,
      "type": "docker",
      "category": "process_management",
      "input": "Show the running containers after 3e33ad9a0b2e.",
      "output": "docker ps --filter 'since=3e33ad9a0b2e'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37878,
      "type": "docker",
      "category": "process_management",
      "input": "I need to see all the containers, including the stopped ones. ",
      "output": "docker ps -a",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        }
      ]
    },
    {
      "id": 37879,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, it's time to log in to myregistry.example.com. Your username is \"johndoe\" and your password is \"mypassword\".",
      "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37880,
      "type": "docker",
      "category": "process_management",
      "input": "I want to see a list of all containers, regardless of their status. ",
      "output": "docker ps -a -q",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    },
    {
      "id": 37881,
      "type": "docker",
      "category": "image_management",
      "input": "Gather the repository, tag, and ID of all the nginx images.",
      "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--format",
          "description": "Output formatting template"
        }
      ]
    },
    {
      "id": 37882,
      "type": "docker",
      "category": "container_management",
      "input": "Login with the credentials of Mary Doe (username: marydoe, password: herpassword).",
      "output": "\"docker login --username=marydoe --password=herpassword\"",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "--username",
          "description": "Long option flag --username"
        },
        {
          "name": "--password",
          "description": "Long option flag --password"
        }
      ]
    },
    {
      "id": 37883,
      "type": "docker",
      "category": "image_management",
      "input": "Include all the information while presenting the images.",
      "output": "docker images --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37884,
      "type": "docker",
      "category": "image_management",
      "input": "Display the images that have been built since the nginx:alpine image.",
      "output": "docker images -f since=nginx:alpine",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-f",
          "description": "Force operation"
        }
      ]
    },
    {
      "id": 37885,
      "type": "docker",
      "category": "process_management",
      "input": "Show me all the active containers with their complete details.",
      "output": "docker ps --no-trunc",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--no-trunc",
          "description": "Long option flag --no-trunc"
        }
      ]
    },
    {
      "id": 37886,
      "type": "docker",
      "category": "process_management",
      "input": "List all the containers with the status set as \"exited\" and the parent image set as Alpine.",
      "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37887,
      "type": "docker",
      "category": "process_management",
      "input": "Find all the containers with the ancestor as mongo and volumes set to /app.",
      "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37888,
      "type": "docker",
      "category": "process_management",
      "input": "Give me the containers that have volumes connected to \"/data\" and are currently running.",
      "output": "docker ps --filter 'volume=/data'",
      "complexity": "basic",
      "parameters": [
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37889,
      "type": "docker",
      "category": "image_management",
      "input": "I want to see the available nginx images.",
      "output": "docker images nginx",
      "complexity": "basic",
      "parameters": []
    },
    {
      "id": 37890,
      "type": "docker",
      "category": "process_management",
      "input": "List the running containers which were created after the commit 3e33ad9a0b2e.",
      "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'",
      "complexity": "intermediate",
      "parameters": [
        {
          "name": "-a",
          "description": "Show all items"
        },
        {
          "name": "--filter",
          "description": "Long option flag --filter"
        }
      ]
    },
    {
      "id": 37891,
      "type": "docker",
      "category": "container_management",
      "input": "Docker, stop the execution of all existing containers at once.",
      "output": "\"docker stop $(docker ps -q)\"",
      "complexity": "basic",
      "parameters": [
        {
          "name": "-q",
          "description": "Quiet mode"
        }
      ]
    }
  ]
}